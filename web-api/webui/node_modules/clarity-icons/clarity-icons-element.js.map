{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b05e35d2ff10d36b5423","webpack:///./src/clarity-icons/clarity-icons-api.ts","webpack:///./src/clarity-icons/clarity-icons-element.ts"],"names":[],"mappings":"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","file":"clarity-icons-element.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b05e35d2ff10d36b5423","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {IconAlias} from \"./interfaces/icon-alias\";\nimport {IconTemplate} from \"./interfaces/icon-template\";\n\nconst iconShapeSources: IconTemplate = {};\n\nexport class ClarityIconsApi {\n    private static singleInstance: ClarityIconsApi;\n\n    private constructor() {}\n\n    static get instance(): ClarityIconsApi {\n        if (!ClarityIconsApi.singleInstance) {\n            ClarityIconsApi.singleInstance = new ClarityIconsApi();\n        }\n\n        return ClarityIconsApi.singleInstance;\n    }\n\n    private validateName(name: string): boolean {\n        if (name.length === 0) {\n            throw new Error(\"Shape name or alias must be a non-empty string!\");\n        }\n\n        if (/\\s/.test(name)) {\n            throw new Error(\"Shape name or alias must not contain any whitespace characters!\");\n        }\n\n        return true;\n    }\n\n    private setIconTemplate(shapeName: string, shapeTemplate: string): void {\n        const trimmedShapeTemplate = shapeTemplate.trim();\n\n        if (this.validateName(shapeName)) {\n            // if the shape name exists, delete it.\n            if (iconShapeSources[shapeName]) {\n                delete iconShapeSources[shapeName];\n            }\n\n            iconShapeSources[shapeName] = trimmedShapeTemplate;\n        }\n    }\n\n    private setIconAliases(templates: IconTemplate, shapeName: string, aliasNames: string[]): void {\n        for (const aliasName of aliasNames) {\n            if (this.validateName(aliasName)) {\n                Object.defineProperty(templates, aliasName, {\n                    get: function() {\n                        return templates[shapeName];\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            }\n        }\n    }\n\n    add(icons?: IconTemplate): void {\n        if (typeof icons !== \"object\") {\n            throw new Error(`The argument must be an object literal passed in the following pattern: \n                { \"shape-name\": \"shape-template\" }`);\n        }\n\n        for (const shapeName in icons) {\n            if (icons.hasOwnProperty(shapeName)) {\n                this.setIconTemplate(shapeName, icons[shapeName]);\n            }\n        }\n    }\n\n    has(shapeName: string): boolean {\n        return !!iconShapeSources[shapeName];\n    }\n\n    get(shapeName?: string): any {\n        // if shapeName is not given, return all icon templates.\n        if (!shapeName) {\n            return iconShapeSources;\n        }\n\n        if (typeof shapeName !== \"string\") {\n            throw new TypeError(\"Only string argument is allowed in this method.\");\n        }\n\n        // if shapeName doesn't exist in the icons templates, throw an error.\n        if (!this.has(shapeName)) {\n            throw new Error(`'${shapeName}' is not found in the Clarity Icons set.`);\n        }\n\n        return iconShapeSources[shapeName];\n    }\n\n    alias(aliases?: IconAlias): void {\n        if (typeof aliases !== \"object\") {\n            throw new Error(`The argument must be an object literal passed in the following pattern: \n                { \"shape-name\": [\"alias-name\", ...] }`);\n        }\n\n        for (const shapeName in aliases) {\n            if (aliases.hasOwnProperty(shapeName)) {\n                if (iconShapeSources.hasOwnProperty(shapeName)) {\n                    // set an alias to the icon if it exists in iconShapeSources.\n                    this.setIconAliases(iconShapeSources, shapeName, aliases[shapeName]);\n                } else if (iconShapeSources.hasOwnProperty(shapeName)) {\n                    // set an alias to the icon if it exists in iconShapeSources.\n                    this.setIconAliases(iconShapeSources, shapeName, aliases[shapeName]);\n                } else {\n                    throw new Error(\"The icon '\" + shapeName + \"' you are trying to set an alias to doesn't exist!\");\n                }\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clarity-icons/clarity-icons-api.ts","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {ClarityIconsApi} from \"./clarity-icons-api\";\n\n/* CLR-ICON CUSTOM ELEMENT */\n\nlet clrIconId = 0;\nconst offScreenSpan = document.createElement(\"span\");\noffScreenSpan.className = \"is-off-screen\";\n\nlet parentConstructor = function() {\n    return HTMLElement.apply(this, arguments);\n};\nif (typeof Reflect === \"object\") {\n    parentConstructor = function() {\n        return (Reflect as any).construct(HTMLElement, arguments, this.constructor);\n    };\n}\n\nexport function ClarityIconElement() {\n    \"use strict\";\n\n    const _this = (parentConstructor as any).apply(this, arguments);\n\n    _this.clrIconUniqId = \"_clr_icon_\" + clrIconId;\n    clrIconId++;\n\n    return _this;\n}\n\n(ClarityIconElement as any).observedAttributes = [\"shape\", \"size\", \"title\"];\n\nClarityIconElement.prototype = Object.create(\n    HTMLElement.prototype, {constructor: {configurable: true, writable: true, value: ClarityIconElement}});\n\nClarityIconElement.prototype.constructor = ClarityIconElement;\n\nClarityIconElement.prototype._appendCustomTitle = function() {\n    const cloneOffScreenSpan = <HTMLElement>offScreenSpan.cloneNode(false);\n    cloneOffScreenSpan.id = this.clrIconUniqId;\n    cloneOffScreenSpan.textContent = this.currentTitleAttrVal;\n    this.appendChild(cloneOffScreenSpan);\n};\n\nClarityIconElement.prototype._setIconSize = function(size: string) {\n    if (!Number(size) || Number(size) < 0) {\n        this.style.width = null;   // fallback to the original stylesheet value\n        this.style.height = null;  // fallback to the original stylesheet value\n    } else {\n        this.style.width = size + \"px\";\n        this.style.height = size + \"px\";\n    }\n};\n\nClarityIconElement.prototype.connectedCallback = function() {\n    // One thing to note here is that the attributeChangedCallback method is called for every attribute first\n    // before this connectedCallback method called only once when the custom element is inserted into the DOM.\n    // So we could check whether the attribute values really changed or not.\n    // If not, we don't need to execute the same codes again.\n\n    if (this.hasAttribute(\"size\")) {\n        const sizeAttrValue = this.getAttribute(\"size\");\n\n        if (this.currentSizeAttrVal !== sizeAttrValue) {\n            this.currentSizeAttrVal = sizeAttrValue;\n            this._setIconSize(sizeAttrValue);\n        }\n    }\n\n    // Note: the size attribute is irrelevant from the shape template;\n    // That's why the size checking placed before detecting changes in shape and title attributes.\n    // This means even if the shape is not found, the injected shape will have the user-given size.\n\n    if (this.hasAttribute(\"shape\")) {\n        const shapeAttrValue = this.getAttribute(\"shape\").split(/\\s/)[0];\n\n        if (shapeAttrValue === this.currentShapeAttrVal) {\n            return;\n        }\n\n        this.currentShapeAttrVal = shapeAttrValue;\n\n        if (ClarityIconsApi.instance.has(this.currentShapeAttrVal)) {\n            this.currentShapeTemplate = ClarityIconsApi.instance.get(this.currentShapeAttrVal);\n        } else {\n            this._injectErrorTemplate();\n            return;\n        }\n    }\n\n\n    if (this.hasAttribute(\"title\")) {\n        const titleAttrValue = this.getAttribute(\"title\");\n\n        if (this.currentTitleAttrVal !== titleAttrValue) {\n            this.currentTitleAttrVal = titleAttrValue;\n        }\n\n        if (!this.currentShapeAttrVal) {\n            return;\n        }\n    }\n\n    this._injectTemplate();\n};\n\nClarityIconElement.prototype.attributeChangedCallback = function(attributeName: string, oldValue: string,\n                                                                 newValue: string) {\n    if (attributeName === \"size\") {\n        this._setIconSize(newValue);\n    }\n\n    // Note: the size attribute is irrelavent from the shape template;\n    // That's why the size checking placced before detecting changes in shape and title attributes.\n    // This means even if the shape is not found, the injected shape will have the user-given size.\n\n    if (attributeName === \"shape\") {\n        this.currentShapeAttrVal = newValue.split(/\\s/)[0];\n\n        if (ClarityIconsApi.instance.has(this.currentShapeAttrVal)) {\n            this.currentShapeTemplate = ClarityIconsApi.instance.get(this.currentShapeAttrVal);\n        } else {\n            this._injectErrorTemplate();\n            return;\n        }\n    }\n    if (attributeName === \"title\") {\n        this.currentTitleAttrVal = newValue;\n\n        if (!this.currentShapeAttrVal) {\n            return;\n        }\n    }\n\n    this._injectTemplate();\n};\n\nClarityIconElement.prototype._setAriaLabelledBy = function() {\n    const existingAriaLabelledBy: string = this.getAttribute(\"aria-labelledby\");\n    if (!existingAriaLabelledBy) {\n        this.setAttribute(\"aria-labelledby\", this.clrIconUniqId);\n    } else if (existingAriaLabelledBy && existingAriaLabelledBy.indexOf(this.clrIconUniqId) < 0) {\n        this.setAttribute(\"aria-labelledby\", existingAriaLabelledBy + \" \" + this.clrIconUniqId);\n    }\n};\n\nClarityIconElement.prototype._injectTemplate = function() {\n\n    this.innerHTML = this.currentShapeTemplate;\n\n    if (this.currentTitleAttrVal) {\n        this._setAriaLabelledBy();\n        this._appendCustomTitle();\n    }\n};\n\nClarityIconElement.prototype._injectErrorTemplate = function() {\n    console.error(`'${this.currentShapeAttrVal}' is not found in the Clarity Icons set.`);\n    this.currentShapeTemplate = ClarityIconsApi.instance.get(\"error\");\n    this._injectTemplate();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/clarity-icons/clarity-icons-element.ts"],"sourceRoot":""}