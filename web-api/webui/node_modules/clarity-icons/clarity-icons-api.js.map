{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b05e35d2ff10d36b5423","webpack:///./src/clarity-icons/clarity-icons-api.ts"],"names":[],"mappings":"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","file":"clarity-icons-api.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b05e35d2ff10d36b5423","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {IconAlias} from \"./interfaces/icon-alias\";\nimport {IconTemplate} from \"./interfaces/icon-template\";\n\nconst iconShapeSources: IconTemplate = {};\n\nexport class ClarityIconsApi {\n    private static singleInstance: ClarityIconsApi;\n\n    private constructor() {}\n\n    static get instance(): ClarityIconsApi {\n        if (!ClarityIconsApi.singleInstance) {\n            ClarityIconsApi.singleInstance = new ClarityIconsApi();\n        }\n\n        return ClarityIconsApi.singleInstance;\n    }\n\n    private validateName(name: string): boolean {\n        if (name.length === 0) {\n            throw new Error(\"Shape name or alias must be a non-empty string!\");\n        }\n\n        if (/\\s/.test(name)) {\n            throw new Error(\"Shape name or alias must not contain any whitespace characters!\");\n        }\n\n        return true;\n    }\n\n    private setIconTemplate(shapeName: string, shapeTemplate: string): void {\n        const trimmedShapeTemplate = shapeTemplate.trim();\n\n        if (this.validateName(shapeName)) {\n            // if the shape name exists, delete it.\n            if (iconShapeSources[shapeName]) {\n                delete iconShapeSources[shapeName];\n            }\n\n            iconShapeSources[shapeName] = trimmedShapeTemplate;\n        }\n    }\n\n    private setIconAliases(templates: IconTemplate, shapeName: string, aliasNames: string[]): void {\n        for (const aliasName of aliasNames) {\n            if (this.validateName(aliasName)) {\n                Object.defineProperty(templates, aliasName, {\n                    get: function() {\n                        return templates[shapeName];\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n            }\n        }\n    }\n\n    add(icons?: IconTemplate): void {\n        if (typeof icons !== \"object\") {\n            throw new Error(`The argument must be an object literal passed in the following pattern: \n                { \"shape-name\": \"shape-template\" }`);\n        }\n\n        for (const shapeName in icons) {\n            if (icons.hasOwnProperty(shapeName)) {\n                this.setIconTemplate(shapeName, icons[shapeName]);\n            }\n        }\n    }\n\n    has(shapeName: string): boolean {\n        return !!iconShapeSources[shapeName];\n    }\n\n    get(shapeName?: string): any {\n        // if shapeName is not given, return all icon templates.\n        if (!shapeName) {\n            return iconShapeSources;\n        }\n\n        if (typeof shapeName !== \"string\") {\n            throw new TypeError(\"Only string argument is allowed in this method.\");\n        }\n\n        // if shapeName doesn't exist in the icons templates, throw an error.\n        if (!this.has(shapeName)) {\n            throw new Error(`'${shapeName}' is not found in the Clarity Icons set.`);\n        }\n\n        return iconShapeSources[shapeName];\n    }\n\n    alias(aliases?: IconAlias): void {\n        if (typeof aliases !== \"object\") {\n            throw new Error(`The argument must be an object literal passed in the following pattern: \n                { \"shape-name\": [\"alias-name\", ...] }`);\n        }\n\n        for (const shapeName in aliases) {\n            if (aliases.hasOwnProperty(shapeName)) {\n                if (iconShapeSources.hasOwnProperty(shapeName)) {\n                    // set an alias to the icon if it exists in iconShapeSources.\n                    this.setIconAliases(iconShapeSources, shapeName, aliases[shapeName]);\n                } else if (iconShapeSources.hasOwnProperty(shapeName)) {\n                    // set an alias to the icon if it exists in iconShapeSources.\n                    this.setIconAliases(iconShapeSources, shapeName, aliases[shapeName]);\n                } else {\n                    throw new Error(\"The icon '\" + shapeName + \"' you are trying to set an alias to doesn't exist!\");\n                }\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/clarity-icons/clarity-icons-api.ts"],"sourceRoot":""}