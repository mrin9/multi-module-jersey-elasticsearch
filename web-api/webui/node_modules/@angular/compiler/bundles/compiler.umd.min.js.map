{"version":3,"sources":["/Users/iminar/Dev/angular/dist/packages-dist/compiler/bundles/compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","unescapeIdentifier","substr","unwrapResolvedMetadata","metadata","__symbolic","symbol","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isNgModule","getNgModuleMetadata","isInjectable","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","indentStr","level","half","floor","formatChain","chain","indent","line","column","postfix","next","formattedError","FORMATTED_MESSAGE","isFormattedError","shouldIgnore","metadataError","advise","METADATA_ERROR","isMetadataError","expandedMessage","REFERENCE_TO_NONEXPORTED_CLASS","VARIABLE_NOT_INITIALIZED","DESTRUCTURE_NOT_SUPPORTED","COULD_NOT_RESOLVE_TYPE","typeName","FUNCTION_CALL_NOT_SUPPORTED","REFERENCE_TO_LOCAL_SYMBOL","LAMBDA_NOT_SUPPORTED","messageAdvise","errorSummary","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","formatMetadataMessageChain","formatMetadataError","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","createOutputContext","genFilePath","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","SkipSelf","Optional","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","ElementRef","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","inputs","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","_f","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","encapsulation","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","hasHost","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","TypeCheckLocalResolver","defaultResolver","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","sourceOrStmts","ResolvedStaticSymbol","staticSymbolCache","errorRecorder","metadataCache","resolvedSymbols","resolvedFilePaths","importAs","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","staticSymbol","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","getImportAs","baseSymbol","baseImportAs","summarizedFileName","summarizedName","getResourcePath","getTypeArity","arity","getKnownModuleName","recordImportAs","sourceSymbol","targetSymbol","recordModuleNameForFileName","invalidateFile","symbols_1","ignoreErrorsFor","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","decorators","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","reportError","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","_originalFileMemo","getOriginalName","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","unwrappedTransformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","getSymbolByModule","containingFile","moduleNameToFileName","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","summaries","reexportSymbol","__symbol","toSummaryFileName","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","_externalIdentifierReferences","typeIndex","dirId","_createTypeCheckBlock","references_1","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","refSymbol","findDeclaration","tryFindDeclaration","resolvedMetadata","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyEagerly","simplifyLazily","simplifyNested","nestedContext","summaryMsg","simplifyCall","functionSymbol","targetFunction","targetExpression","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","reportingContext","PopulatedScope","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","fn$$1","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC,eACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZnxD,yBAA0C,SAAUl+B,QAEpD,QAASk+B,4BACL,GAAIhF,OAAQl5B,OAAO0kC,KAAKnvC,OAASA,IAqCjC,OApCA2jC,OAAMo2D,WACNR,OAAO1yF,QAAQ,SAAUmzF,aACrB,GAAqB5zF,SACjBgT,GAAK4gF,YAAYxwF,MAAM,KAAMywF,QAAU7gF,GAAG,GAAI8gF,cAAgB9gF,GAAG,GAChD+gF,WAAaD,cAAc1wF,MAAM,KAClD+P,GAAK0gF,QAAQzwF,MAAM,KAAM4wF,UAAY7gF,GAAG,GAAI8gF,UAAY9gF,GAAG,EAC/D6gF,WAAU5wF,MAAM,KAAK3C,QAAQ,SAAU+Y,KAAO,MAAO+jB,OAAMo2D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","file":"/Users/iminar/Dev/angular/dist/packages-dist/compiler/bundles/compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.1.0\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.1.0\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.1.0');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = /** @class */ (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = /** @class */ (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = /** @class */ (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = /** @class */ (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = /** @class */ (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = /** @class */ (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = /** @class */ (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = /** @class */ (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = /** @class */ (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = /** @class */ (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = /** @class */ (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = /** @class */ (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = /** @class */ (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = /** @class */ (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = /** @class */ (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = /** @class */ (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = /** @class */ (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = /** @class */ (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = /** @class */ (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = /** @class */ (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = /** @class */ (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = /** @class */ (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = /** @class */ (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = /** @class */ (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = /** @class */ (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = /** @class */ (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = /** @class */ (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = /** @class */ (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = /** @class */ (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = /** @class */ (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = /** @class */ (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = /** @class */ (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = /** @class */ (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = /** @class */ (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = /** @class */ (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = /** @class */ (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = /** @class */ (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = /** @class */ (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = /** @class */ (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = /** @class */ (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = /** @class */ (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = /** @class */ (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = /** @class */ (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = /** @class */ (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = /** @class */ (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = /** @class */ (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = /** @class */ (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = /** @class */ (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = /** @class */ (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = /** @class */ (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = /** @class */ (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var /** @type {?} */ hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var /** @type {?} */ shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var /** @type {?} */ scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var /** @type {?} */ part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = /** @class */ (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = /** @class */ (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = /** @class */ (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar TypeCheckLocalResolver = /** @class */ (function () {\n    function TypeCheckLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TypeCheckLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    };\n    return TypeCheckLocalResolver;\n}());\nvar defaultResolver = new TypeCheckLocalResolver();\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE : /** @type {?} */\n            ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ _originalFileMemo;\n        var /** @type {?} */ getOriginalName = function () {\n            if (!_originalFileMemo) {\n                // Guess what hte original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts').replace(/^.*node_modules[/\\\\]/, '');\n            }\n            return _originalFileMemo;\n        };\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\",\n                                line: map[\"line\"],\n                                character: map[\"character\"],\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name_1),\n                            line: map[\"line\"],\n                            character: map[\"character\"],\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return __assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        var /** @type {?} */ unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} references\n     * @return {?}\n     */\n    AotCompiler.prototype._externalIdentifierReferences = /**\n     * @param {?} references\n     * @return {?}\n     */\n    function (references) {\n        var /** @type {?} */ result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            var /** @type {?} */ token = createTokenForExternalReference(this._reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar FORMATTED_MESSAGE = 'ngFormattedMessage';\n/**\n * @param {?} level\n * @return {?}\n */\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    var /** @type {?} */ half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\n/**\n * @param {?} chain\n * @param {?=} indent\n * @return {?}\n */\nfunction formatChain(chain, indent) {\n    if (indent === void 0) { indent = 0; }\n    if (!chain)\n        return '';\n    var /** @type {?} */ position = chain.position ?\n        chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n        '';\n    var /** @type {?} */ prefix = position && indent === 0 ? position + \": \" : '';\n    var /** @type {?} */ postfix = position && indent !== 0 ? \" at \" + position : '';\n    var /** @type {?} */ message = \"\" + prefix + chain.message + postfix;\n    return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n}\n/**\n * @param {?} chain\n * @return {?}\n */\nfunction formattedError(chain) {\n    var /** @type {?} */ message = formatChain(chain) + '.';\n    var /** @type {?} */ error = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error))[FORMATTED_MESSAGE] = true;\n    error.chain = chain;\n    error.position = chain.position;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isFormattedError(error) {\n    return !!(/** @type {?} */ (error))[FORMATTED_MESSAGE];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            var /** @type {?} */ resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator\", undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        var /** @type {?} */ rootContext = context;\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            /**\n             * @param {?} nestedContext\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (/** @type {?} */ e) {\n                    if (isMetadataError(e)) {\n                        // Propagate the message text up but add a message to the chain that explains how we got\n                        // here.\n                        // e.chain implies e.symbol\n                        var /** @type {?} */ summaryMsg = e.chain ? 'references \\'' + /** @type {?} */ ((e.symbol)).name + '\\'' : errorSummary(e);\n                        var /** @type {?} */ summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                        var /** @type {?} */ chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain: chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @param {?} targetExpression\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyNested(functionSymbol, value_1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                var /** @type {?} */ position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    var /** @type {?} */ line = targetExpression.line;\n                    var /** @type {?} */ character = targetExpression.character;\n                    var /** @type {?} */ fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName: fileName, line: line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position: position\n                }, context);\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyEagerly(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyEagerly(expression['expression']);\n                                var /** @type {?} */ index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references, as symbol references have\n                                // been converted into 'resolved'\n                                // in the StaticSymbolResolver.\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (/** @type {?} */ e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message: message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message: message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        var /** @type {?} */ result;\n        try {\n            result = simplifyInContext(context, value, 0, 0);\n        }\n        catch (/** @type {?} */ e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    StaticReflector.prototype.error = /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    function (_a, reportingContext) {\n        var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    };\n    return StaticReflector;\n}());\nvar METADATA_ERROR = 'ngMetadataError';\n/**\n * @param {?} message\n * @param {?=} summary\n * @param {?=} advise\n * @param {?=} position\n * @param {?=} symbol\n * @param {?=} context\n * @param {?=} chain\n * @return {?}\n */\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    var /** @type {?} */ error = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error))[METADATA_ERROR] = true;\n    if (advise)\n        error.advise = advise;\n    if (position)\n        error.position = position;\n    if (summary)\n        error.summary = summary;\n    if (context)\n        error.context = context;\n    if (chain)\n        error.chain = chain;\n    if (symbol)\n        error.symbol = symbol;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isMetadataError(error) {\n    return !!(/** @type {?} */ (error))[METADATA_ERROR];\n}\nvar REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nvar VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nvar DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nvar COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nvar FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nvar REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nvar LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return \"Could not resolve type \" + context.typeName;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Function expressions are not supported in decorators\";\n    }\n    return message;\n}\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"Consider exporting '\" + context.className + \"'\";\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Consider exporting '\" + context.name + \"'\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Consider changing the function expression into an exported function\";\n    }\n    return undefined;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction errorSummary(error) {\n    if (error.summary) {\n        return error.summary;\n    }\n    switch (error.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error.context && error.context.className) {\n                return \"references non-exported class \" + error.context.className;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error.context && error.context.name) {\n                return \"calls '\" + error.context.name + \"'\";\n            }\n            return \"calls a function\";\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error.context && error.context.name) {\n                return \"references local variable \" + error.context.name;\n            }\n            return \"references a local variable\";\n    }\n    return 'contains the error';\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = /** @class */ (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} chain\n * @param {?} advise\n * @return {?}\n */\nfunction formatMetadataMessageChain(chain, advise) {\n    var /** @type {?} */ expanded = expandedMessage(chain.message, chain.context);\n    var /** @type {?} */ nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n    var /** @type {?} */ message = \"\" + expanded + nesting;\n    var /** @type {?} */ position = chain.position;\n    var /** @type {?} */ next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message: message, position: position, next: next };\n}\n/**\n * @param {?} e\n * @param {?} context\n * @return {?}\n */\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        // Produce a formatted version of the and leaving enough information in the original error\n        // to recover the formatting information to eventually produce a diagnostic error message.\n        var /** @type {?} */ position = e.position;\n        var /** @type {?} */ chain = {\n            message: \"Error during template compile of '\" + context.name + \"'\",\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        var /** @type {?} */ advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    JitCompiler.prototype._addAotSummaries = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn$$1) {\n        if (this._addedAotSummaries.has(fn$$1)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn$$1);\n        var /** @type {?} */ summaries = fn$$1();\n        for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n            var /** @type {?} */ entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var /** @type {?} */ summary = /** @type {?} */ (entry);\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = /** @class */ (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.isLoweredSymbol = isLoweredSymbol;\nexports.createLoweredSymbol = createLoweredSymbol;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.formattedError = formattedError;\nexports.isFormattedError = isFormattedError;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.unwrapResolvedMetadata = unwrapResolvedMetadata;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}