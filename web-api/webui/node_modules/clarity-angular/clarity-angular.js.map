{"version":3,"file":"clarity-angular.js","sources":["ts/clarity-angular.ts","ts/public_api.ts","ts/index.ts","ts/utils/animations/slide/index.ts","ts/utils/animations/slide/slide.ts","ts/utils/animations/fade-slide/index.ts","ts/utils/animations/fade-slide/fade-slide.ts","ts/utils/animations/fade/index.ts","ts/utils/animations/fade/fade.ts","ts/utils/animations/collapse/index.ts","ts/utils/animations/collapse/collapse.ts","ts/clarity.module.ts","ts/wizard/wizard.module.ts","ts/wizard/index.ts","ts/wizard/wizard-stepnav-item.ts","ts/wizard/wizard-stepnav.ts","ts/wizard/wizard-custom-tags.ts","ts/wizard/wizard-button.ts","ts/wizard/wizard.ts","ts/wizard/wizard-page.ts","ts/wizard/wizard-header-action.ts","ts/wizard/providers/header-actions.ts","ts/wizard/providers/wizard-navigation.ts","ts/wizard/providers/page-collection.ts","ts/wizard/providers/button-hub.ts","ts/wizard/directives/page-title.ts","ts/wizard/directives/page-navtitle.ts","ts/wizard/directives/page-header-actions.ts","ts/wizard/directives/page-buttons.ts","ts/popover/popover.module.ts","ts/popover/tooltip/tooltip.module.ts","ts/popover/tooltip/index.ts","ts/popover/tooltip/tooltip-trigger.ts","ts/popover/tooltip/tooltip-content.ts","ts/popover/tooltip/tooltip.ts","ts/popover/signpost/signpost.module.ts","ts/popover/signpost/index.ts","ts/popover/signpost/signpost-content.ts","ts/popover/signpost/signpost-positions.ts","ts/modal/modal.module.ts","ts/modal/index.ts","ts/modal/modal.ts","ts/modal/utils/ghost-page-animations.ts","ts/utils/scrolling/scrolling-service.ts","ts/utils/focus-trap/focus-trap.module.ts","ts/utils/focus-trap/index.ts","ts/utils/focus-trap/focus-trap.directive.ts","ts/utils/focus-trap/focus-trap-tracker.service.ts","ts/layout/layout.module.ts","ts/layout/vertical-nav/vertical-nav.module.ts","ts/layout/vertical-nav/index.ts","ts/layout/vertical-nav/vertical-nav-link.ts","ts/layout/vertical-nav/vertical-nav-icon.directive.ts","ts/layout/vertical-nav/vertical-nav-group-children.ts","ts/layout/vertical-nav/vertical-nav-group.ts","ts/layout/vertical-nav/providers/vertical-nav-group.service.ts","ts/layout/vertical-nav/vertical-nav.ts","ts/layout/vertical-nav/providers/vertical-nav.service.ts","ts/layout/vertical-nav/providers/vertical-nav-icon.service.ts","ts/layout/vertical-nav/providers/vertical-nav-group-registration.service.ts","ts/layout/tabs/tabs.module.ts","ts/layout/tabs/index.ts","ts/layout/tabs/tabs.ts","ts/layout/tabs/tab-overflow-content.ts","ts/layout/tabs/tab.ts","ts/layout/tabs/tabs-service.ts","ts/layout/tabs/tab-link.directive.ts","ts/layout/tabs/tabs-id.provider.ts","ts/layout/tabs/tab-content.ts","ts/layout/tabs/aria-service.ts","ts/layout/tabs/chocolate/active-oompa-loompa.ts","ts/layout/tabs/chocolate/tabs-willy-wonka.ts","ts/utils/template-ref/template-ref.module.ts","ts/utils/template-ref/index.ts","ts/utils/template-ref/template-ref-container.ts","ts/layout/nav/navigation.module.ts","ts/layout/nav/index.ts","ts/layout/nav/navLevelDirective.ts","ts/layout/nav/header.ts","ts/layout/chocolate/nav-detection-oompa-loompa.ts","ts/layout/chocolate/main-container-willy-wonka.ts","ts/layout/nav/clrResponsiveNavigationProvider.ts","ts/layout/main-container/main-container.module.ts","ts/layout/main-container/index.ts","ts/layout/main-container/main-container.ts","ts/layout/nav/clrResponsiveNavigationService.ts","ts/layout/nav/clrResponsiveNavControlMessage.ts","ts/layout/nav/clrResponsiveNavCodes.ts","ts/emphasis/emphasis.module.ts","ts/emphasis/alert/alert.module.ts","ts/emphasis/alert/index.ts","ts/emphasis/alert/alerts-pager.ts","ts/emphasis/alert/alerts.ts","ts/emphasis/alert/alert-item.ts","ts/emphasis/alert/alert.ts","ts/emphasis/alert/providers/multi-alert-service.ts","ts/emphasis/alert/providers/icon-and-types-service.ts","ts/emphasis/alert/utils/alert-types.ts","ts/popover/dropdown/dropdown.module.ts","ts/popover/dropdown/index.ts","ts/popover/dropdown/dropdown-trigger.ts","ts/popover/dropdown/dropdown-menu.ts","ts/popover/common/abstract-popover.ts","ts/popover/dropdown/dropdown-item.ts","ts/popover/dropdown/dropdown.ts","ts/popover/dropdown/providers/dropdown.service.ts","ts/utils/conditional/conditional.module.ts","ts/utils/conditional/index.ts","ts/utils/conditional/if-open.directive.ts","ts/utils/conditional/if-active.directive.ts","ts/utils/conditional/if-active.service.ts","ts/data/data.module.ts","ts/data/tree-view/tree-view.module.ts","ts/data/tree-view/index.ts","ts/data/tree-view/tree-node.ts","ts/data/tree-view/providers/tree-selection.provider.ts","ts/data/tree-view/providers/tree-selection.service.ts","ts/data/tree-view/abstract-tree-selection.ts","ts/data/stack-view/stack-view.module.ts","ts/data/stack-view/index.ts","ts/data/stack-view/stack-select.ts","ts/data/stack-view/stack-input.ts","ts/data/stack-view/stack-control.ts","ts/data/stack-view/stack-header.ts","ts/data/stack-view/stack-view.ts","ts/data/stack-view/stack-block.ts","ts/data/datagrid/datagrid.module.ts","ts/data/datagrid/index.ts","ts/data/datagrid/render/table-renderer.ts","ts/data/datagrid/render/row-renderer.ts","ts/data/datagrid/render/main-renderer.ts","ts/data/datagrid/render/header-renderer.ts","ts/data/datagrid/render/head-renderer.ts","ts/data/datagrid/render/column-resizer.ts","ts/data/datagrid/render/cell-renderer.ts","ts/data/datagrid/render/constants.ts","ts/data/datagrid/render/body-renderer.ts","ts/data/datagrid/datagrid-row-detail.ts","ts/data/datagrid/datagrid-pagination.ts","ts/data/datagrid/datagrid-hidable-column.directive.ts","ts/data/datagrid/datagrid-hideable-column.ts","ts/data/datagrid/datagrid-footer.ts","ts/data/datagrid/datagrid-detail-registerer.ts","ts/data/datagrid/datagrid-column-toggle.ts","ts/data/datagrid/datagrid-action-overflow.ts","ts/data/datagrid/datagrid-action-bar.ts","ts/data/datagrid/datagrid.ts","ts/data/datagrid/providers/state.provider.ts","ts/data/datagrid/datagrid-row.ts","ts/data/datagrid/providers/selection.ts","ts/data/datagrid/datagrid-cell.ts","ts/data/datagrid/providers/hideable-column.service.ts","ts/popover/signpost/signpost.ts","ts/popover/signpost/signpost-trigger.directive.ts","ts/popover/common/popover-host-anchor.token.ts","ts/utils/conditional/if-open.service.ts","ts/data/datagrid/datagrid-placeholder.ts","ts/data/datagrid/datagrid-items.ts","ts/data/datagrid/providers/items.ts","ts/data/datagrid/datagrid-column.ts","ts/data/datagrid/providers/sort.ts","ts/data/datagrid/providers/drag-dispatcher.ts","ts/data/datagrid/interfaces/sort-order.ts","ts/data/datagrid/built-in/filters/datagrid-property-string-filter.ts","ts/data/datagrid/built-in/comparators/datagrid-property-comparator.ts","ts/data/datagrid/built-in/nested-property.ts","ts/data/datagrid/chocolate/expandable-oompa-loompa.ts","ts/data/datagrid/providers/global-expandable-rows.ts","ts/data/datagrid/chocolate/actionable-oompa-loompa.ts","ts/data/datagrid/chocolate/datagrid-willy-wonka.ts","ts/utils/chocolate/willy-wonka.ts","ts/data/datagrid/providers/row-action-service.ts","ts/utils/chocolate/oompa-loompa.ts","ts/data/datagrid/built-in/filters/datagrid-string-filter.ts","ts/data/datagrid/built-in/filters/datagrid-string-filter-impl.ts","ts/data/datagrid/datagrid-filter.ts","ts/data/datagrid/utils/datagrid-filter-registrar.ts","ts/data/datagrid/providers/filters.ts","ts/data/datagrid/providers/page.ts","ts/data/datagrid/providers/state-debouncer.provider.ts","ts/data/datagrid/providers/custom-filter.ts","ts/data/datagrid/animation-hack/row-expand-animation.ts","ts/data/datagrid/render/render-organizer.ts","ts/data/datagrid/render/dom-adapter.ts","ts/utils/outside-click/outside-click.module.ts","ts/utils/outside-click/index.ts","ts/utils/outside-click/outside-click.ts","ts/utils/expand/if-expand.module.ts","ts/utils/expand/index.ts","ts/utils/expand/if-expanded.ts","ts/utils/expand/providers/expand.ts","ts/forms/forms.module.ts","ts/forms/checkbox/index.ts","ts/forms/checkbox/checkbox.ts","ts/code/code.module.ts","ts/code/syntax-highlight/syntax-highlight.module.ts","ts/code/index.ts","ts/code/syntax-highlight/syntax-highlight.ts","ts/button/button.module.ts","ts/button/button-loading/loading-button.module.ts","ts/button/button-loading/index.ts","ts/button/button-loading/loading-button.ts","ts/utils/loading/loading.module.ts","ts/utils/loading/index.ts","ts/utils/loading/loading.ts","ts/utils/loading/loading-listener.ts","ts/button/button-group/button-group.module.ts","ts/button/button-group/index.ts","ts/button/button-group/button-group.ts","ts/popover/dropdown/menu-positions.ts","ts/button/button-group/button.ts","ts/button/providers/buttonInGroup.service.ts","ts/popover/common/popover.module.ts","ts/popover/common/index.ts","ts/popover/common/popover-old.directive.ts","ts/popover/common/popover.ts","ts/icon/icon.module.ts","ts/icon/index.ts","ts/icon/icon.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {ÇlrFocusTrapTracker,ClarityModule,ClrButtonModule,ClrButtonGroupModule,ClrLoadingButtonModule,ClrSyntaxHighlightModule,ClrDataModule,ClrDatagridModule,ClrStackViewModule,ClrTreeViewModule,ClrEmphasisModule,ClrAlertModule,ClrFormsModule,ClrIconModule,ClrLayoutModule,ClrMainContainerModule,ClrNavigationModule,ClrTabsModule,ClrModalModule,ClrPopoverModule,ClrDropdownModule,ClrTooltipModule,ClrWizardModule,ClrLoadingModule,ALERT_DIRECTIVES,Alert,AlertItem,Alerts,AlertsPager,BUTTON_GROUP_DIRECTIVES,LOADING_BUTTON_DIRECTIVES,CHECKBOX_DIRECTIVES,Checkbox,CODE_HIGHLIGHT_DIRECTIVES,CodeHighlight,DROPDOWN_DIRECTIVES,Dropdown,DropdownMenu,DropdownTrigger,DropdownItem,menuPositions,DATAGRID_DIRECTIVES,Datagrid,DatagridActionBar,DatagridActionOverflow,DatagridColumn,DatagridColumnToggle,DatagridHideableColumnDirective,DatagridFilter,DatagridItems,DatagridRow,DatagridRowDetail,DatagridCell,DatagridFooter,DatagridPagination,DatagridPlaceholder,State,SortOrder,Filter,StringFilter,Comparator,DatagridStringFilter,DatagridPropertyStringFilter,DatagridPropertyComparator,TREE_VIEW_DIRECTIVES,TreeNode,STACK_VIEW_DIRECTIVES,StackView,StackViewCustomTags,StackHeader,StackBlock,StackInput,StackSelect,ICON_DIRECTIVES,LAYOUT_DIRECTIVES,MainContainer,MODAL_DIRECTIVES,Modal,NAVIGATION_DIRECTIVES,Header,NavLevelDirective,TABS_DIRECTIVES,Tabs,Tab,TabContent,TabOverflowContent,TabLinkDirective,TOOLTIP_DIRECTIVES,Tooltip,TooltipTrigger,TooltipContent,WIZARD_DIRECTIVES,Wizard,WizardPage,WizardStepnav,WizardStepnavItem,DEFAULT_BUTTON_TYPES,CUSTOM_BUTTON_TYPES,WizardButton,WizardHeaderAction,WizardCustomTags,WizardPageTitleDirective,WizardPageNavTitleDirective,WizardPageButtonsDirective,WizardPageHeaderActionsDirective,collapse,fade,fadeSlide,slide,LOADING_DIRECTIVES,Loading,LoadingListener} from './public_api';\n\nexport {Button as ɵcr} from './button/button-group/button';\nexport {ButtonGroup as ɵct} from './button/button-group/button-group';\nexport {LoadingButton as ɵcq} from './button/button-loading/loading-button';\nexport {ButtonInGroupService as ɵcs} from './button/providers/buttonInGroup.service';\nexport {ClrCodeModule as ɵcu} from './code/code.module';\nexport {DatagridRowExpandAnimation as ɵcd} from './data/datagrid/animation-hack/row-expand-animation';\nexport {ActionableOompaLoompa as ɵca} from './data/datagrid/chocolate/actionable-oompa-loompa';\nexport {DatagridWillyWonka as ɵby} from './data/datagrid/chocolate/datagrid-willy-wonka';\nexport {ExpandableOompaLoompa as ɵcc} from './data/datagrid/chocolate/expandable-oompa-loompa';\nexport {DatagridDetailRegisterer as ɵbo} from './data/datagrid/datagrid-detail-registerer';\nexport {CustomFilter as ɵbk} from './data/datagrid/providers/custom-filter';\nexport {DragDispatcher as ɵbj} from './data/datagrid/providers/drag-dispatcher';\nexport {FiltersProvider as ɵz} from './data/datagrid/providers/filters';\nexport {ExpandableRowsCount as ɵbf} from './data/datagrid/providers/global-expandable-rows';\nexport {HideableColumnService as ɵbg} from './data/datagrid/providers/hideable-column.service';\nexport {Items as ɵy} from './data/datagrid/providers/items';\nexport {Page as ɵba} from './data/datagrid/providers/page';\nexport {RowActionService as ɵbe} from './data/datagrid/providers/row-action-service';\nexport {Selection as ɵx} from './data/datagrid/providers/selection';\nexport {Sort as ɵbc} from './data/datagrid/providers/sort';\nexport {StateDebouncer as ɵbb} from './data/datagrid/providers/state-debouncer.provider';\nexport {StateProvider as ɵbh} from './data/datagrid/providers/state.provider';\nexport {DatagridBodyRenderer as ɵbv} from './data/datagrid/render/body-renderer';\nexport {DatagridCellRenderer as ɵbx} from './data/datagrid/render/cell-renderer';\nexport {DatagridColumnResizer as ɵbs} from './data/datagrid/render/column-resizer';\nexport {DomAdapter as ɵbq} from './data/datagrid/render/dom-adapter';\nexport {DatagridHeadRenderer as ɵbu} from './data/datagrid/render/head-renderer';\nexport {DatagridHeaderRenderer as ɵbr} from './data/datagrid/render/header-renderer';\nexport {DatagridMainRenderer as ɵbp} from './data/datagrid/render/main-renderer';\nexport {DatagridRenderOrganizer as ɵbd} from './data/datagrid/render/render-organizer';\nexport {DatagridRowRenderer as ɵbw} from './data/datagrid/render/row-renderer';\nexport {DatagridTableRenderer as ɵbt} from './data/datagrid/render/table-renderer';\nexport {DatagridFilterRegistrar as ɵbi} from './data/datagrid/utils/datagrid-filter-registrar';\nexport {StackControl as ɵch} from './data/stack-view/stack-control';\nexport {AbstractTreeSelection as ɵci} from './data/tree-view/abstract-tree-selection';\nexport {clrTreeSelectionProviderFactory as ɵck} from './data/tree-view/providers/tree-selection.provider';\nexport {TreeSelectionService as ɵcj} from './data/tree-view/providers/tree-selection.service';\nexport {AlertIconAndTypesService as ɵs} from './emphasis/alert/providers/icon-and-types-service';\nexport {MultiAlertService as ɵt} from './emphasis/alert/providers/multi-alert-service';\nexport {IconCustomTag as ɵa} from './icon/icon';\nexport {MainContainerWillyWonka as ɵcx} from './layout/chocolate/main-container-willy-wonka';\nexport {NavDetectionOompaLoompa as ɵcw} from './layout/chocolate/nav-detection-oompa-loompa';\nexport {clrResponsiveNavigationProvider as ɵcy} from './layout/nav/clrResponsiveNavigationProvider';\nexport {ClrResponsiveNavigationService as ɵcv} from './layout/nav/clrResponsiveNavigationService';\nexport {AriaService as ɵdc} from './layout/tabs/aria-service';\nexport {ActiveOompaLoompa as ɵdi} from './layout/tabs/chocolate/active-oompa-loompa';\nexport {TabsWillyWonka as ɵdh} from './layout/tabs/chocolate/tabs-willy-wonka';\nexport {TABS_ID as ɵdd,TABS_ID_PROVIDER as ɵdf,tokenFactory as ɵde} from './layout/tabs/tabs-id.provider';\nexport {TabsService as ɵdg} from './layout/tabs/tabs-service';\nexport {VERTICAL_NAV_DIRECTIVES as ɵdk} from './layout/vertical-nav/index';\nexport {VerticalNavGroupRegistrationService as ɵdr} from './layout/vertical-nav/providers/vertical-nav-group-registration.service';\nexport {VerticalNavGroupService as ɵds} from './layout/vertical-nav/providers/vertical-nav-group.service';\nexport {VerticalNavIconService as ɵdq} from './layout/vertical-nav/providers/vertical-nav-icon.service';\nexport {VerticalNavService as ɵdp} from './layout/vertical-nav/providers/vertical-nav.service';\nexport {VerticalNav as ɵdm} from './layout/vertical-nav/vertical-nav';\nexport {VerticalNavGroup as ɵdl} from './layout/vertical-nav/vertical-nav-group';\nexport {VerticalNavGroupChildren as ɵdt} from './layout/vertical-nav/vertical-nav-group-children';\nexport {VerticalNavIcon as ɵdo} from './layout/vertical-nav/vertical-nav-icon.directive';\nexport {VerticalNavLink as ɵdn} from './layout/vertical-nav/vertical-nav-link';\nexport {ClrVerticalNavModule as ɵdj} from './layout/vertical-nav/vertical-nav.module';\nexport {GHOST_PAGE_ANIMATION as ɵcp} from './modal/utils/ghost-page-animations';\nexport {AbstractPopover as ɵj} from './popover/common/abstract-popover';\nexport {POPOVER_DIRECTIVES as ɵc} from './popover/common/index';\nexport {POPOVER_HOST_ANCHOR as ɵi} from './popover/common/popover-host-anchor.token';\nexport {PopoverDirectiveOld as ɵd} from './popover/common/popover-old.directive';\nexport {ClrCommonPopoverModule as ɵb} from './popover/common/popover.module';\nexport {ROOT_DROPDOWN_PROVIDER as ɵh,RootDropdownService as ɵf,clrRootDropdownFactory as ɵg} from './popover/dropdown/providers/dropdown.service';\nexport {SIGNPOST_DIRECTIVES as ɵdv} from './popover/signpost/index';\nexport {Signpost as ɵbm} from './popover/signpost/signpost';\nexport {SignpostContent as ɵdw} from './popover/signpost/signpost-content';\nexport {SignpostTriggerDirective as ɵbn} from './popover/signpost/signpost-trigger.directive';\nexport {ClrSignpostModule as ɵdu} from './popover/signpost/signpost.module';\nexport {OompaLoompa as ɵcb} from './utils/chocolate/oompa-loompa';\nexport {WillyWonka as ɵbz} from './utils/chocolate/willy-wonka';\nexport {ClrConditionalModule as ɵk} from './utils/conditional/conditional.module';\nexport {IfActiveDirective as ɵm} from './utils/conditional/if-active.directive';\nexport {IF_ACTIVE_ID as ɵo,IF_ACTIVE_ID_PROVIDER as ɵq,IfActiveService as ɵr,tokenFactory as ɵp} from './utils/conditional/if-active.service';\nexport {IfOpenDirective as ɵn} from './utils/conditional/if-open.directive';\nexport {IfOpenService as ɵe} from './utils/conditional/if-open.service';\nexport {CONDITIONAL_DIRECTIVES as ɵl} from './utils/conditional/index';\nexport {ClrIfExpandModule as ɵce} from './utils/expand/if-expand.module';\nexport {IfExpanded as ɵcg} from './utils/expand/if-expanded';\nexport {EXPAND_DIRECTIVES as ɵcf} from './utils/expand/index';\nexport {Expand as ɵbl} from './utils/expand/providers/expand';\nexport {FocusTrapDirective as ɵcn} from './utils/focus-trap/focus-trap.directive';\nexport {ClrFocusTrapModule as ɵcl} from './utils/focus-trap/focus-trap.module';\nexport {FOCUS_TRAP_DIRECTIVES as ɵcm} from './utils/focus-trap/index';\nexport {OUSTIDE_CLICK_DIRECTIVES as ɵv} from './utils/outside-click/index';\nexport {OutsideClick as ɵw} from './utils/outside-click/outside-click';\nexport {ClrOutsideClickModule as ɵu} from './utils/outside-click/outside-click.module';\nexport {ScrollingService as ɵco} from './utils/scrolling/scrolling-service';\nexport {TEMPLATE_REF_DIRECTIVES as ɵda} from './utils/template-ref/index';\nexport {TemplateRefContainer as ɵdb} from './utils/template-ref/template-ref-container';\nexport {ClrTemplateRefModule as ɵcz} from './utils/template-ref/template-ref.module';\nexport {ButtonHubService as ɵdz} from './wizard/providers/button-hub';\nexport {HeaderActionService as ɵea} from './wizard/providers/header-actions';\nexport {PageCollectionService as ɵdy} from './wizard/providers/page-collection';\nexport {WizardNavigationService as ɵdx} from './wizard/providers/wizard-navigation';","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport {ÇlrFocusTrapTracker,ClarityModule,ClrButtonModule,ClrButtonGroupModule,ClrLoadingButtonModule,ClrSyntaxHighlightModule,ClrDataModule,ClrDatagridModule,ClrStackViewModule,ClrTreeViewModule,ClrEmphasisModule,ClrAlertModule,ClrFormsModule,ClrIconModule,ClrLayoutModule,ClrMainContainerModule,ClrNavigationModule,ClrTabsModule,ClrModalModule,ClrPopoverModule,ClrDropdownModule,ClrTooltipModule,ClrWizardModule,ClrLoadingModule,ALERT_DIRECTIVES,Alert,AlertItem,Alerts,AlertsPager,BUTTON_GROUP_DIRECTIVES,LOADING_BUTTON_DIRECTIVES,CHECKBOX_DIRECTIVES,Checkbox,CODE_HIGHLIGHT_DIRECTIVES,CodeHighlight,DROPDOWN_DIRECTIVES,Dropdown,DropdownMenu,DropdownTrigger,DropdownItem,menuPositions,DATAGRID_DIRECTIVES,Datagrid,DatagridActionBar,DatagridActionOverflow,DatagridColumn,DatagridColumnToggle,DatagridHideableColumnDirective,DatagridFilter,DatagridItems,DatagridRow,DatagridRowDetail,DatagridCell,DatagridFooter,DatagridPagination,DatagridPlaceholder,State,SortOrder,Filter,StringFilter,Comparator,DatagridStringFilter,DatagridPropertyStringFilter,DatagridPropertyComparator,TREE_VIEW_DIRECTIVES,TreeNode,STACK_VIEW_DIRECTIVES,StackView,StackViewCustomTags,StackHeader,StackBlock,StackInput,StackSelect,ICON_DIRECTIVES,LAYOUT_DIRECTIVES,MainContainer,MODAL_DIRECTIVES,Modal,NAVIGATION_DIRECTIVES,Header,NavLevelDirective,TABS_DIRECTIVES,Tabs,Tab,TabContent,TabOverflowContent,TabLinkDirective,TOOLTIP_DIRECTIVES,Tooltip,TooltipTrigger,TooltipContent,WIZARD_DIRECTIVES,Wizard,WizardPage,WizardStepnav,WizardStepnavItem,DEFAULT_BUTTON_TYPES,CUSTOM_BUTTON_TYPES,WizardButton,WizardHeaderAction,WizardCustomTags,WizardPageTitleDirective,WizardPageNavTitleDirective,WizardPageButtonsDirective,WizardPageHeaderActionsDirective,collapse,fade,fadeSlide,slide,LOADING_DIRECTIVES,Loading,LoadingListener} from './index';\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport {ClarityModule} from './clarity.module';\n\nexport {ClrButtonModule} from './button/button.module';\nexport {ClrButtonGroupModule} from './button/button-group/button-group.module';\nexport {ClrLoadingButtonModule} from './button/button-loading/loading-button.module';\nexport {ClrSyntaxHighlightModule} from './code/syntax-highlight/syntax-highlight.module';\nexport {ClrDataModule} from './data/data.module';\nexport {ClrDatagridModule} from './data/datagrid/datagrid.module';\nexport {ClrStackViewModule} from './data/stack-view/stack-view.module';\nexport {ClrTreeViewModule} from './data/tree-view/tree-view.module';\nexport {ClrEmphasisModule} from './emphasis/emphasis.module';\nexport {ClrAlertModule} from './emphasis/alert/alert.module';\nexport {ClrFormsModule} from './forms/forms.module';\nexport {ClrIconModule} from './icon/icon.module';\nexport {ClrLayoutModule} from './layout/layout.module';\nexport {ClrMainContainerModule} from './layout/main-container/main-container.module';\nexport {ClrNavigationModule} from './layout/nav/navigation.module';\nexport {ClrTabsModule} from './layout/tabs/tabs.module';\nexport {ClrModalModule} from './modal/modal.module';\nexport {ClrPopoverModule} from './popover/popover.module';\nexport {ClrDropdownModule} from './popover/dropdown/dropdown.module';\nexport {ClrTooltipModule} from './popover/tooltip/tooltip.module';\nexport {ClrWizardModule} from './wizard/wizard.module';\nexport {ClrLoadingModule} from './utils/loading/loading.module';\n\nexport {ALERT_DIRECTIVES,Alert,AlertItem,Alerts,AlertsPager} from './emphasis/alert/index';\nexport {BUTTON_GROUP_DIRECTIVES} from './button/button-group/index';\nexport {LOADING_BUTTON_DIRECTIVES} from './button/button-loading/index';\nexport {CHECKBOX_DIRECTIVES,Checkbox} from './forms/checkbox/index';\nexport {CODE_HIGHLIGHT_DIRECTIVES,CodeHighlight} from './code/index';\nexport {DROPDOWN_DIRECTIVES,Dropdown,DropdownMenu,DropdownTrigger,DropdownItem,menuPositions} from './popover/dropdown/index';\nexport {DATAGRID_DIRECTIVES,Datagrid,DatagridActionBar,DatagridActionOverflow,DatagridColumn,DatagridColumnToggle,DatagridHideableColumnDirective,DatagridFilter,DatagridItems,DatagridRow,DatagridRowDetail,DatagridCell,DatagridFooter,DatagridPagination,DatagridPlaceholder,State,SortOrder,Filter,StringFilter,Comparator,DatagridStringFilter,DatagridPropertyStringFilter,DatagridPropertyComparator} from './data/datagrid/index';\nexport {TREE_VIEW_DIRECTIVES,TreeNode} from './data/tree-view/index';\nexport {STACK_VIEW_DIRECTIVES,StackView,StackViewCustomTags,StackHeader,StackBlock,StackInput,StackSelect} from './data/stack-view/index';\nexport {ICON_DIRECTIVES} from './icon/index';\nexport {LAYOUT_DIRECTIVES,MainContainer} from './layout/main-container/index';\nexport {MODAL_DIRECTIVES,Modal} from './modal/index';\nexport {NAVIGATION_DIRECTIVES,Header,NavLevelDirective} from './layout/nav/index';\nexport {TABS_DIRECTIVES,Tabs,Tab,TabContent,TabOverflowContent,TabLinkDirective} from './layout/tabs/index';\nexport {TOOLTIP_DIRECTIVES,Tooltip,TooltipTrigger,TooltipContent} from './popover/tooltip/index';\nexport {WIZARD_DIRECTIVES,Wizard,WizardPage,WizardStepnav,WizardStepnavItem,DEFAULT_BUTTON_TYPES,CUSTOM_BUTTON_TYPES,WizardButton,WizardHeaderAction,WizardCustomTags,WizardPageTitleDirective,WizardPageNavTitleDirective,WizardPageButtonsDirective,WizardPageHeaderActionsDirective} from './wizard/index';\nexport {collapse} from './utils/animations/collapse/index';\nexport {fade} from './utils/animations/fade/index';\nexport {fadeSlide} from './utils/animations/fade-slide/index';\nexport {slide} from './utils/animations/slide/index';\nexport {LOADING_DIRECTIVES,Loading,LoadingListener} from './utils/loading/index';\n\n// Below are exported for internal use only and may change without notice\nexport {FocusTrapTracker as ÇlrFocusTrapTracker} from './utils/focus-trap/focus-trap-tracker.service';\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport {slide} from './slide';","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {animate, AnimationMetadata, style, transition} from '@angular/animations';\n/**\n * @param {?} direction\n * @return {?}\n */\nexport function slide(direction: string): AnimationMetadata[] {\n    let /** @type {?} */ transform: string = null;\n    if (direction === \"up\") {\n        transform = \"translate(0, 25%)\";\n    } else if (direction === \"down\") {\n        transform = \"translate(0, -25%)\";\n    } else if (direction === \"left\") {\n        transform = \"translate(25%, 0)\";\n    } else if (direction === \"right\") {\n        transform = \"translate(-25%, 0)\";\n    } else {\n        throw new Error(\"Unknown direction \" + direction + \" for slide animation.\");\n    }\n    return [\n        transition(\"void => *\", [style({transform: transform}), animate(\"0.2s ease-in-out\")]),\n        transition(\"* => void\", [animate(\"0.2s ease-in-out\", style({transform: transform}))])\n    ];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport {fadeSlide} from './fade-slide';","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {animate, AnimationMetadata, style, transition} from '@angular/animations';\n/**\n * @param {?} direction\n * @return {?}\n */\nexport function fadeSlide(direction: string): AnimationMetadata[] {\n    let /** @type {?} */ transform: string = null;\n    if (direction === \"up\") {\n        transform = \"translate(0, 25%)\";\n    } else if (direction === \"down\") {\n        transform = \"translate(0, -25%)\";\n    } else if (direction === \"left\") {\n        transform = \"translate(25%, 0)\";\n    } else if (direction === \"right\") {\n        transform = \"translate(-25%, 0)\";\n    } else {\n        throw new Error(\"Unknown direction \" + direction + \" for slide animation.\");\n    }\n    return [\n        transition(\"void => *\", [style({opacity: 0, transform: transform}), animate(\"0.2s ease-in-out\")]),\n        transition(\"* => void\", [animate(\"0.2s ease-in-out\", style({opacity: 0, transform: transform}))])\n    ];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport {fade} from './fade';\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {animate, AnimationMetadata, style, transition} from '@angular/animations';\n/**\n * @param {?=} opacity\n * @return {?}\n */\nexport function fade(opacity: number = 1): AnimationMetadata[] {\n    return [\n        transition(\"void => *\", [style({opacity: 0}), animate(\"0.2s ease-in-out\", style({opacity: opacity}))]),\n        transition(\"* => void\", [animate(\"0.2s ease-in-out\", style({opacity: 0}))])\n    ];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport {collapse} from './collapse';","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {animate, AnimationMetadata, state, style, transition} from '@angular/animations';\n/**\n * @return {?}\n */\nexport function collapse(): AnimationMetadata[] {\n    \"use strict\";\n    return [\n        state(\"true\", style({\"height\": 0, \"overflow-y\": \"hidden\"})),\n        transition(\"true => false\", [animate(\"0.2s ease-in-out\", style({\"height\": \"*\", \"overflow-y\": \"hidden\"}))]),\n        transition(\"false => true\", [style({\"height\": \"*\", \"overflow-y\": \"hidden\"}), animate(\"0.2s ease-in-out\")])\n    ];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\n\nimport {ClrButtonModule} from './button/button.module';\nimport {ClrCodeModule} from './code/code.module';\nimport {ClrDataModule} from './data/data.module';\nimport {ClrEmphasisModule} from './emphasis/emphasis.module';\nimport {ClrFormsModule} from './forms/forms.module';\nimport {ClrIconModule} from './icon/icon.module';\nimport {ClrLayoutModule} from './layout/layout.module';\nimport {ClrModalModule} from './modal/modal.module';\nimport {ClrPopoverModule} from './popover/popover.module';\nimport {ClrConditionalModule} from './utils/conditional/conditional.module';\nimport {ClrIfExpandModule} from './utils/expand/if-expand.module';\nimport {ClrFocusTrapModule} from './utils/focus-trap/focus-trap.module';\nimport {ClrLoadingModule} from './utils/loading/loading.module';\nimport {ClrWizardModule} from './wizard/wizard.module';\nexport class ClarityModule {\n/**\n * @deprecated\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n        return {ngModule: ClarityModule, providers: []};\n    }\n/**\n * @deprecated\n * @return {?}\n */\nstatic forChild(): ModuleWithProviders {\n        return {ngModule: ClarityModule, providers: []};\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [\n        ClrEmphasisModule, ClrDataModule, ClrIconModule, ClrModalModule, ClrLoadingModule, ClrIfExpandModule,\n        ClrConditionalModule, ClrFocusTrapModule, ClrButtonModule, ClrCodeModule, ClrFormsModule, ClrLayoutModule,\n        ClrPopoverModule, ClrWizardModule\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClarityModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClarityModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClarityModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ClrAlertModule} from '../emphasis/alert/alert.module';\nimport {ClrModalModule} from '../modal/modal.module';\n\nimport {WIZARD_DIRECTIVES} from './index';\nexport class ClrWizardModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrModalModule, ClrAlertModule],\n    declarations: [WIZARD_DIRECTIVES],\n    exports: [WIZARD_DIRECTIVES]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrWizardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrWizardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrWizardModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {WizardPageButtonsDirective} from './directives/page-buttons';\nimport {WizardPageHeaderActionsDirective} from './directives/page-header-actions';\nimport {WizardPageNavTitleDirective} from './directives/page-navtitle';\nimport {WizardPageTitleDirective} from './directives/page-title';\nimport {Wizard} from './wizard';\nimport {WizardButton} from './wizard-button';\n// directives\n\nimport {WizardCustomTags} from './wizard-custom-tags';\nimport {WizardHeaderAction} from './wizard-header-action';\nimport {WizardPage} from './wizard-page';\nimport {WizardStepnav} from './wizard-stepnav';\nimport {WizardStepnavItem} from './wizard-stepnav-item';\n\nexport {Wizard} from './wizard';\nexport {WizardPage} from './wizard-page';\nexport {WizardStepnav} from './wizard-stepnav';\nexport {WizardStepnavItem} from './wizard-stepnav-item';\nexport {DEFAULT_BUTTON_TYPES,CUSTOM_BUTTON_TYPES,WizardButton} from './wizard-button';\nexport {WizardHeaderAction} from './wizard-header-action';\n\n// directives\nexport {WizardCustomTags} from './wizard-custom-tags';\nexport {WizardPageTitleDirective} from './directives/page-title';\nexport {WizardPageNavTitleDirective} from './directives/page-navtitle';\nexport {WizardPageButtonsDirective} from './directives/page-buttons';\nexport {WizardPageHeaderActionsDirective} from './directives/page-header-actions';\n\nexport const /** @type {?} */ WIZARD_DIRECTIVES: any[] = [\n    Wizard, WizardPage, WizardStepnav, WizardStepnavItem, WizardButton, WizardHeaderAction, WizardCustomTags,\n    WizardPageTitleDirective, WizardPageNavTitleDirective, WizardPageButtonsDirective, WizardPageHeaderActionsDirective\n];\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Component, Input} from '@angular/core';\n\nimport {PageCollectionService} from './providers/page-collection';\nimport {WizardNavigationService} from './providers/wizard-navigation';\nimport {WizardPage} from './wizard-page';\nexport class WizardStepnavItem {\npublic page: WizardPage;\n/**\n * @param {?} navService\n * @param {?} pageCollection\n */\nconstructor(public navService: WizardNavigationService,\npublic pageCollection: PageCollectionService) {}\n/**\n * @return {?}\n */\nprivate pageGuard(): void {\n        if (!this.page) {\n            throw new Error(\"Wizard stepnav item is not associated with a wizard page.\");\n        }\n    }\n/**\n * @return {?}\n */\npublic get id(): string {\n        this.pageGuard();\n        return this.pageCollection.getStepItemIdForPage(this.page);\n    }\n/**\n * @return {?}\n */\npublic get isDisabled(): boolean {\n        this.pageGuard();\n        return this.page.disabled || this.navService.wizardStopNavigation || this.navService.wizardDisableStepnav;\n    }\n/**\n * @return {?}\n */\npublic get isCurrent(): boolean {\n        this.pageGuard();\n        return this.page.current;\n    }\n/**\n * @return {?}\n */\npublic get isComplete(): boolean {\n        this.pageGuard();\n        return this.page.completed;\n    }\n/**\n * @return {?}\n */\npublic get canNavigate(): boolean {\n        this.pageGuard();\n        return this.pageCollection.previousPageIsCompleted(this.page);\n    }\n/**\n * @return {?}\n */\nclick(): void {\n        this.pageGuard();\n\n        // if we click on our own stepnav or a disabled stepnav, we don't want to do anything\n        if (this.isDisabled || this.isCurrent) {\n            return;\n        }\n\n        this.navService.goTo(this.page);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"[clr-wizard-stepnav-item]\",\n    template: `\n        <button type=\"button\" class=\"btn btn-link clr-wizard-stepnav-link\" (click)=\"click()\">\n            <ng-template [ngTemplateOutlet]=\"page.navTitle\"></ng-template>\n        </button>\n    `,\n    host: {\n        \"[id]\": \"id\",\n        \"[attr.aria-selected]\": \"isCurrent\",\n        \"[attr.aria-controls]\": \"id\",\n        \"role\": \"presentation\",\n        \"[class.clr-nav-link]\": \"true\",\n        \"[class.nav-item]\": \"true\",\n        \"[class.active]\": \"isCurrent\",\n        \"[class.disabled]\": \"isDisabled\",\n        \"[class.no-click]\": \"!canNavigate\",\n        \"[class.complete]\": \"isComplete\"\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WizardNavigationService, },\n{type: PageCollectionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'page': [{ type: Input, args: [\"page\", ] },],\n};\n}\n\nfunction WizardStepnavItem_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardStepnavItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardStepnavItem.ctorParameters;\n/** @type {?} */\nWizardStepnavItem.propDecorators;\n/** @type {?} */\nWizardStepnavItem.prototype.page;\n/** @type {?} */\nWizardStepnavItem.prototype.navService;\n/** @type {?} */\nWizardStepnavItem.prototype.pageCollection;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Component} from '@angular/core';\nimport {PageCollectionService} from './providers/page-collection';\nexport class WizardStepnav {\n/**\n * @param {?} pageService\n */\nconstructor(public pageService: PageCollectionService) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-wizard-stepnav\",\n    template: `\n        <ol class=\"clr-wizard-stepnav-list\" role=\"tablist\">\n            <li *ngFor=\"let page of pageService.pages\" clr-wizard-stepnav-item \n            [page]=\"page\" class=\"clr-wizard-stepnav-item\"></li>\n        </ol>\n    `,\n    host: {\"class\": \"clr-wizard-stepnav\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PageCollectionService, },\n];\n}\n\nfunction WizardStepnav_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardStepnav.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardStepnav.ctorParameters;\n/** @type {?} */\nWizardStepnav.prototype.pageService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Directive} from '@angular/core';\nexport class WizardCustomTags {\n    // No behavior\n    // The only purpose is to \"declare\" the tag in Angular\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-wizard-title, clr-wizard-pagetitle\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WizardCustomTags_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardCustomTags.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardCustomTags.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Component, EventEmitter, Input, Output} from '@angular/core';\n\nimport {ButtonHubService} from './providers/button-hub';\nimport {WizardNavigationService} from './providers/wizard-navigation';\n\nexport const /** @type {?} */ DEFAULT_BUTTON_TYPES: any = {\n    cancel: \"cancel\",\n    previous: \"previous\",\n    next: \"next\",\n    finish: \"finish\",\n    danger: \"danger\"\n};\n\nexport const /** @type {?} */ CUSTOM_BUTTON_TYPES: any = {\n    cancel: \"custom-cancel\",\n    previous: \"custom-previous\",\n    next: \"custom-next\",\n    finish: \"custom-finish\",\n    danger: \"custom-danger\"\n};\nexport class WizardButton {\npublic type: string = \"\";\npublic disabled: boolean = false;\npublic hidden: boolean = false;\n\n    // EventEmitter which is emitted when a button is clicked.\n     wasClicked: EventEmitter<string> = new EventEmitter<string>(false);\n/**\n * @param {?} navService\n * @param {?} buttonService\n */\nconstructor(public navService: WizardNavigationService,\npublic buttonService: ButtonHubService) {}\n/**\n * @param {?=} valueToCheck\n * @param {?=} typeToLookUp\n * @return {?}\n */\nprivate checkDefaultAndCustomType(valueToCheck: string = \"\", typeToLookUp: string) {\n        if (DEFAULT_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n            return true;\n        }\n        if (CUSTOM_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n            return true;\n        }\n        return false;\n    }\n/**\n * @return {?}\n */\npublic get isCancel(): boolean {\n        return this.checkDefaultAndCustomType(this.type, \"cancel\");\n    }\n/**\n * @return {?}\n */\npublic get isNext(): boolean {\n        return this.checkDefaultAndCustomType(this.type, \"next\");\n    }\n/**\n * @return {?}\n */\npublic get isPrevious(): boolean {\n        return this.checkDefaultAndCustomType(this.type, \"previous\");\n    }\n/**\n * @return {?}\n */\npublic get isFinish(): boolean {\n        return this.checkDefaultAndCustomType(this.type, \"finish\");\n    }\n/**\n * @return {?}\n */\npublic get isDanger(): boolean {\n        return this.checkDefaultAndCustomType(this.type, \"danger\");\n    }\n/**\n * @return {?}\n */\npublic get isPrimaryAction(): boolean {\n        return this.isNext || this.isDanger || this.isFinish;\n    }\n/**\n * @return {?}\n */\npublic get _disabledAttribute(): string|null {\n        if (this.isDisabled) {\n            return \"\";\n        }\n        return null;\n    }\n/**\n * @return {?}\n */\npublic get isDisabled(): boolean {\n        // dealing with negatives here. cognitively easier to think of it like this...\n        const /** @type {?} */ disabled = true;\n        const /** @type {?} */ nav = this.navService;\n        const /** @type {?} */ page = this.navService.currentPage;\n\n        // Ensure we don't change the response until buttons are ready to avoid chocolate\n        if (!this.buttonService.buttonsReady) {\n            return !disabled;\n        }\n\n        if (this.disabled || nav.wizardStopNavigation || !page) {\n            return true;\n        }\n\n        if (this.isCancel) {\n            return !disabled;\n        }\n\n        if (this.isPrevious && (nav.currentPageIsFirst || page.previousStepDisabled)) {\n            return disabled;\n        }\n\n        if (this.isDanger && !page.readyToComplete) {\n            return disabled;\n        }\n\n        if (this.isNext && (nav.currentPageIsLast || !page.readyToComplete)) {\n            return disabled;\n        }\n\n        if (this.isFinish && (!nav.currentPageIsLast || !page.readyToComplete)) {\n            return disabled;\n        }\n\n        return !disabled;\n    }\n/**\n * @return {?}\n */\npublic get isHidden(): boolean {\n        // dealing with negatives here. cognitively easier to think of it like this...\n        const /** @type {?} */ hidden = true;\n        const /** @type {?} */ nav = this.navService;\n\n        // Ensure we don't change the response until buttons are ready to avoid chocolate\n        if (!this.buttonService.buttonsReady) {\n            return !hidden;\n        }\n\n        if (this.hidden) {\n            return true;\n        }\n\n        if (this.isCancel) {\n            return !hidden;\n        }\n\n        if (this.isPrevious && nav.currentPageIsFirst) {\n            return hidden;\n        }\n\n        if (this.isNext && nav.currentPageIsLast) {\n            return hidden;\n        }\n\n        if (this.isFinish && !nav.currentPageIsLast) {\n            return hidden;\n        }\n\n        return !hidden;\n    }\n/**\n * @return {?}\n */\nclick(): void {\n        if (this.isDisabled) {\n            return;\n        }\n\n        this.wasClicked.emit(this.type);\n        this.buttonService.buttonClicked(this.type);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-wizard-button\",\n    template: `\n        <button\n            type=\"button\"\n            class=\"btn clr-wizard-btn\"\n            [class.btn-link]=\"isCancel\"\n            [class.clr-wizard-btn--tertiary]=\"isCancel\"\n            [class.btn-outline]=\"isPrevious\"\n            [class.clr-wizard-btn--secondary]=\"isPrevious\"\n            [class.btn-primary]=\"isPrimaryAction\"\n            [class.clr-wizard-btn--primary]=\"isPrimaryAction\"\n            [class.btn-success]=\"isFinish\"\n            [class.btn-danger]=\"isDanger\"\n            [class.disabled]=\"isDisabled\"\n            [attr.disabled]=\"_disabledAttribute\"\n            (click)=\"click()\">\n            <ng-content></ng-content>\n        </button>\n    `,\n    host: {\"class\": \"clr-wizard-btn-wrapper\", \"[attr.aria-hidden]\": \"isHidden\"},\n    styles: [\"[aria-hidden=\\\"true\\\"] { display: none; }\"]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WizardNavigationService, },\n{type: ButtonHubService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input, args: [\"type\", ] },],\n'disabled': [{ type: Input, args: [\"clrWizardButtonDisabled\", ] },],\n'hidden': [{ type: Input, args: [\"clrWizardButtonHidden\", ] },],\n'wasClicked': [{ type: Output, args: [\"clrWizardButtonClicked\", ] },],\n};\n}\n\nfunction WizardButton_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardButton.ctorParameters;\n/** @type {?} */\nWizardButton.propDecorators;\n/** @type {?} */\nWizardButton.prototype.type;\n/** @type {?} */\nWizardButton.prototype.disabled;\n/** @type {?} */\nWizardButton.prototype.hidden;\n/** @type {?} */\nWizardButton.prototype.wasClicked;\n/** @type {?} */\nWizardButton.prototype.navService;\n/** @type {?} */\nWizardButton.prototype.buttonService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {\n    AfterContentInit,\n    Component,\n    ContentChildren,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Input,\n    IterableDiffers,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {GHOST_PAGE_ANIMATION} from '../modal/utils/ghost-page-animations';\n\nimport {ButtonHubService} from './providers/button-hub';\nimport {HeaderActionService} from './providers/header-actions';\nimport {PageCollectionService} from './providers/page-collection';\n// providers\n\nimport {WizardNavigationService} from './providers/wizard-navigation';\nimport {WizardHeaderAction} from './wizard-header-action';\nimport {WizardPage} from './wizard-page';\n/**\n * The Wizard component\n * \n * @export\n * \\@class Wizard\n */\nexport class Wizard implements OnInit, OnDestroy, AfterContentInit, DoCheck {\n/**\n * Creates an instance of Wizard.\n * \n * \\@memberof Wizard\n * @param {?} navService\n * @param {?} pageCollection\n * @param {?} buttonService\n * @param {?} headerActionService\n * @param {?} elementRef\n * @param {?} differs\n */\nconstructor(public navService: WizardNavigationService,\npublic pageCollection: PageCollectionService,\npublic buttonService: ButtonHubService,\npublic headerActionService: HeaderActionService,\nprivate elementRef: ElementRef,\nprivate differs: IterableDiffers) {\n        this.goNextSubscription = this.navService.movedToNextPage.subscribe(() => {\n            this.onMoveNext.emit();\n        });\n\n        this.goPreviousSubscription = this.navService.movedToPreviousPage.subscribe(() => {\n            this.onMovePrevious.emit();\n        });\n\n        this.cancelSubscription = this.navService.notifyWizardCancel.subscribe(() => {\n            this.checkAndCancel();\n        });\n\n        this.wizardFinishedSubscription = this.navService.wizardFinished.subscribe(() => {\n            if (!this.stopNext) {\n                this.forceFinish();\n            }\n            this.wizardFinished.emit();\n        });\n\n        this.differ = differs.find([]).create(null);\n    }\n/**\n * Used for marking when the collection of wizard pages has been added to or deleted from\n * \n * \\@memberof Wizard\n */\ndiffer: any;\n/**\n * Contains the size defined by the clrWizardSize input\n * \\@name size\n * \\@default \"xl\"\n * \\@memberof Wizard\n */\nsize: string = \"xl\";\n/**\n * The property that reveals the ghost pages in the wizard. Set through the\n * clrWizardShowGhostPages input.\n * \n * \\@name showGhostPages\n * \\@default false\n * \\@memberof Wizard\n */\nshowGhostPages: boolean = false;\n/**\n * Resets page completed states when navigating backwards. Can be set using\n * the clrWizardForceForwardNavigation input.\n * \n * \\@name forceForward\n * \\@default false\n * \\@memberof Wizard\n * @param {?} value\n * @return {?}\n */\nset forceForward(value: boolean) {\n        this._forceForward = !!value;\n        this.navService.forceForwardNavigation = value;\n    }\nprivate _forceForward: boolean = false;\n/**\n * @return {?}\n */\nget forceForward(): boolean {\n        return this._forceForward;\n    }\n/**\n * Tells the modal part of the wizard whether it should have a close \"X\"\n * in the top right corner. Set with the clrWizardClosable input.\n * \n * \\@name closable\n * \\@memberof Wizard\n */\nclosable: boolean = true;\n/**\n * Toggles open/close of the wizard component. Set using the clrWizardOpen\n * input.\n * \n * \\@name _open\n * \\@memberof Wizard\n */\npublic _open: boolean = false;\n/**\n * @param {?} open\n * @return {?}\n */\nset clrWizardOpen(open: boolean) {\n        if (open) {\n            this.buttonService.buttonsReady = true;\n        }\n        this._open = open;\n    }\n/**\n * Emits when the wizard is opened or closed. Emits through the\n * clrWizardOpenChange output. Works in conjunction with the\n * clrWizardOpen binding so you can use...\n * \n * <clr-wizard [(clrWizardOpen)]=\"blah\"\n * ...or...\n * <clr-wizard [clrWizardOpen]=\"something\" (clrWizardOpenChange)=\"doSomethign($event)\">\n * \n * ...for two-way binding.\n * \n * \\@name _openChanged\n * \\@memberof Wizard\n */\n_openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n/**\n * Emits when the wizard is canceled. Can be observed through the clrWizardOnCancel\n * output.\n * \n * Can be combined with the clrWizardPreventDefaultCancel input to create\n * wizard-level custom cancel routines.\n * \n * \\@name onCancel\n * \\@memberof Wizard\n */\nonCancel: EventEmitter<any> = new EventEmitter<any>(false);\n/**\n * Emits when the wizard is completed. Can be observed through the clrWizardOnFinish\n * output.\n * \n * Can be combined with the clrWizardPreventDefaultNext input to create\n * wizard-level custom completion routines.\n * \n * \\@name onFinish\n * \\@memberof Wizard\n */\nwizardFinished: EventEmitter<any> = new EventEmitter<any>(false);\n/**\n * Emits when the wizard is reset. See .reset(). Can be observed through\n * the clrWizardOnReset output.\n * \n * \\@name onReset\n * \\@memberof Wizard\n */\nonReset: EventEmitter<any> = new EventEmitter<any>(false);\n/**\n * A QueryList of the pages in the wizard. Note that a QueryList is sort of\n * like an Array but not really. Note also that pages does not contain\n * WizardPages that have been removed with an ngIf.\n * \n * Most interactions with a Wizard's pages are more easily done using the\n * helper function in the PageCollectionService, accessible from the\n * Wizard through Wizard.pageCollection.\n * \n * \\@name pages\n * \\@memberof Wizard\n */\npublic pages: QueryList<WizardPage>;\n/**\n * A QueryList of the header actions defined at the Wizard level. Does not\n * contain header actions defined at the page level. Mostly used by other functionality\n * that needs to either know if the Wizard has header actions or needs to stamp them\n * somewhere.\n * \n * Could be useful if you needed to locate and programmatically activate a specific\n * header action. But this is probably easier to do by invoking the header action's\n * event handler in your host component.\n * \n * \\@name headerActions\n * \\@memberof Wizard\n */\npublic headerActions: QueryList<WizardHeaderAction>;\n/**\n * Emits when the current page has changed. Can be observed through the clrWizardCurrentPageChanged\n * output. This can happen on .next() or .previous().\n * Useful for non-blocking validation.\n * \n * \\@name currentPageChanged\n * \\@memberof Wizard\n */\ncurrentPageChanged: EventEmitter<any> = new EventEmitter<any>(false);\n/**\n * Emits when the wizard moves to the next page. Can be observed through the clrWizardOnNext\n * output.\n * \n * Can be combined with the clrWizardPreventDefaultNext input to create\n * wizard-level custom navigation routines, which are useful for validation.\n * \n * \\@name onMoveNext\n * \\@memberof Wizard\n */\nonMoveNext: EventEmitter<any> = new EventEmitter<any>(false);\n/**\n * Emits when the wizard moves to the previous page. Can be observed through the\n * clrWizardOnPrevious output.\n * \n * Can be useful for validation.\n * \n * \\@name onMovePrevious\n * \\@memberof Wizard\n */\nonMovePrevious: EventEmitter<any> = new EventEmitter<any>(false);\n/**\n * Prevents Wizard from moving to the next page or closing itself on finishing.\n * Set using the clrWizardPreventDefaultNext input.\n * \n * Note that using stopNext will require you to create your own calls to\n * .next() and .finish() in your host component to make the Wizard work as\n * expected.\n * \n * Primarily used for validation.\n * \n * \\@name stopNext\n * \\@memberof Wizard\n * @param {?} value\n * @return {?}\n */\nset stopNext(value: boolean) {\n        this._stopNext = !!value;\n        this.navService.wizardHasAltNext = value;\n    }\nprivate _stopNext: boolean = false;\n/**\n * @return {?}\n */\nget stopNext(): boolean {\n        return this._stopNext;\n    }\n/**\n * Prevents Wizard from closing when the cancel button or close \"X\" is clicked.\n * Set using the clrWizardPreventDefaultCancel input.\n * \n * Note that using stopCancel will require you to create your own calls to\n * .close() in your host component to make the Wizard work as expected.\n * \n * Useful for doing checks or prompts before closing a Wizard.\n * \n * \\@name stopCancel\n * \\@memberof Wizard\n * @param {?} value\n * @return {?}\n */\nset stopCancel(value: boolean) {\n        this._stopCancel = !!value;\n        this.navService.wizardHasAltCancel = value;\n    }\nprivate _stopCancel: boolean = false;\n/**\n * @return {?}\n */\nget stopCancel(): boolean {\n        return this._stopCancel;\n    }\n/**\n * Prevents Wizard from performing any form of navigation away from the current\n * page. Set using the clrWizardPreventNavigation input.\n * \n * Note that stopNavigation is meant to freeze the wizard in place, typically\n * during a long validation or background action where you want the wizard to\n * display loading content but not allow the user to execute navigation in\n * the stepnav, close X, or the  back, finish, or next buttons.\n * \n * \\@name stopNavigation\n * \\@memberof Wizard\n * @param {?} value\n * @return {?}\n */\nset stopNavigation(value: boolean) {\n        this._stopNavigation = !!value;\n        this.navService.wizardStopNavigation = value;\n    }\nprivate _stopNavigation: boolean = false;\n/**\n * @return {?}\n */\nget stopNavigation(): boolean {\n        return this._stopNavigation;\n    }\n/**\n * Prevents clicks on the links in the stepnav from working.\n * \n * A more granular bypassing of navigation which can be useful when your\n * Wizard is in a state of completion and you don't want users to be\n * able to jump backwards and change things.\n * \n * \\@name disableStepnav\n * \\@memberof Wizard\n * @param {?} value\n * @return {?}\n */\nset disableStepnav(value: boolean) {\n        this._disableStepnav = !!value;\n        this.navService.wizardDisableStepnav = value;\n    }\nprivate _disableStepnav: boolean = false;\n/**\n * @return {?}\n */\nget disableStepnav(): boolean {\n        return this._disableStepnav;\n    }\n/**\n * Used only to communicate to the underlying modal that animations are not\n * wanted. Primary use is for the display of static/inline wizards.\n * \n * Set using clrWizardPreventModalAnimation input. But you should never set it.\n * \n * \\@name _stopModalAnimations\n * \\@memberof Wizard\n */\n_stopModalAnimations: boolean = false;\n/**\n * @return {?}\n */\npublic get stopModalAnimations(): string {\n        if (this._stopModalAnimations) {\n            return \"true\";\n        }\n        return \"false\";\n    }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n        this.currentPageSubscription = this.navService.currentPageChanged.subscribe((page: WizardPage) => {\n            this.setGhostPages();\n            this.currentPageChanged.emit();\n        });\n    }\nprivate goNextSubscription: Subscription;\nprivate goPreviousSubscription: Subscription;\nprivate cancelSubscription: Subscription;\nprivate currentPageSubscription: Subscription;\nprivate wizardFinishedSubscription: Subscription;\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.goNextSubscription.unsubscribe();\n        this.goPreviousSubscription.unsubscribe();\n        this.cancelSubscription.unsubscribe();\n        this.currentPageSubscription.unsubscribe();\n        this.wizardFinishedSubscription.unsubscribe();\n    }\n/**\n * Sets up references that are needed by the providers.\n * \n * \\@name ngAfterContentInit\n * \\@memberof Wizard\n * @return {?}\n */\npublic ngAfterContentInit() {\n        const /** @type {?} */ navService = this.navService;\n\n        this.pageCollection.pages = this.pages;\n        this.headerActionService.wizardHeaderActions = this.headerActions;\n\n        if (this.showGhostPages) {\n            navService.hideWizardGhostPages = false;\n            this.deactivateGhostPages();\n        }\n\n        // Only trigger buttons ready if default is open (inlined)\n        if (this._open) {\n            this.buttonService.buttonsReady = true;\n        }\n    }\n/**\n * Used for keeping track of when pages are added or removed from this.pages\n * \n * \\@name ngDoCheck\n * \\@memberof Wizard\n * @return {?}\n */\npublic ngDoCheck() {\n        const /** @type {?} */ changes = this.differ.diff(this.pages);\n        if (changes) {\n            changes.forEachAddedItem((r: any) => {\n                this.navService.updateNavigation();\n            });\n            changes.forEachRemovedItem((r: any) => {\n                this.navService.updateNavigation();\n            });\n        }\n    }\n/**\n * Convenient property for determining whether a wizard is static/in-line or not.\n * \n * \\@name isStatic\n * \\@readonly\n * \\@memberof Wizard\n * @return {?}\n */\npublic get isStatic(): boolean {\n        return this.elementRef.nativeElement.classList.contains(\"clr-wizard--inline\");\n    }\n/**\n * As a getter, current page is a convenient way to retrieve the current page from\n * the WizardNavigationService.\n * \n * As a setter, current page accepts a WizardPage and passes it to WizardNavigationService\n * to be made the current page. currentPage performs checks to make sure it can navigate\n * to the designated page.\n * \n * \\@name currentPage\n * \\@memberof Wizard\n * @return {?}\n */\npublic get currentPage(): WizardPage {\n        return this.navService.currentPage;\n    }\n/**\n * @param {?} page\n * @return {?}\n */\npublic set currentPage(page: WizardPage) {\n        this.navService.goTo(page, true);\n    }\n/**\n * Convenient property for determining if the current page is the last page of\n * the wizard.\n * \n * \\@name isLast\n * \\@readonly\n * \\@memberof Wizard\n * @return {?}\n */\npublic get isLast(): boolean {\n        return this.navService.currentPageIsLast;\n    }\n/**\n * Convenient property for determining if the current page is the first page of\n * the wizard.\n * \n * \\@name isFirst\n * \\@readonly\n * \\@memberof Wizard\n * @return {?}\n */\npublic get isFirst(): boolean {\n        return this.navService.currentPageIsFirst;\n    }\n/**\n * Performs the actions needed to open the wizard. If there is no current\n * page defined, sets the first page in the wizard to be current.\n * \n * \\@name open\n * \\@memberof Wizard\n * @return {?}\n */\npublic open(): void {\n        this._open = true;\n\n        if (!this.currentPage) {\n            this.navService.setFirstPageCurrent();\n        }\n\n        // Only render buttons when wizard is opened, to avoid chocolate errors\n        this.buttonService.buttonsReady = true;\n\n        this.setGhostPages();\n        this._openChanged.emit(true);\n    }\n/**\n * Does the work involved with closing the wizard. Call this directly instead\n * of cancel() to implement alternative cancel functionality.\n * \n * \\@name close\n * \\@memberof Wizard\n * @return {?}\n */\npublic close(): void {\n        if (this.stopNavigation) {\n            return;\n        }\n\n        this._open = false;\n        this.deactivateGhostPages();\n        this._openChanged.emit(false);\n    }\n/**\n * Convenient function that can be used to open and close the wizard. It operates\n * by checking a Boolean parameter. If true, the wizard is opened. If false,\n * it is closed.\n * \n * There is no default value for this parameter, so by default the wizard will\n * close if invoked with no parameter.\n * \n * \\@name toggle\n * \n * \\@memberof Wizard\n * @param {?} value\n * @return {?}\n */\npublic toggle(value: boolean): void {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n/**\n * DEPRECATED. Moves the wizard to the previous page. Carried over from legacy.\n * \n * It is recommended that you use previous() instead.\n * \n * \\@name prev\n * \\@memberof Wizard\n * @return {?}\n */\npublic prev(): void {\n        this.previous();\n    }\n/**\n * Moves the wizard to the previous page.\n * \n * \\@name previous\n * \\@memberof Wizard\n * @return {?}\n */\npublic previous(): void {\n        this.navService.previous();\n    }\n/**\n * Includes a Boolean parameter that will skip checks and event emissions.\n * If true, the wizard will move to the next page regardless of the state of\n * its current page. This is useful for alternative navigation where event\n * emissions have already been done and firing them again may cause an event loop.\n * \n * Generally, with alternative navigation, users are supplying their own checks\n * and validation. So there is no point in superseding their business logic\n * with our default behavior.\n * \n * If false, the wizard will execute default checks and emit events as normal.\n * This is useful for custom buttons or programmatic workflows that are not\n * executing the wizards default checks and emissions. It is another way to\n * navigate without having to rewrite the wizard’s default functionality\n * from scratch.\n * \n * By default, next() does not execute event emissions or checks because the\n * 80% case is that this method will be called as part of an alternative\n * navigation with clrWizardPreventDefaultNext.\n * \n * \\@name next\n * \\@memberof Wizard\n * @param {?=} skipChecksAndEmits\n * @return {?}\n */\npublic next(skipChecksAndEmits: boolean = true): void {\n        if (skipChecksAndEmits) {\n            this.forceNext();\n        } else {\n            this.navService.next();\n        }\n    }\n/**\n * Includes a Boolean parameter that will skip checks and event emissions.\n * If true, the wizard will  complete and close regardless of the state of\n * its current page. This is useful for alternative navigation where event\n * emissions have already been done and firing them again may cause an event loop.\n * \n * If false, the wizard will execute default checks and emit events before\n * completing and closing.\n * \n * By default, finish() does not execute event emissions or checks because the\n * 80% case is that this method will be called as part of an alternative\n * navigation with clrWizardPreventDefaultNext.\n * \n * \\@name finish\n * \\@memberof Wizard\n * @param {?=} skipChecksAndEmits\n * @return {?}\n */\npublic finish(skipChecksAndEmits: boolean = true): void {\n        if (skipChecksAndEmits) {\n            this.forceFinish();\n        } else {\n            this.navService.finish();\n        }\n    }\n/**\n * Does the work of finishing up the wizard and closing it but doesn't do the\n * checks and emissions that other paths do. Good for a last step in an\n * alternate workflow.\n * \n * Does the same thing as calling Wizard.finish(true) or Wizard.finish()\n * without a parameter.\n * \n * \\@name forceFinish\n * \\@memberof Wizard\n * @return {?}\n */\npublic forceFinish(): void {\n        if (this.stopNavigation) {\n            return;\n        }\n\n        this.deactivateGhostPages();\n        this.close();\n    }\n/**\n * Does the work of moving the wizard to the next page without the\n * checks and emissions that other paths do. Good for a last step in an\n * alternate workflow.\n * \n * Does the same thing as calling Wizard.next(true) or Wizard.next()\n * without a parameter.\n * \n * \\@name forceNext\n * \\@memberof Wizard\n * @return {?}\n */\npublic forceNext(): void {\n        this.navService.forceNext();\n    }\n/**\n * Initiates the functionality that cancels and closes the wizard.\n * \n * Do not use this for an override of the cancel the functionality\n * with clrWizardPreventDefaultCancel, clrWizardPreventPageDefaultCancel,\n * or clrWizardPagePreventDefault because it will initiate the same checks\n * and event emissions that invoked your event handler.\n * \n * Use Wizard.close() instead.\n * \n * \\@name cancel\n * \\@memberof Wizard\n * @return {?}\n */\npublic cancel(): void {\n        this.navService.cancel();\n    }\n/**\n * Overrides behavior of the underlying modal to avoid collisions with\n * alternative cancel functionality.\n * \n * In most cases, use Wizard.cancel() instead.\n * \n * \\@name modalCancel\n * \\@memberof Wizard\n * @return {?}\n */\npublic modalCancel(): void {\n        this.checkAndCancel();\n    }\n/**\n * Checks for alternative cancel flows defined at the current page or\n * wizard level. Performs a canceled if not. Emits events that initiate\n * the alternative cancel outputs (clrWizardPageOnCancel and\n * clrWizardOnCancel) if so.\n * \n * \\@name checkAndCancel\n * \\@memberof Wizard\n * @return {?}\n */\npublic checkAndCancel(): void {\n        const /** @type {?} */ currentPage = this.currentPage;\n        const /** @type {?} */ currentPageHasOverrides = currentPage.stopCancel || currentPage.preventDefault;\n\n        if (this.stopNavigation) {\n            return;\n        }\n\n        currentPage.pageOnCancel.emit();\n        if (!currentPageHasOverrides) {\n            this.onCancel.emit();\n        }\n\n        if (!this.stopCancel && !currentPageHasOverrides) {\n            this.close();\n        }\n    }\n/**\n * Accepts the wizard ID as a string parameter and calls to WizardNavigationService\n * to navigate to the page with that ID. Navigation will invoke the wizard’s default\n * checks and event emissions.\n * \n * Probably less useful than calling directly to Wizard.navService.goTo() because the\n * nav service method can accept either a string ID or a page object.\n * \n * The format of the expected ID parameter can be found in the return of the\n * WizardPage.id getter, usually prefixed with “clr-wizard-page-“ and then either a\n * numeric ID or the ID specified for the WizardPage component’s “id” input.\n * \n * \\@name goTo\n * \n * \\@memberof Wizard\n * @param {?} pageId\n * @return {?}\n */\npublic goTo(pageId: string): void {\n        if (!pageId) {\n            return;\n        }\n\n        this.navService.goTo(pageId);\n    }\n/**\n * A convenience function that calls to PageCollectionService.reset() and emits the\n * Wizard.onReset event.\n * \n * Reset sets all WizardPages to incomplete and sets the first page in the Wizard to\n * be the current page, essentially resetting the wizard navigation.\n * \n * Users would then use the onReset event to reset the data or model in their\n * host component.\n * \n * It could be useful to call a reset without firing the onReset event. To do this,\n * just call Wizard.pageCollection.reset() directly.\n * \n * \\@name reset\n * \\@memberof Wizard\n * @return {?}\n */\npublic reset() {\n        this.pageCollection.reset();\n        this.onReset.next();\n    }\n/**\n * A convenience getter to retrieve the ghost Page animation state from\n * WizardNavigationService.\n * \n * \\@name ghostPageState\n * \\@readonly\n * \\@memberof Wizard\n * @return {?}\n */\npublic get ghostPageState(): string {\n        return this.navService.wizardGhostPageState;\n    }\n/**\n * Convenience method that resets the ghost page animation.\n * \n * \\@name deactivateGhostPages\n * \\@memberof Wizard\n * @return {?}\n */\npublic deactivateGhostPages(): void {\n        this.setGhostPages(\"deactivate\");\n    }\n/**\n * Manages the state of the ghost page animation based on the location\n * of the current page in the workflow.\n * \n * Accepts an optional string parameter that can reset the ghost page\n * animation to its closed state.\n * \n * \\@name setGhostPages\n * \\@requires module:../modal/utils/ghost-page-animations\n * \\@requires ghost-page-animations#GHOST_PAGE_ANIMATION\n * \n * \\@memberof Wizard\n * @param {?=} deactivateOrNot\n * @return {?}\n */\npublic setGhostPages(deactivateOrNot: string = \"\"): void {\n        const /** @type {?} */ navService = this.navService;\n        const /** @type {?} */ ghostpageStates = GHOST_PAGE_ANIMATION.STATES;\n\n        if (this.showGhostPages) {\n            if (deactivateOrNot === \"deactivate\") {\n                navService.wizardGhostPageState = ghostpageStates.NO_PAGES;\n            } else if (navService.currentPageIsLast) {\n                navService.wizardGhostPageState = ghostpageStates.LAST_PAGE;\n            } else if (navService.currentPageIsNextToLast) {\n                navService.wizardGhostPageState = ghostpageStates.NEXT_TO_LAST_PAGE;\n            } else {\n                navService.wizardGhostPageState = ghostpageStates.ALL_PAGES;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-wizard\",\n    providers: [WizardNavigationService, PageCollectionService, ButtonHubService, HeaderActionService],\n    template: `\n      <!--\n      ~ Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n      ~ This software is released under MIT license.\n      ~ The full license information can be found in LICENSE in the root directory of this project.\n      -->\n\n      <clr-modal\n          [clrModalOpen]=\"_open\"\n          [clrModalSize]=\"size\"\n          [clrModalClosable]=\"closable\"\n          [clrModalStaticBackdrop]=\"true\"\n          [clrModalSkipAnimation]=\"stopModalAnimations\"\n          [clrModalGhostPageState]=\"ghostPageState\"\n          [clrModalOverrideScrollService]=\"isStatic\"\n          [clrModalPreventClose]=\"true\"\n          (clrModalAlternateClose)=\"modalCancel()\">\n\n          <nav class=\"modal-nav clr-wizard-stepnav-wrapper\">\n              <h3 class=\"clr-wizard-title\"><ng-content select=\"clr-wizard-title\"></ng-content></h3>\n              <clr-wizard-stepnav></clr-wizard-stepnav>\n          </nav>\n\n          <h3 class=\"modal-title\">\n              <span class=\"modal-title-text\">\n                  <ng-template [ngTemplateOutlet]=\"navService.currentPageTitle\"></ng-template>\n              </span>\n\n              <div class=\"modal-header-actions-wrapper\" *ngIf=\"headerActionService.displayHeaderActionsWrapper\">\n                  <div *ngIf=\"headerActionService.showWizardHeaderActions\">\n                      <ng-content select=\"clr-wizard-header-action\"></ng-content>\n                  </div>\n                  <div *ngIf=\"headerActionService.currentPageHasHeaderActions\">\n                      <ng-template [ngTemplateOutlet]=\"navService.currentPage.headerActions\"></ng-template>\n                  </div>\n              </div>\n          </h3>\n\n          <div class=\"modal-body\">\n              <main clr-wizard-pages-wrapper class=\"clr-wizard-content\">\n                  <ng-content></ng-content>\n              </main>\n          </div>\n          <div class=\"modal-footer clr-wizard-footer\">\n              <div class=\"clr-wizard-footer-buttons\">\n                  <div *ngIf=\"navService.currentPage && !navService.currentPage.hasButtons\"\n                      class=\"clr-wizard-footer-buttons-wrapper\">\n                      <ng-content select=\"clr-wizard-button\"></ng-content>\n                  </div>\n                  <div *ngIf=\"navService.currentPage && navService.currentPage.hasButtons\"\n                      class=\"clr-wizard-footer-buttons-wrapper\">\n                      <ng-template [ngTemplateOutlet]=\"navService.currentPage.buttons\"></ng-template>\n                  </div>\n              </div>\n          </div>\n      </clr-modal>\n    `,\n    host: {\n        \"[class.clr-wizard]\": \"true\",\n        \"[class.wizard-md]\": \"size == 'md'\",\n        \"[class.wizard-lg]\": \"size == 'lg'\",\n        \"[class.wizard-xl]\": \"size == 'xl'\",\n        \"[class.lastPage]\": \"navService.currentPageIsLast\",\n        \"[class.clr-wizard--ghosted]\": \"showGhostPages\"\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WizardNavigationService, },\n{type: PageCollectionService, },\n{type: ButtonHubService, },\n{type: HeaderActionService, },\n{type: ElementRef, },\n{type: IterableDiffers, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'size': [{ type: Input, args: [\"clrWizardSize\", ] },],\n'showGhostPages': [{ type: Input, args: [\"clrWizardShowGhostPages\", ] },],\n'forceForward': [{ type: Input, args: [\"clrWizardForceForwardNavigation\", ] },],\n'closable': [{ type: Input, args: [\"clrWizardClosable\", ] },],\n'clrWizardOpen': [{ type: Input, args: [\"clrWizardOpen\", ] },],\n'_openChanged': [{ type: Output, args: [\"clrWizardOpenChange\", ] },],\n'onCancel': [{ type: Output, args: [\"clrWizardOnCancel\", ] },],\n'wizardFinished': [{ type: Output, args: [\"clrWizardOnFinish\", ] },],\n'onReset': [{ type: Output, args: [\"clrWizardOnReset\", ] },],\n'pages': [{ type: ContentChildren, args: [WizardPage, ] },],\n'headerActions': [{ type: ContentChildren, args: [WizardHeaderAction, ] },],\n'currentPageChanged': [{ type: Output, args: [\"clrWizardCurrentPageChanged\", ] },],\n'onMoveNext': [{ type: Output, args: [\"clrWizardOnNext\", ] },],\n'onMovePrevious': [{ type: Output, args: [\"clrWizardOnPrevious\", ] },],\n'stopNext': [{ type: Input, args: [\"clrWizardPreventDefaultNext\", ] },],\n'stopCancel': [{ type: Input, args: [\"clrWizardPreventDefaultCancel\", ] },],\n'stopNavigation': [{ type: Input, args: [\"clrWizardPreventNavigation\", ] },],\n'disableStepnav': [{ type: Input, args: [\"clrWizardDisableStepnav\", ] },],\n'_stopModalAnimations': [{ type: Input, args: [\"clrWizardPreventModalAnimation\", ] },],\n};\n}\n\nfunction Wizard_tsickle_Closure_declarations() {\n/** @type {?} */\nWizard.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizard.ctorParameters;\n/** @type {?} */\nWizard.propDecorators;\n/**\n * Used for marking when the collection of wizard pages has been added to or deleted from\n * \n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.differ;\n/**\n * Contains the size defined by the clrWizardSize input\n * \\@name size\n * \\@default \"xl\"\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.size;\n/**\n * The property that reveals the ghost pages in the wizard. Set through the\n * clrWizardShowGhostPages input.\n * \n * \\@name showGhostPages\n * \\@default false\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.showGhostPages;\n/** @type {?} */\nWizard.prototype._forceForward;\n/**\n * Tells the modal part of the wizard whether it should have a close \"X\"\n * in the top right corner. Set with the clrWizardClosable input.\n * \n * \\@name closable\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.closable;\n/**\n * Toggles open/close of the wizard component. Set using the clrWizardOpen\n * input.\n * \n * \\@name _open\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype._open;\n/**\n * Emits when the wizard is opened or closed. Emits through the\n * clrWizardOpenChange output. Works in conjunction with the\n * clrWizardOpen binding so you can use...\n * \n * <clr-wizard [(clrWizardOpen)]=\"blah\"\n * ...or...\n * <clr-wizard [clrWizardOpen]=\"something\" (clrWizardOpenChange)=\"doSomethign($event)\">\n * \n * ...for two-way binding.\n * \n * \\@name _openChanged\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype._openChanged;\n/**\n * Emits when the wizard is canceled. Can be observed through the clrWizardOnCancel\n * output.\n * \n * Can be combined with the clrWizardPreventDefaultCancel input to create\n * wizard-level custom cancel routines.\n * \n * \\@name onCancel\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.onCancel;\n/**\n * Emits when the wizard is completed. Can be observed through the clrWizardOnFinish\n * output.\n * \n * Can be combined with the clrWizardPreventDefaultNext input to create\n * wizard-level custom completion routines.\n * \n * \\@name onFinish\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.wizardFinished;\n/**\n * Emits when the wizard is reset. See .reset(). Can be observed through\n * the clrWizardOnReset output.\n * \n * \\@name onReset\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.onReset;\n/**\n * A QueryList of the pages in the wizard. Note that a QueryList is sort of\n * like an Array but not really. Note also that pages does not contain\n * WizardPages that have been removed with an ngIf.\n * \n * Most interactions with a Wizard's pages are more easily done using the\n * helper function in the PageCollectionService, accessible from the\n * Wizard through Wizard.pageCollection.\n * \n * \\@name pages\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.pages;\n/**\n * A QueryList of the header actions defined at the Wizard level. Does not\n * contain header actions defined at the page level. Mostly used by other functionality\n * that needs to either know if the Wizard has header actions or needs to stamp them\n * somewhere.\n * \n * Could be useful if you needed to locate and programmatically activate a specific\n * header action. But this is probably easier to do by invoking the header action's\n * event handler in your host component.\n * \n * \\@name headerActions\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.headerActions;\n/**\n * Emits when the current page has changed. Can be observed through the clrWizardCurrentPageChanged\n * output. This can happen on .next() or .previous().\n * Useful for non-blocking validation.\n * \n * \\@name currentPageChanged\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.currentPageChanged;\n/**\n * Emits when the wizard moves to the next page. Can be observed through the clrWizardOnNext\n * output.\n * \n * Can be combined with the clrWizardPreventDefaultNext input to create\n * wizard-level custom navigation routines, which are useful for validation.\n * \n * \\@name onMoveNext\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.onMoveNext;\n/**\n * Emits when the wizard moves to the previous page. Can be observed through the\n * clrWizardOnPrevious output.\n * \n * Can be useful for validation.\n * \n * \\@name onMovePrevious\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype.onMovePrevious;\n/** @type {?} */\nWizard.prototype._stopNext;\n/** @type {?} */\nWizard.prototype._stopCancel;\n/** @type {?} */\nWizard.prototype._stopNavigation;\n/** @type {?} */\nWizard.prototype._disableStepnav;\n/**\n * Used only to communicate to the underlying modal that animations are not\n * wanted. Primary use is for the display of static/inline wizards.\n * \n * Set using clrWizardPreventModalAnimation input. But you should never set it.\n * \n * \\@name _stopModalAnimations\n * \\@memberof Wizard\n * @type {?}\n */\nWizard.prototype._stopModalAnimations;\n/** @type {?} */\nWizard.prototype.goNextSubscription;\n/** @type {?} */\nWizard.prototype.goPreviousSubscription;\n/** @type {?} */\nWizard.prototype.cancelSubscription;\n/** @type {?} */\nWizard.prototype.currentPageSubscription;\n/** @type {?} */\nWizard.prototype.wizardFinishedSubscription;\n/** @type {?} */\nWizard.prototype.navService;\n/** @type {?} */\nWizard.prototype.pageCollection;\n/** @type {?} */\nWizard.prototype.buttonService;\n/** @type {?} */\nWizard.prototype.headerActionService;\n/** @type {?} */\nWizard.prototype.elementRef;\n/** @type {?} */\nWizard.prototype.differs;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\n\nimport {WizardPageButtonsDirective} from './directives/page-buttons';\nimport {WizardPageHeaderActionsDirective} from './directives/page-header-actions';\nimport {WizardPageNavTitleDirective} from './directives/page-navtitle';\nimport {WizardPageTitleDirective} from './directives/page-title';\nimport {ButtonHubService} from './providers/button-hub';\nimport {PageCollectionService} from './providers/page-collection';\nimport {WizardNavigationService} from './providers/wizard-navigation';\n\nlet /** @type {?} */ wizardPageIndex = 0;\n/**\n * The WizardPage component is responsible for displaying the content of each step\n * in the wizard workflow.\n * \n * WizardPage component has hooks into the navigation service (WizardPage.navService),\n * page collection (WizardPage.pageCollection), and button service\n * (WizardPage.buttonService). These three providers are shared across the components\n * within each instance of a Wizard.\n * \n * @export\n * \\@class WizardPage\n */\nexport class WizardPage implements OnInit {\n/**\n * Creates an instance of WizardPage.\n * \n * \n * \\@memberof WizardPage\n * @param {?} navService\n * @param {?} pageCollection\n * @param {?} buttonService\n */\nconstructor(private navService: WizardNavigationService,\npublic pageCollection: PageCollectionService,\npublic buttonService: ButtonHubService) {}\n/**\n * Contains a reference to the page title which is used for a number\n * of different tasks for display in the wizard.\n * \n * \\@memberof WizardPage\n */\npublic pageTitle: WizardPageTitleDirective;\n/**\n * Contains a reference to the desired title for the page's step in the\n * navigation on the left side of the wizard. Can be projected to change the\n * navigation link's text.\n * \n * If not defined, then WizardPage.pageTitle will be displayed in the stepnav.\n * \n * \\@\n * \\@memberof WizardPage\n */\npublic pageNavTitle: WizardPageNavTitleDirective;\n/**\n * Contains a reference to the buttons defined within the page. If not defined,\n * the wizard defaults to the set of buttons defined as a direct child of the\n * wizard.\n * \n * \\@memberof WizardPage\n */\npublic _buttons: WizardPageButtonsDirective;\n/**\n * Contains a reference to the header actions defined within the page. If not defined,\n * the wizard defaults to the set of header actions defined as a direct child of the\n * wizard.\n * \n * \\@memberof WizardPage\n */\npublic _headerActions: WizardPageHeaderActionsDirective;\n/**\n * \\@ignore\n * \\@memberof WizardPage\n */\nprivate _nextStepDisabled = false;\n/**\n * A getter that tells whether or not the wizard should be allowed\n * to move to the next page.\n * \n * Useful for in-page validation because it prevents forward navigation\n * and visibly disables the next button.\n * \n * Does not require that you re-implement navigation routines like you\n * would if you were using WizardPage.preventDefault or\n * Wizard.preventDefault.\n * \n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get nextStepDisabled(): boolean {\n        return this._nextStepDisabled;\n    }\n/**\n * Sets whether the page should allow forward navigation.\n * \n * \\@memberof WizardPage\n * @param {?} val\n * @return {?}\n */\npublic set nextStepDisabled(val: boolean) {\n        const /** @type {?} */ valBool = !!val;\n        if (valBool !== this._nextStepDisabled) {\n            this._nextStepDisabled = valBool;\n            this.nextStepDisabledChange.emit(valBool);\n        }\n    }\n/**\n * Emits when the value of WizardPage.nextStepDisabled changes.\n * Should emit the new value of nextStepDisabled.\n * \n * \\@memberof WizardPage\n */\nnextStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n/**\n * \\@ignore\n * \\@memberof WizardPage\n */\nprivate _previousStepDisabled = false;\n/**\n * A getter that tells whether or not the wizard should be allowed\n * to move to the previous page.\n * \n * Useful for in-page validation because it prevents backward navigation\n * and visibly disables the previous button.\n * \n * Does not require that you re-implement navigation routines like you\n * would if you were using WizardPage.preventDefault or\n * Wizard.preventDefault.\n * \n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get previousStepDisabled(): boolean {\n        return this._previousStepDisabled;\n    }\n/**\n * Sets whether the page should allow backward navigation.\n * \n * \\@memberof WizardPage\n * @param {?} val\n * @return {?}\n */\npublic set previousStepDisabled(val: boolean) {\n        const /** @type {?} */ valBool = !!val;\n        if (valBool !== this._previousStepDisabled) {\n            this._previousStepDisabled = valBool;\n            this.previousStepDisabledChange.emit(valBool);\n        }\n    }\n/**\n * Emits when the value of WizardPage.previousStepDisabled changes.\n * Should emit the new value of previousStepDisabled.\n * \n * \\@memberof WizardPage\n */\npublic previousStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n/**\n * Overrides all actions from the page level, so you can use an alternate function for\n * validation or data-munging with a WizardPage.onCommit (clrWizardPageOnCommit output),\n * WizardPage.onCancel (clrWizardPageOnCancel output), or one\n * of the granular page-level button click event emitters.\n * \n * \\@memberof WizardPage\n */\npublic preventDefault: boolean = false;\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardPage\n */\nprivate _stopCancel = false;\n/**\n * A getter that retrieves whether the page is preventing the cancel action.\n * \n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get stopCancel(): boolean {\n        return this._stopCancel;\n    }\n/**\n * Overrides the cancel action from the page level. Allows you to use an\n * alternate function for validation or data-munging before cancelling the\n * wizard when combined with the WizardPage.onCancel\n * (the clrWizardPageOnCancel output).\n * \n * Requires that you manually close the wizard from your host component,\n * usually with a call to Wizard.forceNext() or wizard.next();\n * \n * \\@memberof WizardPage\n * @param {?} val\n * @return {?}\n */\npublic set stopCancel(val: boolean) {\n        const /** @type {?} */ valBool = !!val;\n        if (valBool !== this._stopCancel) {\n            this._stopCancel = valBool;\n            this.stopCancelChange.emit(valBool);\n        }\n    }\n/**\n *\n * \\@ignore\n * \\@memberof WizardPage\n */\nstopCancelChange: EventEmitter<boolean> = new EventEmitter();\n/**\n * \n * \n * \\@ignore\n * \\@memberof WizardPage\n */\nprivate _stopNext = false;\n/**\n * A getter that tells you whether the page is preventing the next action.\n * \n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get stopNext(): boolean {\n        return this._stopNext;\n    }\n/**\n * Overrides forward navigation from the page level. Allows you to use an\n * alternate function for validation or data-munging before moving the\n * wizard to the next pagewhen combined with the WizardPage.onCommit\n * (clrWizardPageOnCommit) or WizardPage.nextButtonClicked\n * (clrWizardPageNext) outputs.\n * \n * Requires that you manually tell the wizard to navigate forward from\n * the hostComponent, usually with a call to Wizard.forceNext() or\n * wizard.next();\n * \n * \\@memberof WizardPage\n * @param {?} val\n * @return {?}\n */\npublic set stopNext(val: boolean) {\n        const /** @type {?} */ valBool = !!val;\n        if (valBool !== this._stopNext) {\n            this._stopNext = valBool;\n        }\n    }\n/**\n * An event emitter carried over from a legacy version of WizardPage.\n * Fires an event on WizardPage whenever the next or finish buttons\n * are clicked and the page is the current page of the Wizard.\n * \n * Note that this does not automatically emit an event when a custom\n * button is used in place of a next or finish button.\n * \n * \\@memberof WizardPage\n */\nonCommit: EventEmitter<string> = new EventEmitter<string>(false);\n/**\n * Emits an event when WizardPage becomes the current page of the\n * Wizard.\n * \n * \\@memberof WizardPage\n */\nonLoad: EventEmitter<string> = new EventEmitter();\n/**\n * Emits an event when the WizardPage invokes the cancel routine for the wizard.\n * \n * Can be used in conjunction with the WizardPage.stopCancel\n * (clrWizardPagePreventDefaultCancel) or WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) inputs to implement custom cancel\n * functionality at the page level. This is useful if you would like to do\n * validation, save data, or warn users before cancelling the wizard.\n * \n * Note that this requires you to call Wizard.close() from the host component.\n * This constitues a full replacement of the cancel functionality.\n * \n * \\@memberof WizardPage\n */\npageOnCancel: EventEmitter<WizardPage> = new EventEmitter();\n/**\n * Emits an event when the finish button is clicked and the WizardPage is\n * the wizard's current page.\n * \n * Can be used in conjunction with the WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) input to implement custom finish\n * functionality at the page level. This is useful if you would like to do\n * validation, save data, or warn users before allowing them to complete\n * the wizard.\n * \n * Note that this requires you to call Wizard.finish() or Wizard.forceFinish()\n * from the host component. This combination creates a full replacement of\n * the finish functionality.\n * \n * \\@memberof WizardPage\n */\nfinishButtonClicked: EventEmitter<WizardPage> = new EventEmitter();\n/**\n * Emits an event when the previous button is clicked and the WizardPage is\n * the wizard's current page.\n * \n * Can be used in conjunction with the WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) input to implement custom backwards\n * navigation at the page level. This is useful if you would like to do\n * validation, save data, or warn users before allowing them to go\n * backwards in the wizard.\n * \n * Note that this requires you to call Wizard.previous()\n * from the host component. This combination creates a full replacement of\n * the backwards navigation functionality.\n * \n * \\@memberof WizardPage\n */\npreviousButtonClicked: EventEmitter<WizardPage> = new EventEmitter();\n/**\n * Emits an event when the next button is clicked and the WizardPage is\n * the wizard's current page.\n * \n * Can be used in conjunction with the WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) input to implement custom forwards\n * navigation at the page level. This is useful if you would like to do\n * validation, save data, or warn users before allowing them to go\n * to the next page in the wizard.\n * \n * Note that this requires you to call Wizard.forceNext() or Wizard.next()\n * from the host component. This combination creates a full replacement of\n * the forward navigation functionality.\n * \n * \\@memberof WizardPage\n */\nnextButtonClicked: EventEmitter<WizardPage> = new EventEmitter();\n/**\n * Emits an event when a danger button is clicked and the WizardPage is\n * the wizard's current page. By default, a danger button will act as\n * either a \"next\" or \"finish\" button depending on if the WizardPage is the\n * last page or not.\n * \n * Can be used in conjunction with the WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) input to implement custom forwards\n * or finish navigation at the page level when the danger button is clicked.\n * This is useful if you would like to do validation, save data, or warn\n * users before allowing them to go to the next page in the wizard or\n * finish the wizard.\n * \n * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n * Wizard.forceNext() or Wizard.next() from the host component. This\n * combination creates a full replacement of the forward navigation and\n * finish functionality.\n * \n * \\@memberof WizardPage\n */\ndangerButtonClicked: EventEmitter<WizardPage> = new EventEmitter();\n/**\n * Emits an event when a next, finish, or danger button is clicked and the\n * WizardPage is the wizard's current page.\n * \n * Can be used in conjunction with the WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) input to implement custom forwards\n * or finish navigation at the page level, regardless of the type of\n * primary button.\n * \n * This is useful if you would like to do validation, save data, or warn\n * users before allowing them to go to the next page in the wizard or\n * finish the wizard.\n * \n * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n * Wizard.forceNext() or Wizard.next() from the host component. This\n * combination creates a full replacement of the forward navigation and\n * finish functionality.\n * \n * \\@memberof WizardPage\n */\nprimaryButtonClicked: EventEmitter<string> = new EventEmitter();\n\n     customButtonClicked: EventEmitter<string> = new EventEmitter();\n/**\n * An input value that is used internally to generate the WizardPage ID as\n * well as the step nav item ID.\n * \n * Typed as any because it should be able to accept numbers as well as\n * strings. Passing an index for wizard whose pages are created with an\n * ngFor loop is a common use case.\n * \n * \\@memberof WizardPage\n */\n_id: any = (wizardPageIndex++).toString();\n/**\n * A read-only getter that generates an ID string for the wizard page from\n * either the value passed to the WizardPage \"id\" input or a wizard page\n * counter shared across all wizard pages in the application.\n * \n * Note that the value passed into the ID input Will be prefixed with\n * \"clr-wizard-page-\".\n * \n * \\@readonly \n * \n * \\@memberof WizardPage\n * @return {?}\n */\npublic get id() {\n        // covers things like null, undefined, false, and empty string\n        // while allowing zero to pass\n        const /** @type {?} */ idIsNonZeroFalsy = (!this._id && this._id !== 0);\n\n        // in addition to non-zero falsy we also want to make sure _id is not a negative\n        // number.\n        if (idIsNonZeroFalsy || this._id < 0) {\n            // guard here in the event that input becomes undefined or null by accident\n            this._id = (wizardPageIndex++).toString();\n        }\n        return `clr-wizard-page-${this._id}`;\n    }\n/**\n * A read-only getter that serves as a convenience for those who would rather\n * not think in the terms of !WizardPage.nextStepDisabled. For some use cases,\n * WizardPage.readyToComplete is more logical and declarative.\n * \n * \\@readonly \n * \n * \\@memberof WizardPage\n * @return {?}\n */\npublic get readyToComplete(): boolean {\n        return !this.nextStepDisabled;\n    }\n/**\n *\n * \\@ignore\n * \\@memberof WizardPage\n */\nprivate _complete: boolean = false;\n/**\n * A page is marked as completed if it is both readyToComplete and completed,\n * as in the next or finish action has been executed while this page was current.\n * \n * Note there is and open question about how to handle pages that are marked\n * complete but who are no longer readyToComplete. This might indicate an error\n * state for the WizardPage. Currently, the wizard does not acknowledge this state\n * and only returns that the page is incomplete.\n * \n * \\@memberof WizardPage\n * @return {?}\n */\npublic get completed(): boolean {\n        return this._complete && this.readyToComplete;\n\n        // FOR V2: UNWIND COMPLETED, READYTOCOMPLETE, AND ERRORS\n        // SUCH THAT ERRORS IS ITS OWN INPUT. IF A STEP IS\n        // INCOMPLETE AND ERRORED, ERRORED WILL NOT SHOW.\n        // FIRST QUESTION: AM I GREY OR COLORED?\n        // SECOND QUESTION: AM I GREEN OR RED?\n    }\n/**\n * A WizardPage can be manually set to completed using this boolean setter.\n * It is recommended that users rely on the convenience functions in the wizard\n * and navigation service instead of manually setting pages’ completion state.\n * \n * \\@memberof WizardPage\n * @param {?} value\n * @return {?}\n */\npublic set completed(value: boolean) {\n        this._complete = value;\n    }\n/**\n * Checks with the navigation service to see if it is the current page.\n * \n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get current(): boolean {\n        return this.navService.currentPage === this;\n    }\n/**\n * @return {?}\n */\npublic get disabled(): boolean {\n        return !this.enabled;\n    }\n/**\n * A read-only getter that returns whether or not the page is navigable\n * in the wizard. A wizard page can be navigated to if it is completed\n * or the page before it is completed.\n * \n * This getter handles the logic for enabling or disabling the links in\n * the step nav on the left Side of the wizard.\n * \n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get enabled(): boolean {\n        return this.current || this.completed || this.previousCompleted;\n    }\n/**\n * A read-only getter that returns whether or not the page before this\n * WizardPage is completed. This is useful for determining whether or not\n * a page is navigable if it is not current or already completed.\n * \n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get previousCompleted(): boolean {\n        const /** @type {?} */ previousPage = this.pageCollection.getPreviousPage(this);\n\n        if (!previousPage) {\n            return true;\n        }\n\n        return previousPage.completed;\n    }\n/**\n *\n * \\@ignore\n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get title(): TemplateRef<any> {\n        return this.pageTitle.pageTitleTemplateRef;\n    }\n/**\n *\n * \\@ignore\n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get navTitle(): TemplateRef<any> {\n        if (this.pageNavTitle) {\n            return this.pageNavTitle.pageNavTitleTemplateRef;\n        }\n        return this.pageTitle.pageTitleTemplateRef;\n    }\n/**\n *\n * \\@ignore\n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get headerActions(): TemplateRef<any> {\n        if (!this._headerActions) {\n            return;\n        }\n        return this._headerActions.pageHeaderActionsTemplateRef;\n    }\n/**\n *\n * \\@ignore\n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get hasHeaderActions(): boolean {\n        return !!this._headerActions;\n    }\n/**\n *\n * \\@ignore\n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get buttons(): TemplateRef<any> {\n        if (!this._buttons) {\n            return;\n        }\n        return this._buttons.pageButtonsTemplateRef;\n    }\n/**\n * A read-only getter that returns a boolean that says whether or\n * not the WizardPage includes buttons. Used to determine if the\n * Wizard should override the default button set defined as\n * its direct children.\n * \n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get hasButtons(): boolean {\n        return !!this._buttons;\n    }\n/**\n * Uses the nav service to make the WizardPage the current page in the\n * wizard. Bypasses all checks but still emits the WizardPage.onLoad\n * (clrWizardPageOnLoad) output.\n * \n * In most cases, it is better to use the default navigation functions\n * in Wizard.\n * \n * \\@memberof WizardPage\n * @return {?}\n */\npublic makeCurrent(): void {\n        this.navService.currentPage = this;\n    }\n/**\n * Links the nav service and establishes the current page if one is not defined.\n * \n * \\@memberof WizardPage\n * @return {?}\n */\npublic ngOnInit(): void {\n        const /** @type {?} */ navService = this.navService;\n        if (!navService.currentPage && !navService.navServiceLoaded) {\n            this.makeCurrent();\n            this.navService.navServiceLoaded = true;\n        }\n    }\n/**\n * A read-only getter that returns the id used by the step nav item associated with the page.\n * \n * WizardPage needs this ID string for aria information.\n * \n * \\@readonly\n * \\@memberof WizardPage\n * @return {?}\n */\npublic get stepItemId(): string {\n        return this.pageCollection.getStepItemIdForPage(this);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-wizard-page\",\n    template: \"<ng-content></ng-content>\",\n    host: {\n        \"[id]\": \"id\",\n        \"role\": \"tabpanel\",\n        \"[attr.aria-hidden]\": \"!current\",\n        \"[attr.aria-labelledby]\": \"stepItemId\",\n        \"[class.active]\": \"current\",\n        \"[class.clr-wizard-page]\": \"true\"\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WizardNavigationService, },\n{type: PageCollectionService, },\n{type: ButtonHubService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'pageTitle': [{ type: ContentChild, args: [WizardPageTitleDirective, ] },],\n'pageNavTitle': [{ type: ContentChild, args: [WizardPageNavTitleDirective, ] },],\n'_buttons': [{ type: ContentChild, args: [WizardPageButtonsDirective, ] },],\n'_headerActions': [{ type: ContentChild, args: [WizardPageHeaderActionsDirective, ] },],\n'nextStepDisabled': [{ type: Input, args: [\"clrWizardPageNextDisabled\", ] },],\n'nextStepDisabledChange': [{ type: Output, args: [\"clrWizardPageNextDisabledChange\", ] },],\n'previousStepDisabled': [{ type: Input, args: [\"clrWizardPagePreviousDisabled\", ] },],\n'previousStepDisabledChange': [{ type: Output, args: [\"clrWizardPagePreviousDisabledChange\", ] },],\n'preventDefault': [{ type: Input, args: [\"clrWizardPagePreventDefault\", ] },],\n'stopCancel': [{ type: Input, args: [\"clrWizardPagePreventDefaultCancel\", ] },],\n'stopCancelChange': [{ type: Output, args: [\"clrWizardPagePreventDefaultCancelChange\", ] },],\n'stopNext': [{ type: Input, args: [\"clrWizardPagePreventDefaultNext\", ] },],\n'onCommit': [{ type: Output, args: [\"clrWizardPageOnCommit\", ] },],\n'onLoad': [{ type: Output, args: [\"clrWizardPageOnLoad\", ] },],\n'pageOnCancel': [{ type: Output, args: [\"clrWizardPageOnCancel\", ] },],\n'finishButtonClicked': [{ type: Output, args: [\"clrWizardPageFinish\", ] },],\n'previousButtonClicked': [{ type: Output, args: [\"clrWizardPagePrevious\", ] },],\n'nextButtonClicked': [{ type: Output, args: [\"clrWizardPageNext\", ] },],\n'dangerButtonClicked': [{ type: Output, args: [\"clrWizardPageDanger\", ] },],\n'primaryButtonClicked': [{ type: Output, args: [\"clrWizardPagePrimary\", ] },],\n'customButtonClicked': [{ type: Output, args: [\"clrWizardPageCustomButton\", ] },],\n'_id': [{ type: Input, args: [\"id\", ] },],\n};\n}\n\nfunction WizardPage_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardPage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardPage.ctorParameters;\n/** @type {?} */\nWizardPage.propDecorators;\n/**\n * Contains a reference to the page title which is used for a number\n * of different tasks for display in the wizard.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.pageTitle;\n/**\n * Contains a reference to the desired title for the page's step in the\n * navigation on the left side of the wizard. Can be projected to change the\n * navigation link's text.\n * \n * If not defined, then WizardPage.pageTitle will be displayed in the stepnav.\n * \n * \\@\n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.pageNavTitle;\n/**\n * Contains a reference to the buttons defined within the page. If not defined,\n * the wizard defaults to the set of buttons defined as a direct child of the\n * wizard.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype._buttons;\n/**\n * Contains a reference to the header actions defined within the page. If not defined,\n * the wizard defaults to the set of header actions defined as a direct child of the\n * wizard.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype._headerActions;\n/**\n * \\@ignore\n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype._nextStepDisabled;\n/**\n * Emits when the value of WizardPage.nextStepDisabled changes.\n * Should emit the new value of nextStepDisabled.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.nextStepDisabledChange;\n/**\n * \\@ignore\n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype._previousStepDisabled;\n/**\n * Emits when the value of WizardPage.previousStepDisabled changes.\n * Should emit the new value of previousStepDisabled.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.previousStepDisabledChange;\n/**\n * Overrides all actions from the page level, so you can use an alternate function for\n * validation or data-munging with a WizardPage.onCommit (clrWizardPageOnCommit output),\n * WizardPage.onCancel (clrWizardPageOnCancel output), or one\n * of the granular page-level button click event emitters.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.preventDefault;\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype._stopCancel;\n/**\n *\n * \\@ignore\n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.stopCancelChange;\n/**\n * \n * \n * \\@ignore\n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype._stopNext;\n/**\n * An event emitter carried over from a legacy version of WizardPage.\n * Fires an event on WizardPage whenever the next or finish buttons\n * are clicked and the page is the current page of the Wizard.\n * \n * Note that this does not automatically emit an event when a custom\n * button is used in place of a next or finish button.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.onCommit;\n/**\n * Emits an event when WizardPage becomes the current page of the\n * Wizard.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.onLoad;\n/**\n * Emits an event when the WizardPage invokes the cancel routine for the wizard.\n * \n * Can be used in conjunction with the WizardPage.stopCancel\n * (clrWizardPagePreventDefaultCancel) or WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) inputs to implement custom cancel\n * functionality at the page level. This is useful if you would like to do\n * validation, save data, or warn users before cancelling the wizard.\n * \n * Note that this requires you to call Wizard.close() from the host component.\n * This constitues a full replacement of the cancel functionality.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.pageOnCancel;\n/**\n * Emits an event when the finish button is clicked and the WizardPage is\n * the wizard's current page.\n * \n * Can be used in conjunction with the WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) input to implement custom finish\n * functionality at the page level. This is useful if you would like to do\n * validation, save data, or warn users before allowing them to complete\n * the wizard.\n * \n * Note that this requires you to call Wizard.finish() or Wizard.forceFinish()\n * from the host component. This combination creates a full replacement of\n * the finish functionality.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.finishButtonClicked;\n/**\n * Emits an event when the previous button is clicked and the WizardPage is\n * the wizard's current page.\n * \n * Can be used in conjunction with the WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) input to implement custom backwards\n * navigation at the page level. This is useful if you would like to do\n * validation, save data, or warn users before allowing them to go\n * backwards in the wizard.\n * \n * Note that this requires you to call Wizard.previous()\n * from the host component. This combination creates a full replacement of\n * the backwards navigation functionality.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.previousButtonClicked;\n/**\n * Emits an event when the next button is clicked and the WizardPage is\n * the wizard's current page.\n * \n * Can be used in conjunction with the WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) input to implement custom forwards\n * navigation at the page level. This is useful if you would like to do\n * validation, save data, or warn users before allowing them to go\n * to the next page in the wizard.\n * \n * Note that this requires you to call Wizard.forceNext() or Wizard.next()\n * from the host component. This combination creates a full replacement of\n * the forward navigation functionality.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.nextButtonClicked;\n/**\n * Emits an event when a danger button is clicked and the WizardPage is\n * the wizard's current page. By default, a danger button will act as\n * either a \"next\" or \"finish\" button depending on if the WizardPage is the\n * last page or not.\n * \n * Can be used in conjunction with the WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) input to implement custom forwards\n * or finish navigation at the page level when the danger button is clicked.\n * This is useful if you would like to do validation, save data, or warn\n * users before allowing them to go to the next page in the wizard or\n * finish the wizard.\n * \n * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n * Wizard.forceNext() or Wizard.next() from the host component. This\n * combination creates a full replacement of the forward navigation and\n * finish functionality.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.dangerButtonClicked;\n/**\n * Emits an event when a next, finish, or danger button is clicked and the\n * WizardPage is the wizard's current page.\n * \n * Can be used in conjunction with the WizardPage.preventDefault\n * (clrWizardPagePagePreventDefault) input to implement custom forwards\n * or finish navigation at the page level, regardless of the type of\n * primary button.\n * \n * This is useful if you would like to do validation, save data, or warn\n * users before allowing them to go to the next page in the wizard or\n * finish the wizard.\n * \n * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n * Wizard.forceNext() or Wizard.next() from the host component. This\n * combination creates a full replacement of the forward navigation and\n * finish functionality.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype.primaryButtonClicked;\n/** @type {?} */\nWizardPage.prototype.customButtonClicked;\n/**\n * An input value that is used internally to generate the WizardPage ID as\n * well as the step nav item ID.\n * \n * Typed as any because it should be able to accept numbers as well as\n * strings. Passing an index for wizard whose pages are created with an\n * ngFor loop is a common use case.\n * \n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype._id;\n/**\n *\n * \\@ignore\n * \\@memberof WizardPage\n * @type {?}\n */\nWizardPage.prototype._complete;\n/** @type {?} */\nWizardPage.prototype.navService;\n/** @type {?} */\nWizardPage.prototype.pageCollection;\n/** @type {?} */\nWizardPage.prototype.buttonService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Component, EventEmitter, Input, Output} from '@angular/core';\n\nlet /** @type {?} */ wizardHeaderActionIndex = 0;\nexport class WizardHeaderAction {\n    // title is explanatory text added to the header action\n    \n    title: string = \"\";\n\n    // If our host has an ID attribute, we use this instead of our index.\n    \n    _id: string = (wizardHeaderActionIndex++).toString();\n/**\n * @return {?}\n */\npublic get id(): string {\n        return `clr-wizard-header-action-${this._id}`;\n    }\npublic disabled: boolean = false;\n\n     headerActionClicked: EventEmitter<string> = new EventEmitter(false);\n/**\n * @return {?}\n */\nclick(): void {\n        if (this.disabled) {\n            return;\n        }\n\n        // passing the header action id allows users to have one method that\n        // routes to many different actions based on the type of header action\n        // clicked. this is further aided by users being able to specify ids\n        // for their header actions.\n        this.headerActionClicked.emit(this._id);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-wizard-header-action\",\n    template: `\n        <button \n            type=\"button\"\n            class=\"btn clr-wizard-header-action btn-link\"\n            [id]=\"id\"\n            [class.disabled]=\"disabled\"\n            (click)=\"click()\"\n            [title]=\"title\">\n            <ng-content></ng-content>\n        </button>\n    `,\n    host: {\"class\": \"clr-wizard-header-action-wrapper\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'title': [{ type: Input, args: [\"title\", ] },],\n'_id': [{ type: Input, args: [\"id\", ] },],\n'disabled': [{ type: Input, args: [\"clrWizardHeaderActionDisabled\", ] },],\n'headerActionClicked': [{ type: Output, args: [\"actionClicked\", ] },],\n};\n}\n\nfunction WizardHeaderAction_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardHeaderAction.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardHeaderAction.ctorParameters;\n/** @type {?} */\nWizardHeaderAction.propDecorators;\n/** @type {?} */\nWizardHeaderAction.prototype.title;\n/** @type {?} */\nWizardHeaderAction.prototype._id;\n/** @type {?} */\nWizardHeaderAction.prototype.disabled;\n/** @type {?} */\nWizardHeaderAction.prototype.headerActionClicked;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable, QueryList} from '@angular/core';\nimport {WizardHeaderAction} from '../wizard-header-action';\nimport {WizardNavigationService} from './wizard-navigation';\nexport class HeaderActionService {\n/**\n * @param {?} navService\n */\nconstructor(public navService: WizardNavigationService) {}\npublic wizardHeaderActions: QueryList<WizardHeaderAction>;\n/**\n * @return {?}\n */\npublic get wizardHasHeaderActions(): boolean {\n        const /** @type {?} */ wizardHdrActions = this.wizardHeaderActions;\n        if (!wizardHdrActions) {\n            return false;\n        }\n        return wizardHdrActions.toArray().length > 0;\n    }\n/**\n * @return {?}\n */\npublic get currentPageHasHeaderActions(): boolean {\n        return this.navService.currentPage ? this.navService.currentPage.hasHeaderActions : false;\n    }\n/**\n * @return {?}\n */\npublic get showWizardHeaderActions(): boolean {\n        return !this.currentPageHasHeaderActions && this.wizardHasHeaderActions;\n    }\n/**\n * @return {?}\n */\npublic get displayHeaderActionsWrapper(): boolean {\n        return this.currentPageHasHeaderActions || this.wizardHasHeaderActions;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WizardNavigationService, },\n];\n}\n\nfunction HeaderActionService_tsickle_Closure_declarations() {\n/** @type {?} */\nHeaderActionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeaderActionService.ctorParameters;\n/** @type {?} */\nHeaderActionService.prototype.wizardHeaderActions;\n/** @type {?} */\nHeaderActionService.prototype.navService;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable, OnDestroy, TemplateRef} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {GHOST_PAGE_ANIMATION} from '../../modal/utils/ghost-page-animations';\nimport {WizardPage} from '../wizard-page';\n\nimport {ButtonHubService} from './button-hub';\nimport {PageCollectionService} from './page-collection';\n/**\n * Performs navigation functions for a wizard and manages the current page. Presented as a\n * separate service to encapsulate the behavior of navigating and completing the wizard so\n * that it can be shared across the wizard and its sub-components.\n * \n * The easiest way to access the navigation service is there a reference on your wizard. The\n * Following example would allow you to access your instance of the wizard from your host\n * component and thereby access the navigation service via YourHostComponent.wizard.navService.\n * \n * \\@example \n * <clr-wizard #wizard ...>\n * \n * \\@example \n * export class YourHostComponent {\n *   \\@ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n * \n * @export\n * \\@class WizardNavigationService\n */\nexport class WizardNavigationService implements OnDestroy {\n/**\n * Is notified when a previous button is clicked in the wizard. Performs checks\n * before alerting the current page of the button click. Enacts navigation to\n * the previous page if not overridden at the page level.\n * \n * \\@memberof WizardNavigationService\n */\npublic previousButtonSubscription: Subscription;\n/**\n * Is notified when a Next button is clicked in the wizard.\n * \n * \\@memberof WizardNavigationService\n */\npublic nextButtonSubscription: Subscription;\n/**\n * Is notified when a danger button is clicked in the wizard.\n * \n * \\@memberof WizardNavigationService\n */\npublic dangerButtonSubscription: Subscription;\n/**\n * Is notified when a  finish button is clicked in the wizard.\n * \n * \\@memberof WizardNavigationService\n */\npublic finishButtonSubscription: Subscription;\n/**\n * Is notified when a Custom button is clicked in the wizard.\n * \n * \\@memberof WizardNavigationService\n */\npublic customButtonSubscription: Subscription;\n/**\n * Is notified when a Cancel button is clicked in the wizard. Notifies the wizard,\n * which handles all cancel functionality, if cancel is not overridden at the page\n * level.\n * \n * \\@memberof WizardNavigationService\n */\npublic cancelButtonSubscription: Subscription;\n/**\n * Resets navigation to make the first page current when the page collection service\n * emits an event notifying WizardNavigationService that it has reset all pages\n * to their pristine, incomplete state.\n * \n * \\@memberof WizardNavigationService\n */\npublic pagesResetSubscription: Subscription;\n/**\n * Creates an instance of WizardNavigationService. Also sets up subscriptions\n * that listen to the button service to determine when a button has been clicked\n * in the wizard. Is also responsible for taking action when the page collection\n * requests that navigation be reset to its pristine state.\n * \n * \n * \\@memberof WizardNavigationService\n * @param {?} pageCollection\n * @param {?} buttonService\n */\nconstructor(public pageCollection: PageCollectionService,\npublic buttonService: ButtonHubService) {\n        this.previousButtonSubscription = this.buttonService.previousBtnClicked.subscribe(() => {\n            const currentPage = this.currentPage;\n            if (this.currentPageIsFirst || currentPage.previousStepDisabled) {\n                return;\n            }\n            currentPage.previousButtonClicked.emit(currentPage);\n            if (!currentPage.preventDefault) {\n                this.previous();\n            }\n        });\n\n        this.nextButtonSubscription = this.buttonService.nextBtnClicked.subscribe(() => {\n            this.checkAndCommitCurrentPage(\"next\");\n        });\n\n        this.dangerButtonSubscription = this.buttonService.dangerBtnClicked.subscribe(() => {\n            this.checkAndCommitCurrentPage(\"danger\");\n        });\n\n        this.finishButtonSubscription = this.buttonService.finishBtnClicked.subscribe(() => {\n            this.checkAndCommitCurrentPage(\"finish\");\n        });\n\n        this.customButtonSubscription = this.buttonService.customBtnClicked.subscribe((type: string) => {\n            if (!this.wizardStopNavigation) {\n                this.currentPage.customButtonClicked.emit(type);\n            }\n        });\n\n        this.cancelButtonSubscription = this.buttonService.cancelBtnClicked.subscribe(() => {\n            if (this.wizardStopNavigation) {\n                return;\n            }\n\n            if (this.currentPage.preventDefault) {\n                this.currentPage.pageOnCancel.emit(this.currentPage);\n            } else {\n                this.cancel();\n            }\n        });\n\n        this.pagesResetSubscription = this.pageCollection.pagesReset.subscribe(() => {\n            this.setFirstPageCurrent();\n        });\n    }\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n * @return {?}\n */\nngOnDestroy(): void {\n        this.previousButtonSubscription.unsubscribe();\n        this.nextButtonSubscription.unsubscribe();\n        this.dangerButtonSubscription.unsubscribe();\n        this.finishButtonSubscription.unsubscribe();\n        this.customButtonSubscription.unsubscribe();\n        this.cancelButtonSubscription.unsubscribe();\n        this.pagesResetSubscription.unsubscribe();\n    }\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n */\nprivate _currentChanged = new Subject<WizardPage>();\n/**\n * An Observable that is predominantly used amongst the subcomponents and services\n * of the wizard. It is recommended that users listen to the WizardPage.onLoad\n * (clrWizardPageOnLoad) output instead of this Observable.\n * \n * \n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic get currentPageChanged(): Observable<WizardPage> {\n        // TODO: MAKE SURE EXTERNAL OUTPUTS SAY 'CHANGE' NOT 'CHANGED'\n        // A BREAKING CHANGE SO AWAITING MINOR RELEASE\n        return this._currentChanged.asObservable();\n    }\n/**\n * A Boolean flag used by the WizardPage to avoid a race condition when pages are\n * loading and there is no current page defined.\n * \n * \\@memberof WizardNavigationService\n */\npublic navServiceLoaded = false;\n/**\n * A boolean flag shared across the Wizard subcomponents that follows the value\n * of the Wizard.forceForward (clrWizardForceForwardNavigation) input. When true,\n * navigating backwards in the stepnav menu will reset any skipped pages' completed\n * state to false.\n * \n * This is useful when a wizard executes validation on a page-by-page basis when\n * the next button is clicked.\n * \n * \\@memberof WizardNavigationService\n */\npublic forceForwardNavigation = false;\n/**\n *\n * \\@ignore\n * \\@readonly\n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic get currentPageTitle(): TemplateRef<any> {\n        // when the querylist of pages is empty. this is the first place it fails...\n        if (!this.currentPage) {\n            return null;\n        }\n        return this.currentPage.title;\n    }\n/**\n * Returns a Boolean that tells you whether or not the current page is the first\n * page in the Wizard.\n * \n * This is helpful for determining whether a page is navigable.\n * \n * \\@readonly\n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic get currentPageIsFirst(): boolean {\n        return this.pageCollection.firstPage === this.currentPage;\n    }\n/**\n * Returns a Boolean that tells you whether or not the current page is the\n * next to last page in the Wizard.\n * \n * This is used to determine the animation state of ghost pages.\n * \n * \\@readonly\n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic get currentPageIsNextToLast(): boolean {\n        return this.pageCollection.penultimatePage === this.currentPage;\n    }\n/**\n * Returns a Boolean that tells you whether or not the current page is the\n * last page in the Wizard.\n * \n * This is used to determine the animation state of ghost pages as well as\n * which buttons should display in the wizard footer.\n * \n * \\@readonly\n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic get currentPageIsLast(): boolean {\n        return this.pageCollection.lastPage === this.currentPage;\n    }\n/**\n *\n * \\@ignore\n * \\@memberof WizardNavigationService\n */\nprivate _currentPage: WizardPage;\n/**\n * Returns the WizardPage object of the current page or null.\n * \n * \\@memberof WizardNavigationService\n * @return {?}\n */\nget currentPage(): WizardPage {\n        if (!this._currentPage) {\n            return null;\n        }\n        return this._currentPage;\n    }\n/**\n * Accepts a WizardPage object, since that object to be the current/active\n * page in the wizard, and emits the WizardPage.onLoad (clrWizardPageOnLoad)\n * event for that page.\n * \n * Note that all of this work is bypassed if the WizardPage object is already\n * the current page.\n * \n * \\@memberof WizardNavigationService\n * @param {?} page\n * @return {?}\n */\nset currentPage(page: WizardPage) {\n        if (this._currentPage !== page && !this.wizardStopNavigation) {\n            this._currentPage = page;\n            page.onLoad.emit(page.id);\n            this._currentChanged.next(page);\n        }\n    }\n/**\n * (DEPRECATED) A legacy means of setting the current page in the wizard.\n * Deprecated in 0.9.4. Accepts a WizardPage object as a parameter and then\n * tries to set that page to be the current page in the wizard.\n * \n * \n * \\@memberof WizardNavigationService\n * @param {?} page\n * @return {?}\n */\npublic setCurrentPage(page: WizardPage): void {\n        this.currentPage = page;\n    }\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n */\nprivate _movedToNextPage = new Subject<boolean>();\n/**\n * An observable used internally to alert the wizard that forward navigation\n * has occurred. It is recommended that you use the Wizard.onMoveNext\n * (clrWizardOnNext) output instead of this one.\n * \n * \\@readonly\n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic get movedToNextPage(): Observable<boolean> {\n        return this._movedToNextPage.asObservable();\n    }\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n */\nprivate _wizardFinished = new Subject<boolean>();\n/**\n * An observable used internally to alert the wizard that the nav service\n * has approved completion of the wizard.\n * \n * It is recommended that you use the Wizard.wizardFinished (clrWizardOnFinish)\n * output instead of this one.\n * \n * \\@readonly\n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic get wizardFinished(): Observable<boolean> {\n        return this._wizardFinished.asObservable();\n    }\n/**\n * This is a public function that can be used to programmatically advance\n * the user to the next page.\n * \n * When invoked, this method will move the wizard to the next page after\n * successful validation. Note that this method goes through all checks\n * and event emissions as if Wizard.next(false) had been called.\n * \n * In most cases, it makes more sense to use Wizard.next(false).\n * \n * \n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic next(): void {\n        if (this.currentPageIsLast) {\n            this.checkAndCommitCurrentPage(\"finish\");\n            return;\n        }\n\n        this.checkAndCommitCurrentPage(\"next\");\n\n        if (!this.wizardHasAltNext && !this.wizardStopNavigation) {\n            this._movedToNextPage.next(true);\n        }\n    }\n/**\n * Bypasses checks and most event emissions to force a page to navigate forward.\n * \n * Comparable to calling Wizard.next() or Wizard.forceNext().\n * \n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic forceNext(): void {\n        const /** @type {?} */ currentPage: WizardPage = this.currentPage;\n        const /** @type {?} */ nextPage: WizardPage = this.pageCollection.getNextPage(currentPage);\n\n        // catch errant null or undefineds that creep in\n        if (!nextPage) {\n            throw new Error(\"The wizard has no next page to go to.\");\n        }\n\n        if (this.wizardStopNavigation) {\n            return;\n        }\n\n        if (!currentPage.completed) {\n            // this is a state that alt next flows can get themselves in...\n            this.pageCollection.commitPage(currentPage);\n        }\n        this.currentPage = nextPage;\n    }\n/**\n * Accepts a button/action type as a parameter. Encapsulates all logic for\n * event emissions, state of the current page, and wizard and page level overrides.\n * \n * Avoid calling this function directly unless you really know what you're doing.\n * \n * \n * \\@memberof WizardNavigationService\n * @param {?} buttonType\n * @return {?}\n */\npublic checkAndCommitCurrentPage(buttonType: string): void {\n        const /** @type {?} */ currentPage: WizardPage = this.currentPage;\n        let /** @type {?} */ iAmTheLastPage: boolean;\n\n        let /** @type {?} */ isNext: boolean;\n        let /** @type {?} */ isDanger: boolean;\n        let /** @type {?} */ isDangerNext: boolean;\n        let /** @type {?} */ isDangerFinish: boolean;\n        let /** @type {?} */ isFinish: boolean;\n\n        if (!currentPage.readyToComplete || this.wizardStopNavigation) {\n            return;\n        }\n\n        iAmTheLastPage = this.currentPageIsLast;\n\n        isNext = buttonType === \"next\";\n        isDanger = buttonType === \"danger\";\n        isDangerNext = isDanger && !iAmTheLastPage;\n        isDangerFinish = isDanger && iAmTheLastPage;\n        isFinish = buttonType === \"finish\" || isDangerFinish;\n\n        if (isFinish && !iAmTheLastPage) {\n            return;\n        }\n\n        currentPage.primaryButtonClicked.emit(buttonType);\n\n        if (isFinish) {\n            currentPage.finishButtonClicked.emit(currentPage);\n        } else if (isDanger) {\n            currentPage.dangerButtonClicked.emit();\n        } else if (isNext) {\n            currentPage.nextButtonClicked.emit();\n        }\n\n        if (currentPage.stopNext || currentPage.preventDefault) {\n            currentPage.onCommit.emit(currentPage.id);\n            return;\n        }\n\n        // order is very important with these emitters!\n        if (isFinish) {\n            // mark page as complete\n            if (!this.wizardHasAltNext) {\n                this.pageCollection.commitPage(currentPage);\n            }\n            this._wizardFinished.next();\n        }\n\n        if (this.wizardHasAltNext) {\n            this.pageCollection.commitPage(currentPage);\n\n            if (isNext || isDangerNext) {\n                this._movedToNextPage.next(true);\n            }\n            // jump out here, no matter what type we're looking at\n            return;\n        }\n\n        if (isNext || isDangerNext) {\n            this.forceNext();\n        }\n    }\n/**\n * This is a public function that can be used to programmatically conclude\n * the wizard.\n * \n * When invoked, this method will  initiate the work involved with finalizing\n * and finishing the wizard workflow. Note that this method goes through all\n * checks and event emissions as if Wizard.finish(false) had been called.\n * \n * In most cases, it makes more sense to use Wizard.finish(false).\n * \n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic finish(): void {\n        this.checkAndCommitCurrentPage(\"finish\");\n    }\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n */\nprivate _movedToPreviousPage = new Subject<boolean>();\n/**\n * Notifies the wizard when backwards navigation has occurred via the\n * previous button.\n * \n * \\@readonly\n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic get movedToPreviousPage(): Observable<boolean> {\n        return this._movedToPreviousPage.asObservable();\n    }\n/**\n * Programmatically moves the wizard to the page before the current page.\n * \n * In most instances, it makes more sense to call Wizard.previous()\n * which does the same thing.\n * \n * \n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic previous(): void {\n        let /** @type {?} */ previousPage: WizardPage;\n\n        if (this.currentPageIsFirst || this.wizardStopNavigation) {\n            return;\n        }\n\n        previousPage = this.pageCollection.getPreviousPage(this.currentPage);\n\n        if (!previousPage) {\n            return;\n        }\n\n        this._movedToPreviousPage.next(true);\n\n        if (this.forceForwardNavigation) {\n            this.currentPage.completed = false;\n        }\n\n        this.currentPage = previousPage;\n    }\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n */\nprivate _cancelWizard = new Subject<any>();\n/**\n * Notifies the wizard that a user is trying to cancel it.\n * \n * \\@readonly\n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic get notifyWizardCancel(): Observable<any> {\n        return this._cancelWizard.asObservable();\n    }\n/**\n * Allows a hook into the cancel workflow of the wizard from the nav service. Note that\n * this route goes through all checks and event emissions as if a cancel button had\n * been clicked.\n * \n * In most cases, users looking for a hook into the cancel routine are actually looking\n * for a way to close the wizard from their host component because they have prevented\n * the default cancel action.\n * \n * In this instance, it is recommended that you use Wizard.close() to avoid any event\n * emission loop resulting from an event handler calling back into routine that will\n * again evoke the events it handles.\n * \n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic cancel(): void {\n        this._cancelWizard.next();\n    }\n/**\n * A boolean flag shared across the Wizard subcomponents that follows the value\n * of the Wizard.stopCancel (clrWizardPreventDefaultCancel) input. When true, the cancel\n * routine is subverted and must be reinstated in the host component calling Wizard.close()\n * at some point.\n * \n * \\@memberof WizardNavigationService\n */\npublic wizardHasAltCancel: boolean = false;\n/**\n * A boolean flag shared across the Wizard subcomponents that follows the value\n * of the Wizard.stopNext (clrWizardPreventDefaultNext) input. When true, the next and finish\n * routines are subverted and must be reinstated in the host component calling Wizard.next(),\n * Wizard.forceNext(), Wizard.finish(), or Wizard.forceFinish().\n * \n * \\@memberof WizardNavigationService\n */\npublic wizardHasAltNext: boolean = false;\n/**\n * A boolean flag shared across the Wizard subcomponents that follows the value\n * of the Wizard.stopNavigation (clrWizardPreventNavigation) input. When true, all\n * navigational elements in the wizard are disabled.\n * \n * This is intended to freeze the wizard in place. Events are not fired so this is\n * not a way to implement alternate functionality for navigation.\n * \n * \\@memberof WizardNavigationService\n */\npublic wizardStopNavigation: boolean = false;\n/**\n * A boolean flag shared with the stepnav items that prevents user clicks on\n * stepnav items from navigating the wizard.\n * \n * \\@memberof WizardNavigationService\n */\npublic wizardDisableStepnav: boolean = false;\n/**\n * Performs all required checks to determine if a user can navigate to a page. Checking at each\n * point if a page is navigable -- completed where the page immediately after the last completed\n * page.\n * \n * Takes two parameters. The first one must be either the WizardPage object or the ID of the\n * WizardPage object that you want to make the current page.\n * \n * The second parameter is optional and is a Boolean flag for \"lazy completion\". What this means\n * is the Wizard will mark all pages between the current page and the page you want to navigate\n * to as completed. This is useful for informational wizards that do not require user action,\n * allowing an easy means for users to jump ahead.\n * \n * To avoid checks on navigation, use WizardPage.makeCurrent() instead.\n * \n * \\@memberof WizardNavigationService\n * @param {?} pageToGoToOrId\n * @param {?=} lazyComplete\n * @return {?} \n * \n */\npublic goTo(pageToGoToOrId: any, lazyComplete: boolean = false) {\n        let /** @type {?} */ pageToGoTo: WizardPage;\n        let /** @type {?} */ currentPage: WizardPage;\n        let /** @type {?} */ myPages: PageCollectionService;\n        let /** @type {?} */ pagesToCheck: WizardPage[];\n        let /** @type {?} */ okayToMove: boolean = true;\n        let /** @type {?} */ goingForward: boolean;\n        let /** @type {?} */ currentPageIndex: number;\n        let /** @type {?} */ goToPageIndex: number;\n\n        myPages = this.pageCollection;\n        pageToGoTo = (typeof pageToGoToOrId === \"string\") ? myPages.getPageById(pageToGoToOrId) : pageToGoToOrId;\n        currentPage = this.currentPage;\n\n        // no point in going to the current page. you're there already!\n        // also hard block on any navigation when stopNavigation is true\n        if (pageToGoTo === currentPage || this.wizardStopNavigation) {\n            return;\n        }\n\n        currentPageIndex = myPages.getPageIndex(currentPage);\n        goToPageIndex = myPages.getPageIndex(pageToGoTo);\n        goingForward = (goToPageIndex > currentPageIndex);\n        pagesToCheck = myPages.getPageRangeFromPages(this.currentPage, pageToGoTo);\n\n        okayToMove = lazyComplete || this.canGoTo(pagesToCheck);\n\n        if (!okayToMove) {\n            return;\n        }\n\n        if (goingForward && lazyComplete) {\n            pagesToCheck.forEach((page: WizardPage) => {\n                if (page !== pageToGoTo) {\n                    page.completed = true;\n                }\n            });\n        } else if (!goingForward && this.forceForwardNavigation) {\n            pagesToCheck.forEach((page: WizardPage) => {\n                page.completed = false;\n            });\n        }\n\n        this.currentPage = pageToGoTo;\n    }\n/**\n * Accepts a range of WizardPage objects as a parameter. Performs the work of checking\n * those objects to determine if navigation can be accomplished.\n * \n * \n * \\@memberof WizardNavigationService\n * @param {?} pagesToCheck\n * @return {?}\n */\npublic canGoTo(pagesToCheck: WizardPage[]): boolean {\n        let /** @type {?} */ okayToMove = true;\n        const /** @type {?} */ myPages = this.pageCollection;\n\n        // previous page can be important when moving because if it's completed it\n        // allows us to move to the page even if it's incomplete...\n        let /** @type {?} */ previousPagePasses: boolean;\n\n        if (!pagesToCheck || pagesToCheck.length < 1) {\n            return false;\n        }\n\n        pagesToCheck.forEach((page: WizardPage) => {\n            let /** @type {?} */ previousPage: WizardPage;\n\n            if (!okayToMove) {\n                return;\n            }\n\n            if (page.completed) {\n                // default is true. just jump out instead of complicating it.\n                return;\n            }\n\n            // so we know our page is not completed...\n            previousPage = myPages.getPageIndex(page) > 0 ? myPages.getPreviousPage(page) : null;\n            previousPagePasses = (previousPage === null) || (previousPage.completed === true);\n\n            // we are false if not the current page AND previous page is not completed\n            // (but must have a previous page)\n            if (!page.current && !previousPagePasses) {\n                okayToMove = false;\n            }\n            // falls through to true as default\n        });\n\n        return okayToMove;\n    }\n/**\n * Looks through the collection of pages to find the first one that is incomplete\n * and makes that page the current/active page.\n * \n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic setLastEnabledPageCurrent(): void {\n        const /** @type {?} */ allPages: WizardPage[] = this.pageCollection.pagesAsArray;\n        let /** @type {?} */ lastCompletedPageIndex: number = null;\n\n        allPages.forEach((page: WizardPage, index: number) => {\n            if (page.completed) {\n                lastCompletedPageIndex = index;\n            }\n        });\n\n        if (lastCompletedPageIndex === null) {\n            // always is at least the first item...\n            lastCompletedPageIndex = 0;\n        } else if ((lastCompletedPageIndex + 1) < allPages.length) {\n            lastCompletedPageIndex = lastCompletedPageIndex + 1;\n        }\n\n        this.currentPage = allPages[lastCompletedPageIndex];\n    }\n/**\n * Finds the first page in the collection of pages and makes that page the\n * current/active page.\n * \n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic setFirstPageCurrent(): void {\n        this.currentPage = this.pageCollection.pagesAsArray[0];\n    }\n/**\n *\n * \\@ignore\n * \\@memberof WizardNavigationService\n */\nprivate _wizardGhostPageState: string = GHOST_PAGE_ANIMATION.STATES.NO_PAGES;\n/**\n *\n * \\@ignore\n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic get wizardGhostPageState(): string {\n        return this._wizardGhostPageState;\n    }\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n * @param {?} value\n * @return {?}\n */\npublic set wizardGhostPageState(value: string) {\n        if (this.hideWizardGhostPages) {\n            this._wizardGhostPageState = GHOST_PAGE_ANIMATION.STATES.NO_PAGES;\n        } else {\n            this._wizardGhostPageState = value;\n        }\n    }\n/**\n *\n * \\@ignore\n * \\@memberof WizardNavigationService\n */\nprivate _hideWizardGhostPages: boolean = true;\n/**\n *\n * \\@ignore\n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic get hideWizardGhostPages(): boolean {\n        return this._hideWizardGhostPages;\n    }\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n * @param {?} value\n * @return {?}\n */\npublic set hideWizardGhostPages(value: boolean) {\n        this._hideWizardGhostPages = value;\n    }\n/**\n * Updates the stepnav on the left side of the wizard when pages are dynamically\n * added or removed from the collection of pages.\n * \n * \\@memberof WizardNavigationService\n * @return {?}\n */\npublic updateNavigation(): void {\n        let /** @type {?} */ toSetCurrent: WizardPage;\n        let /** @type {?} */ currentPageRemoved: boolean;\n\n        this.pageCollection.updateCompletedStates();\n\n        currentPageRemoved = this.pageCollection.pagesAsArray.indexOf(this.currentPage) < 0;\n        if (currentPageRemoved) {\n            toSetCurrent = this.pageCollection.findFirstIncompletePage();\n            this.currentPage = toSetCurrent;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PageCollectionService, },\n{type: ButtonHubService, },\n];\n}\n\nfunction WizardNavigationService_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardNavigationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardNavigationService.ctorParameters;\n/**\n * Is notified when a previous button is clicked in the wizard. Performs checks\n * before alerting the current page of the button click. Enacts navigation to\n * the previous page if not overridden at the page level.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.previousButtonSubscription;\n/**\n * Is notified when a Next button is clicked in the wizard.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.nextButtonSubscription;\n/**\n * Is notified when a danger button is clicked in the wizard.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.dangerButtonSubscription;\n/**\n * Is notified when a  finish button is clicked in the wizard.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.finishButtonSubscription;\n/**\n * Is notified when a Custom button is clicked in the wizard.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.customButtonSubscription;\n/**\n * Is notified when a Cancel button is clicked in the wizard. Notifies the wizard,\n * which handles all cancel functionality, if cancel is not overridden at the page\n * level.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.cancelButtonSubscription;\n/**\n * Resets navigation to make the first page current when the page collection service\n * emits an event notifying WizardNavigationService that it has reset all pages\n * to their pristine, incomplete state.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.pagesResetSubscription;\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype._currentChanged;\n/**\n * A Boolean flag used by the WizardPage to avoid a race condition when pages are\n * loading and there is no current page defined.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.navServiceLoaded;\n/**\n * A boolean flag shared across the Wizard subcomponents that follows the value\n * of the Wizard.forceForward (clrWizardForceForwardNavigation) input. When true,\n * navigating backwards in the stepnav menu will reset any skipped pages' completed\n * state to false.\n * \n * This is useful when a wizard executes validation on a page-by-page basis when\n * the next button is clicked.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.forceForwardNavigation;\n/**\n *\n * \\@ignore\n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype._currentPage;\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype._movedToNextPage;\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype._wizardFinished;\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype._movedToPreviousPage;\n/**\n *\n * \\@ignore \n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype._cancelWizard;\n/**\n * A boolean flag shared across the Wizard subcomponents that follows the value\n * of the Wizard.stopCancel (clrWizardPreventDefaultCancel) input. When true, the cancel\n * routine is subverted and must be reinstated in the host component calling Wizard.close()\n * at some point.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.wizardHasAltCancel;\n/**\n * A boolean flag shared across the Wizard subcomponents that follows the value\n * of the Wizard.stopNext (clrWizardPreventDefaultNext) input. When true, the next and finish\n * routines are subverted and must be reinstated in the host component calling Wizard.next(),\n * Wizard.forceNext(), Wizard.finish(), or Wizard.forceFinish().\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.wizardHasAltNext;\n/**\n * A boolean flag shared across the Wizard subcomponents that follows the value\n * of the Wizard.stopNavigation (clrWizardPreventNavigation) input. When true, all\n * navigational elements in the wizard are disabled.\n * \n * This is intended to freeze the wizard in place. Events are not fired so this is\n * not a way to implement alternate functionality for navigation.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.wizardStopNavigation;\n/**\n * A boolean flag shared with the stepnav items that prevents user clicks on\n * stepnav items from navigating the wizard.\n * \n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype.wizardDisableStepnav;\n/**\n *\n * \\@ignore\n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype._wizardGhostPageState;\n/**\n *\n * \\@ignore\n * \\@memberof WizardNavigationService\n * @type {?}\n */\nWizardNavigationService.prototype._hideWizardGhostPages;\n/** @type {?} */\nWizardNavigationService.prototype.pageCollection;\n/** @type {?} */\nWizardNavigationService.prototype.buttonService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable, QueryList} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\nimport {WizardPage} from '../wizard-page';\n/**\n * PageCollectionService manages the collection of pages assigned to the wizard and offers\n * a number of functions useful across the wizards providers and subcomponents -- all related\n * to essentially lookups on the collection of pages.\n * \n * The easiest way to access PageCollectionService is via the wizard. The\n * following example would allow you to access your instance of the wizard from your host\n * component and thereby access the page collection via YourHostComponent.wizard.pageCollection.\n * \n * \\@example \n * <clr-wizard #wizard ...>\n * \n * \\@example \n * export class YourHostComponent {\n *   \\@ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n * \n * The heart of the page collection is the query list of pages, which it is assigned as a\n * reference to the Wizard.pages QueryList when the wizard is created.\n * \n * @export\n * \\@class PageCollectionService\n */\nexport class PageCollectionService {\n/**\n * A reference to the Wizard.pages QueryList.\n * \n * Populated when the wizard is created.\n * \n * \\@memberof PageCollectionService\n */\npublic pages: QueryList<WizardPage>;\n/**\n * Converts the PageCollectionService.pages QueryList to an array and returns it.\n * \n * Useful for many instances when you would prefer a QueryList to act like an array.\n * \n * \\@readonly\n * \\@memberof PageCollectionService\n * @return {?}\n */\npublic get pagesAsArray(): WizardPage[] {\n        return this.pages ? this.pages.toArray() : [];\n    }\n/**\n * Returns the length of the pages query list.\n * \n * \\@readonly\n * \\@memberof PageCollectionService\n * @return {?}\n */\npublic get pagesCount(): number {\n        return this.pages ? this.pages.length : 0;\n    }\n/**\n * Returns the next-to-last page in the query list of pages. Operates as a getter\n * so that it isn't working with stale data.\n * \n * \\@readonly\n * \\@memberof PageCollectionService\n * @return {?}\n */\npublic get penultimatePage(): WizardPage {\n        const /** @type {?} */ pageCount = this.pagesCount;\n\n        if (pageCount < 2) {\n            return;\n        }\n\n        return this.pagesAsArray[pageCount - 2];\n    }\n/**\n * Returns the last page in the query list of pages. Operates as a getter\n * so that it isn't working with stale data.\n * \n * \\@readonly\n * \\@memberof PageCollectionService\n * @return {?}\n */\npublic get lastPage(): WizardPage {\n        const /** @type {?} */ pageCount = this.pagesCount;\n\n        if (pageCount < 1) {\n            return;\n        }\n\n        return this.pagesAsArray[pageCount - 1];\n    }\n/**\n * Returns the first page in the query list of pages. Operates as a getter\n * so that it isn't working with stale data.\n * \n * \\@readonly\n * \\@memberof PageCollectionService\n * @return {?}\n */\npublic get firstPage(): WizardPage {\n        if (!this.pagesCount) {\n            return;\n        }\n\n        return this.pagesAsArray[0];\n    }\n/**\n * Used mostly internally, but accepts a string ID and returns a WizardPage\n * object that matches the ID passed. Note that IDs here should include the prefix\n * \"clr-wizard-page-\".\n * \n * Returns the next-to-last page in the query list of pages. Operates as a getter\n * so that it isn't working with stale data.\n * \n * \\@readonly\n * \\@memberof PageCollectionService\n * @param {?} id\n * @return {?}\n */\npublic getPageById(id: string): WizardPage {\n        const /** @type {?} */ foundPages: WizardPage[] = this.pages.filter((page: WizardPage) => id === page.id);\n        return this.checkResults(foundPages, id);\n    }\n/**\n * Accepts s number as a parameter and treats that number as the index of the page\n * you're looking for in the collection of pages. Returns a  wizard page object.\n * \n * \n * \\@memberof PageCollectionService\n * @param {?} index\n * @return {?}\n */\npublic getPageByIndex(index: number): WizardPage {\n        const /** @type {?} */ pageCount = this.pagesCount;\n        const /** @type {?} */ pagesLastIndex: number = (pageCount > 1) ? pageCount - 1 : 0;\n\n        if (index < 0) {\n            throw new Error(\"Cannot retrieve page with index of \" + index);\n        }\n\n        if (index > pagesLastIndex) {\n            throw new Error(\"Page index is greater than length of pages array.\");\n        }\n\n        return this.pagesAsArray[index];\n    }\n/**\n * Takes a wizard page object as a parameter and returns its index in the\n * collection of pages.\n * \n * \n * \\@memberof PageCollectionService\n * @param {?} page\n * @return {?}\n */\npublic getPageIndex(page: WizardPage): number {\n        const /** @type {?} */ index = this.pagesAsArray.indexOf(page);\n\n        if (index < 0) {\n            throw new Error(\"Requested page cannot be found in collection of pages.\");\n        }\n\n        return index;\n    }\n/**\n * Consolidates guard logic that prevents a couple of unfortunate edge cases with\n * look ups on the collection of pages.\n * \n * \\@memberof PageCollectionService\n * @param {?} results\n * @param {?} requestedPageId\n * @return {?} \n * \n */\nprivate checkResults(results: WizardPage[], requestedPageId: string) {\n        const /** @type {?} */ foundPagesCount: number = results.length || 0;\n\n        if (foundPagesCount > 1) {\n            throw new Error(\"More than one page has the requested id \" + requestedPageId + \".\");\n        } else if (foundPagesCount < 1) {\n            throw new Error(\"No page can be found with the id \" + requestedPageId + \".\");\n        } else {\n            return results[0];\n        }\n    }\n/**\n * Accepts two numeric indexes and returns an array of wizard page objects that include\n * all wizard pages in the page collection from the first index to the second.\n * \n * \n * \\@memberof PageCollectionService\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\npublic pageRange(start: number, end: number): WizardPage[] {\n        let /** @type {?} */ pages: WizardPage[] = [];\n\n        if (start < 0 || end < 0) {\n            return [];\n        }\n\n        if (start === null || typeof start === undefined || isNaN(start)) {\n            return [];\n        }\n\n        if (end === null || typeof end === undefined || isNaN(end)) {\n            return [];\n        }\n\n\n        if (end > this.pagesCount) {\n            end = this.pagesCount;\n        }\n\n        pages = this.pagesAsArray;\n\n        if ((end - start) === 0) {\n            // just return the one page they want\n            return [this.getPageByIndex(start)];\n        }\n\n        // slice end does not include item referenced by end index, which is weird for users\n        // incrementing end index here to correct that so users and other methods\n        // don't have to think about it\n        end = end + 1;\n\n        // slice does not return the last one in the range but it does include the first one\n        // does not modify original array\n        return pages.slice(start, end);\n    }\n/**\n * Accepts two wizard page objects and returns those page objects with all other page\n * objects between them in the page collection. It doesn't care which page is ahead of the\n * other in the parameters. It will be smart enough to figure that out  on its own.\n * \n * \n * \\@memberof PageCollectionService\n * @param {?} page\n * @param {?} otherPage\n * @return {?}\n */\npublic getPageRangeFromPages(page: WizardPage, otherPage: WizardPage): WizardPage[] {\n        const /** @type {?} */ pageIndex = this.getPageIndex(page);\n        const /** @type {?} */ otherPageIndex = this.getPageIndex(otherPage);\n        let /** @type {?} */ startIndex: number;\n        let /** @type {?} */ endIndex: number;\n\n        if (pageIndex <= otherPageIndex) {\n            startIndex = pageIndex;\n            endIndex = otherPageIndex;\n        } else {\n            startIndex = otherPageIndex;\n            endIndex = pageIndex;\n        }\n        return this.pageRange(startIndex, endIndex);\n    }\n/**\n * Takes a wizard page object as a parameter and returns the wizard page object of\n * the page immediately before it in the page collection. Returns null if there is\n * no page before the page it is passed.\n * \n * \n * \\@memberof PageCollectionService\n * @param {?} page\n * @return {?}\n */\npublic getPreviousPage(page: WizardPage) {\n        const /** @type {?} */ myPageIndex = this.getPageIndex(page);\n        const /** @type {?} */ previousPageIndex = myPageIndex - 1;\n        if (previousPageIndex < 0) {\n            return null;\n        }\n        return this.getPageByIndex(previousPageIndex);\n    }\n/**\n * Accepts a wizard page object as a parameter and returns a Boolean that says if\n * the page you sent it is complete.\n * \n * \n * \\@memberof PageCollectionService\n * @param {?} page\n * @return {?}\n */\npublic previousPageIsCompleted(page: WizardPage) {\n        let /** @type {?} */ previousPage: WizardPage;\n\n        if (!page) {\n            return false;\n        }\n\n        previousPage = this.getPreviousPage(page);\n\n        if (null === previousPage) {\n            // page is the first page. no previous page.\n            return true;\n        }\n\n        return previousPage.completed;\n    }\n/**\n * Takes a wizard page object as a parameter and returns the wizard page object of\n * the page immediately after it in the page collection. Returns null if there is\n * no page after the page it is passed.\n * \n * \n * \\@memberof PageCollectionService\n * @param {?} page\n * @return {?}\n */\npublic getNextPage(page: WizardPage) {\n        const /** @type {?} */ myPageIndex = this.getPageIndex(page);\n        const /** @type {?} */ nextPageIndex = myPageIndex + 1;\n\n        if (nextPageIndex >= this.pagesAsArray.length) {\n            return null;\n        }\n        return this.getPageByIndex(nextPageIndex);\n    }\n/**\n * Takes a wizard page object as a parameter and generates a step item id from the\n * page ID. Returns the generated step item ID as a string.\n * \n * \n * \\@memberof PageCollectionService\n * @param {?} page\n * @return {?}\n */\npublic getStepItemIdForPage(page: WizardPage) {\n        const /** @type {?} */ pageId = page.id;\n        const /** @type {?} */ pageIdParts = pageId.split(\"-\").reverse();\n\n        pageIdParts[1] = \"step\";\n        return pageIdParts.reverse().join(\"-\");\n    }\n/**\n * Generally only used internally to mark that a specific page has been \"committed\".\n * This involves marking the page complete and firing the WizardPage.onCommit\n * (clrWizardPageOnCommit) output. Takes the wizard page object that you intend to\n * mark completed as a parameter.\n * \n * \n * \\@memberof PageCollectionService\n * @param {?} page\n * @return {?}\n */\npublic commitPage(page: WizardPage) {\n        const /** @type {?} */ pageHasOverrides = page.stopNext || page.preventDefault;\n        page.completed = true;\n\n        if (!pageHasOverrides) {\n            // prevent loop of event emission; alternate flows work off\n            // of event emitters this is how they break that cycle.\n            page.onCommit.emit(page.id);\n        }\n    }\n/**\n * \n * \n * \\@memberof PageCollectionService\n */\nprivate _pagesReset = new Subject<boolean>();\n/**\n * An observable that the navigation service listens to in order to know when\n * the page collection completed states have been reset to false so that way it\n * can also reset the navigation to make the first page in the page collection\n * current/active.\n * \n * \\@readonly\n * \\@memberof PageCollectionService\n * @return {?}\n */\npublic get pagesReset(): Observable<boolean> {\n        return this._pagesReset.asObservable();\n    }\n/**\n * Sets all completed states of the pages in the page collection to false and\n * notifies the navigation service to likewise reset the navigation.\n * \n * \\@memberof PageCollectionService\n * @return {?}\n */\npublic reset() {\n        this.pagesAsArray.forEach((page: WizardPage) => {\n            page.completed = false;\n        });\n        this._pagesReset.next(true);\n    }\n/**\n * Rolls through all the pages in the page collection to make sure there are no\n * incomplete pages sandwiched between completed pages in the workflow. Identifies\n * the first incomplete page index and sets all pages behind it to a completed\n * state of false.\n * \n * \n * \\@memberof PageCollectionService\n * @return {?}\n */\npublic updateCompletedStates(): void {\n        const /** @type {?} */ firstIncompleteIndex = this.findFirstIncompletePageIndex();\n\n        if (firstIncompleteIndex === this.pagesAsArray.length - 1) {\n            // all complete no need to do anything\n            return;\n        }\n\n        this.pagesAsArray.forEach((page: WizardPage, index: number) => {\n            if (index > firstIncompleteIndex) {\n                page.completed = false;\n            }\n        });\n    }\n/**\n * Retrieves the index of the first incomplete page in the page collection.\n * \n * \n * \\@memberof PageCollectionService\n * @return {?}\n */\npublic findFirstIncompletePageIndex(): number {\n        let /** @type {?} */ returnIndex: number = null;\n        this.pagesAsArray.forEach((page: WizardPage, index: number) => {\n            if (null === returnIndex && false === page.completed) {\n                returnIndex = index;\n            }\n        });\n\n        // fallthrough, all completed, return last page\n        if (null === returnIndex) {\n            returnIndex = this.pagesCount - 1;\n        }\n\n        return returnIndex;\n    }\n/**\n * @return {?}\n */\npublic findFirstIncompletePage(): WizardPage {\n        const /** @type {?} */ myIncompleteIndex = this.findFirstIncompletePageIndex();\n        return this.pagesAsArray[myIncompleteIndex];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PageCollectionService_tsickle_Closure_declarations() {\n/** @type {?} */\nPageCollectionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPageCollectionService.ctorParameters;\n/**\n * A reference to the Wizard.pages QueryList.\n * \n * Populated when the wizard is created.\n * \n * \\@memberof PageCollectionService\n * @type {?}\n */\nPageCollectionService.prototype.pages;\n/**\n * \n * \n * \\@memberof PageCollectionService\n * @type {?}\n */\nPageCollectionService.prototype._pagesReset;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nexport class ButtonHubService {\npublic buttonsReady: boolean = false;\nprivate _previousBtnClicked = new Subject<any>();\n/**\n * @return {?}\n */\npublic get previousBtnClicked(): Observable<any> {\n        return this._previousBtnClicked.asObservable();\n    }\nprivate _nextBtnClicked = new Subject<any>();\n/**\n * @return {?}\n */\npublic get nextBtnClicked(): Observable<any> {\n        return this._nextBtnClicked.asObservable();\n    }\nprivate _dangerBtnClicked = new Subject<any>();\n/**\n * @return {?}\n */\npublic get dangerBtnClicked(): Observable<any> {\n        return this._dangerBtnClicked.asObservable();\n    }\nprivate _cancelBtnClicked = new Subject<any>();\n/**\n * @return {?}\n */\npublic get cancelBtnClicked(): Observable<any> {\n        return this._cancelBtnClicked.asObservable();\n    }\nprivate _finishBtnClicked = new Subject<any>();\n/**\n * @return {?}\n */\npublic get finishBtnClicked(): Observable<any> {\n        return this._finishBtnClicked.asObservable();\n    }\nprivate _customBtnClicked = new Subject<any>();\n/**\n * @return {?}\n */\npublic get customBtnClicked(): Observable<any> {\n        return this._customBtnClicked.asObservable();\n    }\n/**\n * @param {?} buttonType\n * @return {?}\n */\npublic buttonClicked(buttonType: string): void {\n        if (\"previous\" === buttonType) {\n            this._previousBtnClicked.next();\n        } else if (\"next\" === buttonType) {\n            this._nextBtnClicked.next();\n        } else if (\"finish\" === buttonType) {\n            this._finishBtnClicked.next();\n        } else if (\"danger\" === buttonType) {\n            this._dangerBtnClicked.next();\n        } else if (\"cancel\" === buttonType) {\n            this._cancelBtnClicked.next();\n        } else {\n            this._customBtnClicked.next(buttonType);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ButtonHubService_tsickle_Closure_declarations() {\n/** @type {?} */\nButtonHubService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nButtonHubService.ctorParameters;\n/** @type {?} */\nButtonHubService.prototype.buttonsReady;\n/** @type {?} */\nButtonHubService.prototype._previousBtnClicked;\n/** @type {?} */\nButtonHubService.prototype._nextBtnClicked;\n/** @type {?} */\nButtonHubService.prototype._dangerBtnClicked;\n/** @type {?} */\nButtonHubService.prototype._cancelBtnClicked;\n/** @type {?} */\nButtonHubService.prototype._finishBtnClicked;\n/** @type {?} */\nButtonHubService.prototype._customBtnClicked;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Directive, TemplateRef} from '@angular/core';\nexport class WizardPageTitleDirective {\n/**\n * @param {?} pageTitleTemplateRef\n */\nconstructor(public pageTitleTemplateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrPageTitle]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction WizardPageTitleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardPageTitleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardPageTitleDirective.ctorParameters;\n/** @type {?} */\nWizardPageTitleDirective.prototype.pageTitleTemplateRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Directive, TemplateRef} from '@angular/core';\nexport class WizardPageNavTitleDirective {\n/**\n * @param {?} pageNavTitleTemplateRef\n */\nconstructor(public pageNavTitleTemplateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrPageNavTitle]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction WizardPageNavTitleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardPageNavTitleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardPageNavTitleDirective.ctorParameters;\n/** @type {?} */\nWizardPageNavTitleDirective.prototype.pageNavTitleTemplateRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Directive, TemplateRef} from '@angular/core';\nexport class WizardPageHeaderActionsDirective {\n/**\n * @param {?} pageHeaderActionsTemplateRef\n */\nconstructor(public pageHeaderActionsTemplateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrPageHeaderActions]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction WizardPageHeaderActionsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardPageHeaderActionsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardPageHeaderActionsDirective.ctorParameters;\n/** @type {?} */\nWizardPageHeaderActionsDirective.prototype.pageHeaderActionsTemplateRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Directive, TemplateRef} from '@angular/core';\nexport class WizardPageButtonsDirective {\n/**\n * @param {?} pageButtonsTemplateRef\n */\nconstructor(public pageButtonsTemplateRef: TemplateRef<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrPageButtons]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction WizardPageButtonsDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nWizardPageButtonsDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWizardPageButtonsDirective.ctorParameters;\n/** @type {?} */\nWizardPageButtonsDirective.prototype.pageButtonsTemplateRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {ClrDropdownModule} from './dropdown/dropdown.module';\nimport {ClrSignpostModule} from './signpost/signpost.module';\nimport {ClrTooltipModule} from './tooltip/tooltip.module';\nexport class ClrPopoverModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{exports: [ClrDropdownModule, ClrSignpostModule, ClrTooltipModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrPopoverModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrPopoverModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrPopoverModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ClrIconModule} from '../../icon/icon.module';\nimport {ClrConditionalModule} from '../../utils/conditional/conditional.module';\nimport {ClrCommonPopoverModule} from '../common/popover.module';\n\nimport {TOOLTIP_DIRECTIVES} from './index';\nexport class ClrTooltipModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrCommonPopoverModule],\n    declarations: [TOOLTIP_DIRECTIVES],\n    exports: [TOOLTIP_DIRECTIVES, ClrConditionalModule, ClrIconModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrTooltipModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrTooltipModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrTooltipModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\n\nimport {Tooltip} from './tooltip';\nimport {TooltipContent} from './tooltip-content';\nimport {TooltipTrigger} from './tooltip-trigger';\n\n\nexport {Tooltip} from './tooltip';\nexport {TooltipTrigger} from './tooltip-trigger';\nexport {TooltipContent} from './tooltip-content';\nexport const /** @type {?} */ TOOLTIP_DIRECTIVES: Type<any>[] = [Tooltip, TooltipTrigger, TooltipContent];\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, HostListener} from '@angular/core';\nimport {IfOpenService} from '../../utils/conditional/if-open.service';\nexport class TooltipTrigger {\n/**\n * @param {?} ifOpenService\n */\nconstructor(private ifOpenService: IfOpenService) {}\n/**\n * @return {?}\n */\nshowTooltip(): void {\n        this.ifOpenService.open = true;\n    }\n/**\n * @return {?}\n */\nhideTooltip(): void {\n        this.ifOpenService.open = false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrTooltipTrigger]\", host: {\"[attr.tabindex]\": \"0\"}}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IfOpenService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'showTooltip': [{ type: HostListener, args: [\"mouseenter\", ] },{ type: HostListener, args: [\"focus\", ] },],\n'hideTooltip': [{ type: HostListener, args: [\"mouseleave\", ] },{ type: HostListener, args: [\"blur\", ] },],\n};\n}\n\nfunction TooltipTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipTrigger.ctorParameters;\n/** @type {?} */\nTooltipTrigger.propDecorators;\n/** @type {?} */\nTooltipTrigger.prototype.ifOpenService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, ElementRef, Inject, Injector, Input, Optional, SkipSelf} from '@angular/core';\nimport {AbstractPopover} from '../common/abstract-popover';\nimport {Point} from '../common/popover';\nimport {POPOVER_HOST_ANCHOR} from '../common/popover-host-anchor.token';\n\nconst /** @type {?} */ POSITIONS: string[] = [\"bottom-left\", \"bottom-right\", \"top-left\", \"top-right\", \"right\", \"left\"];\n\nconst /** @type {?} */ SIZES: string[] = [\"xs\", \"sm\", \"md\", \"lg\"];\nexport class TooltipContent extends AbstractPopover {\n/**\n * @param {?} injector\n * @param {?} parentHost\n */\nconstructor(injector: Injector,   parentHost: ElementRef) {\n        if (!parentHost) {\n            throw new Error(\"clr-tooltip-content should only be used inside of a clr-tooltip\");\n        }\n        super(injector, parentHost);\n        // Defaults\n        this.position = \"right\";\n        this.size = \"sm\";\n    }\nprivate _position: string;\n/**\n * @return {?}\n */\nget position() {\n        return this._position;\n    }\n/**\n * @param {?} position\n * @return {?}\n */\nset position(position: string) {\n        // Ugh\n        this.renderer.removeClass(this.el.nativeElement, \"tooltip-\" + this.position);\n        if (position && (POSITIONS.indexOf(position) > -1)) {\n            this._position = position;\n        } else {\n            this._position = \"right\";\n        }\n        // Ugh\n        this.renderer.addClass(this.el.nativeElement, \"tooltip-\" + this.position);\n\n        // set the popover values based on direction\n        switch (position) {\n            case (\"top-right\"):\n                this.anchorPoint = Point.TOP_CENTER;\n                this.popoverPoint = Point.LEFT_BOTTOM;\n                break;\n            case (\"top-left\"):\n                this.anchorPoint = Point.TOP_CENTER;\n                this.popoverPoint = Point.RIGHT_BOTTOM;\n                break;\n            case (\"bottom-right\"):\n                this.anchorPoint = Point.BOTTOM_CENTER;\n                this.popoverPoint = Point.LEFT_TOP;\n                break;\n            case (\"bottom-left\"):\n                this.anchorPoint = Point.BOTTOM_CENTER;\n                this.popoverPoint = Point.RIGHT_TOP;\n                break;\n            case (\"right\"):\n                this.anchorPoint = Point.RIGHT_CENTER;\n                this.popoverPoint = Point.LEFT_TOP;\n                break;\n            case (\"left\"):\n                this.anchorPoint = Point.LEFT_CENTER;\n                this.popoverPoint = Point.RIGHT_TOP;\n                break;\n            default:\n                this.anchorPoint = Point.RIGHT_CENTER;\n                this.popoverPoint = Point.LEFT_TOP;\n                break;\n        }\n    }\nprivate _size: string;\n/**\n * @return {?}\n */\nget size() {\n        return this._size;\n    }\n/**\n * @param {?} size\n * @return {?}\n */\nset size(size: string) {\n        // Ugh\n        this.renderer.removeClass(this.el.nativeElement, \"tooltip-\" + this.size);\n        if (size && (SIZES.indexOf(size) > -1)) {\n            this._size = size;\n        } else {\n            this._size = \"sm\";\n        }\n        // Ugh\n        this.renderer.addClass(this.el.nativeElement, \"tooltip-\" + this.size);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-tooltip-content\",\n    template: `\n        <ng-content></ng-content>\n    `,\n    host: {\n        \"[class.tooltip-content]\": \"true\",\n        // I'm giving up on animation, they did not work before and will not work now.\n        // Too many conflicts with Clarity UI.\n        \"[style.opacity]\": \"1\"\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n{type: ElementRef, decorators: [{ type: Optional }, { type: Inject, args: [POPOVER_HOST_ANCHOR, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: Input, args: [\"clrPosition\", ] },],\n'size': [{ type: Input, args: [\"clrSize\", ] },],\n};\n}\n\nfunction TooltipContent_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipContent.ctorParameters;\n/** @type {?} */\nTooltipContent.propDecorators;\n/** @type {?} */\nTooltipContent.prototype._position;\n/** @type {?} */\nTooltipContent.prototype._size;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, ElementRef, InjectionToken} from '@angular/core';\nimport {IfOpenService} from '../../utils/conditional/if-open.service';\nimport {POPOVER_HOST_ANCHOR} from '../common/popover-host-anchor.token';\nexport class Tooltip {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-tooltip\",\n    template: `\n        <ng-content></ng-content>\n    `,\n    host: {\n        \"[class.tooltip]\": \"true\",\n    },\n    providers: [IfOpenService, {provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Tooltip_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltip.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltip.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ClrIconModule} from '../../icon/icon.module';\nimport {ClrConditionalModule} from '../../utils/conditional/conditional.module';\nimport {ClrCommonPopoverModule} from '../common/popover.module';\n\nimport {SIGNPOST_DIRECTIVES} from './index';\nexport class ClrSignpostModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrCommonPopoverModule, ClrIconModule],\n    declarations: [SIGNPOST_DIRECTIVES],\n    exports: [SIGNPOST_DIRECTIVES, ClrConditionalModule],\n    providers: []\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrSignpostModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrSignpostModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrSignpostModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Type} from '@angular/core';\nimport {Signpost} from './signpost';\nimport {SignpostContent} from './signpost-content';\nimport {SignpostTriggerDirective} from './signpost-trigger.directive';\n\nexport {Signpost} from './signpost';\nexport {SignpostContent} from './signpost-content';\nexport {SignpostTriggerDirective} from './signpost-trigger.directive';\n\nexport const /** @type {?} */ SIGNPOST_DIRECTIVES: Type<any>[] = [Signpost, SignpostContent, SignpostTriggerDirective];\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, ElementRef, Inject, Injector, Input, Optional, SkipSelf} from '@angular/core';\n\nimport {AbstractPopover} from '../common/abstract-popover';\nimport {POPOVER_HOST_ANCHOR} from '../common/popover-host-anchor.token';\n\nimport {SIGNPOST_POSITIONS} from './signpost-positions';\n\n// aka where the arrow / pointer is at in relation to the anchor\nconst /** @type {?} */ POSITIONS: string[] = [\n    \"top-left\",\n    \"top-middle\",\n    \"top-right\",\n    \"right-top\",\n    \"right-middle\",  // default\n    \"right-bottom\",\n    \"bottom-right\",\n    \"bottom-middle\",\n    \"bottom-left\",\n    \"left-bottom\",\n    \"left-middle\",\n    \"left-top\",\n];\nexport class SignpostContent extends AbstractPopover {\n/**\n * @param {?} injector\n * @param {?} parentHost\n */\nconstructor(injector: Injector,   parentHost: ElementRef) {\n        if (!parentHost) {\n            throw new Error(\"clr-signpost-content should only be used inside of a clr-signpost\");\n        }\n        super(injector, parentHost);\n        // Defaults\n        this.position = \"right-middle\";\n        this.closeOnOutsideClick = true;\n    }\n/**\n * *******\n * \\@function close\n * \n * \\@description \n * Close function that uses the signpost instance to toggle the state of the content popover.\n * \n * @return {?}\n */\nclose() {\n        this.ifOpenService.open = false;\n    }\nprivate _position: string;\n/**\n * @return {?}\n */\nget position() {\n        return this._position;\n    }\n/**\n * ******\n * \\@function set position\n * \n * \\@description \n * A setter for the position of the SignpostContent popover. This is a combination of the following:\n * - anchorPoint - where on the trigger to anchor the SignpostContent\n * - popoverPoint - where on the SignpostContent container to align with the anchorPoint\n * - offsetY - where on the Y axis to align the SignpostContent so it meets specs\n * - offsetX - where on the X axis to align the SignpostContent so it meets specs\n * There are 12 possible positions to place a SignpostContent container:\n * - top-left\n * - top-middle\n * - top-right\n * - right-top\n * - right-middle\n * - right-bottom\n * - bottom-right\n * - bottom-middle\n * - bottom-left\n * - left-bottom\n * - left-middle\n * - left-top\n * \n * I think of it as follows for 'top-left' -> CONTAINER_SIDE-SIDE_POSITION. In this case CONTAINER_SIDE is 'top'\n * meaning the top of the trigger icon (above the icon that hides/shows) the SignpostContent. And, SIDE_POSITION is\n * 'left' meaning two things: 1) the SignpostContent container extends to the left and 2) the 'arrow/pointer'\n * linking the SingpostContent to the trigger points down at the horizontal center of the trigger icon.\n * \n * @param {?} position\n * @return {?}\n */\nset position(position: string) {\n        // Ugh\n        this.renderer.removeClass(this.el.nativeElement, this.position);\n        if (position && (POSITIONS.indexOf(position) > -1)) {\n            this._position = position;\n        } else {\n            this._position = \"right-middle\";\n        }\n        // Ugh\n        this.renderer.addClass(this.el.nativeElement, this.position);\n\n        const /** @type {?} */ setPosition = SIGNPOST_POSITIONS[this.position];\n        this.anchorPoint = setPosition.anchorPoint;\n        this.popoverPoint = setPosition.popoverPoint;\n        this.popoverOptions.offsetY = setPosition.offsetY;\n        this.popoverOptions.offsetX = setPosition.offsetX;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-signpost-content\",\n    template: `\n        <div class=\"signpost-flex-wrap\">\n            <div class=\"popover-pointer\"></div>\n            <div class=\"signpost-content-header\">\n                <button type=\"button\" class=\"signpost-action close\" aria-label=\"Close\" (click)=\"close()\">\n                    <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                </button>\n            </div>\n            <div class=\"signpost-content-body\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n    host: {\"[class.signpost-content]\": \"true\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n{type: ElementRef, decorators: [{ type: Optional }, { type: Inject, args: [POPOVER_HOST_ANCHOR, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: Input, args: [\"clrPosition\", ] },],\n};\n}\n\nfunction SignpostContent_tsickle_Closure_declarations() {\n/** @type {?} */\nSignpostContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSignpostContent.ctorParameters;\n/** @type {?} */\nSignpostContent.propDecorators;\n/** @type {?} */\nSignpostContent.prototype._position;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Point} from '../common/popover';\n\nexport interface Position {\n    anchorPoint: Point;\n    popoverPoint: Point;\n    offsetY: number;\n    offsetX: number;\n}\n\nexport const /** @type {?} */ SIGNPOST_POSITIONS: {[input: string]: Position} = {\n    \"top-left\": {anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_RIGHT, offsetY: -10, offsetX: 0},\n    \"top-middle\": {anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_CENTER, offsetY: -10, offsetX: 0},\n    \"top-right\": {anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_LEFT, offsetY: -10, offsetX: 0},\n    \"right-top\": {anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_BOTTOM, offsetY: 2, offsetX: 14},\n    \"right-middle\": {anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14},\n    \"right-bottom\": {anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_TOP, offsetY: -1, offsetX: 14},\n    \"bottom-right\": {anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_LEFT, offsetY: 9, offsetX: -1},\n    \"bottom-middle\": {anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_CENTER, offsetY: 9, offsetX: 12},\n    \"bottom-left\": {anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_RIGHT, offsetY: 9, offsetX: 0},\n    \"left-bottom\": {anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_TOP, offsetY: 0, offsetX: -14},\n    \"left-middle\": {anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_CENTER, offsetY: 4, offsetX: -14},\n    \"left-top\": {anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_BOTTOM, offsetY: 0, offsetX: -14},\n    \"default\": {anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14},\n};\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ClrIconModule} from '../icon/icon.module';\nimport {ClrFocusTrapModule} from '../utils/focus-trap/focus-trap.module';\n\nimport {MODAL_DIRECTIVES} from './index';\nexport class ClrModalModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrIconModule, ClrFocusTrapModule],\n    declarations: [MODAL_DIRECTIVES],\n    exports: [MODAL_DIRECTIVES]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrModalModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrModalModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrModalModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {Modal} from './modal';\n\nexport {Modal} from './modal';\n\nexport const /** @type {?} */ MODAL_DIRECTIVES: Type<any>[] = [Modal];","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\nimport {\n    Component,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChange,\n    ViewChild\n} from '@angular/core';\n\nimport {FocusTrapDirective} from '../utils/focus-trap/focus-trap.directive';\nimport {ScrollingService} from '../utils/scrolling/scrolling-service';\n\nimport {GHOST_PAGE_ANIMATION} from './utils/ghost-page-animations';\nexport class Modal implements OnChanges, OnDestroy {\n     focusTrap: FocusTrapDirective;\n      _open: boolean = false;\n     _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n     closable: boolean = true;\n     size: string;\n     staticBackdrop: boolean = false;\n     skipAnimation: string = \"false\";\n\n    // presently this is only used by wizards\n     ghostPageState: string = \"hidden\";\n     bypassScrollService: boolean = false;\n     stopClose: boolean = false;\n     altClose: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n/**\n * @param {?} _scrollingService\n */\nconstructor(private _scrollingService: ScrollingService) {}\n/**\n * @return {?}\n */\nget sizeClass(): string {\n        if (this.size) {\n            return \"modal-\" + this.size;\n        } else {\n            return \"\";\n        }\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: {[propName: string]: SimpleChange}): void {\n        if (!this.bypassScrollService && changes && changes.hasOwnProperty(\"_open\")) {\n            if (changes._open.currentValue) {\n                this._scrollingService.stopScrolling();\n            } else {\n                this._scrollingService.resumeScrolling();\n            }\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n        this._scrollingService.resumeScrolling();\n    }\n/**\n * @return {?}\n */\nopen(): void {\n        if (this._open === true) {\n            return;\n        }\n        this._open = true;\n        this._openChanged.emit(true);\n    }\n/**\n * @return {?}\n */\nclose(): void {\n        if (this.stopClose) {\n            this.altClose.emit(false);\n            return;\n        }\n        if (!this.closable || this._open === false) {\n            return;\n        }\n        this._open = false;\n        // todo: remove this after animation bug is fixed https://github.com/angular/angular/issues/15798\n        // this was handled by the fadeDone event below, but that AnimationEvent is not firing in Angular 4.0.\n        this._openChanged.emit(false);\n        // SPECME\n        this.focusTrap.setPreviousFocus();  // Handles moving focus back to the element that had it before.\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nfadeDone(e: AnimationEvent) {\n        if (e.toState === \"void\") {\n            this._openChanged.emit(false);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-modal\",\n    viewProviders: [ScrollingService],\n    template: `\n\n      <!--\n        ~ Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n        ~ This software is released under MIT license.\n        ~ The full license information can be found in LICENSE in the root directory of this project.\n        -->\n\n      <div clrFocusTrap class=\"modal\" *ngIf=\"_open\">\n          <!--fixme: revisit when ngClass works with exit animation-->\n          <div [@fadeDown]=\"skipAnimation\" (@fadeDown.done)=\"fadeDone($event)\"\n               class=\"modal-dialog\"\n               [class.modal-sm]=\"size == 'sm'\"\n               [class.modal-lg]=\"size == 'lg'\"\n               [class.modal-xl]=\"size == 'xl'\"\n               role=\"dialog\" aria-hidden=\"true\">\n\n              <div class=\"modal-outer-wrapper\">\n                  <div class=\"modal-content-wrapper\">\n                      <!-- only used in wizards -->\n                      <ng-content select=\".modal-nav\"></ng-content>\n\n                      <div class=\"modal-content\">\n                          <div class=\"modal-header\">\n                              <button type=\"button\" class=\"close\" aria-label=\"Close\"\n                                      *ngIf=\"closable\" (click)=\"close()\">\n                                  <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                              </button>\n                              <ng-content select=\".modal-title\"></ng-content>\n                          </div>\n                          <ng-content select=\".modal-body\"></ng-content>\n                          <ng-content select=\".modal-footer\"></ng-content>\n                      </div>\n                  </div>\n                  <div class=\"modal-ghost-wrapper\">\n                      <div [@ghostPageOneState]=\"ghostPageState\" class=\"modal-ghost modal-ghost-1\"></div>\n                      <div [@ghostPageTwoState]=\"ghostPageState\" class=\"modal-ghost modal-ghost-2\"></div>\n                  </div>\n              </div>\n          </div>\n\n          <div [@fade] class=\"modal-backdrop\"\n               aria-hidden=\"true\"\n               (click)=\"staticBackdrop || close()\"></div>\n      </div>\n    `,\n    styles: [`\n        :host { display: none; }\n        :host.open { display: inline; }\n    `],\n    animations: [\n        trigger(\"fadeDown\",\n                [\n                    transition(\"* => false\",\n                               [style({opacity: 0, transform: \"translate(0, -25%)\"}), animate(\"0.2s ease-in-out\")]),\n                    transition(\"false => *\",\n                               [animate(\"0.2s ease-in-out\", style({opacity: 0, transform: \"translate(0, -25%)\"}))])\n                ]),\n        trigger(\"fade\",\n                [\n                    transition(\"void => *\", [style({opacity: 0}), animate(\"0.2s ease-in-out\", style({opacity: 0.85}))]),\n                    transition(\"* => void\", [animate(\"0.2s ease-in-out\", style({opacity: 0}))])\n                ]),\n        trigger(\"ghostPageOneState\",\n                [\n                    state(GHOST_PAGE_ANIMATION.STATES.NO_PAGES, style({left: \"-24px\"})),\n                    state(GHOST_PAGE_ANIMATION.STATES.ALL_PAGES, style({left: \"0\"})),\n                    state(GHOST_PAGE_ANIMATION.STATES.NEXT_TO_LAST_PAGE, style({left: \"-24px\"})),\n                    state(GHOST_PAGE_ANIMATION.STATES.LAST_PAGE, style({left: \"-24px\"})),\n                    transition(GHOST_PAGE_ANIMATION.STATES.NO_PAGES + \" => *\",\n                               animate(GHOST_PAGE_ANIMATION.TRANSITIONS.IN)),\n                    transition(GHOST_PAGE_ANIMATION.STATES.ALL_PAGES + \" => *\",\n                               animate(GHOST_PAGE_ANIMATION.TRANSITIONS.OUT)),\n                    transition(GHOST_PAGE_ANIMATION.STATES.LAST_PAGE + \" => *\",\n                               animate(GHOST_PAGE_ANIMATION.TRANSITIONS.IN)),\n                    transition(GHOST_PAGE_ANIMATION.STATES.NEXT_TO_LAST_PAGE + \" => *\",\n                               animate(GHOST_PAGE_ANIMATION.TRANSITIONS.OUT))\n                ]),\n        // TODO: USE TRANSFORM, NOT LEFT...\n        trigger(\"ghostPageTwoState\",\n                [\n                    state(GHOST_PAGE_ANIMATION.STATES.NO_PAGES, style({left: \"-24px\", top: \"24px\", bottom: \"24px\"})),\n                    state(GHOST_PAGE_ANIMATION.STATES.ALL_PAGES, style({left: \"24px\"})),\n                    state(GHOST_PAGE_ANIMATION.STATES.NEXT_TO_LAST_PAGE,\n                          style({left: \"0px\", top: \"24px\", bottom: \"24px\", background: \"#bbb\"})),\n                    state(GHOST_PAGE_ANIMATION.STATES.LAST_PAGE, style({left: \"-24px\", top: \"24px\", bottom: \"24px\"})),\n                    transition(GHOST_PAGE_ANIMATION.STATES.NO_PAGES + \" => *\",\n                               animate(GHOST_PAGE_ANIMATION.TRANSITIONS.IN)),\n                    transition(GHOST_PAGE_ANIMATION.STATES.ALL_PAGES + \" => *\",\n                               animate(GHOST_PAGE_ANIMATION.TRANSITIONS.OUT)),\n                    transition(GHOST_PAGE_ANIMATION.STATES.LAST_PAGE + \" => *\",\n                               animate(GHOST_PAGE_ANIMATION.TRANSITIONS.IN)),\n                    transition(GHOST_PAGE_ANIMATION.STATES.NEXT_TO_LAST_PAGE + \" => *\",\n                               animate(GHOST_PAGE_ANIMATION.TRANSITIONS.OUT))\n                ])\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ScrollingService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'focusTrap': [{ type: ViewChild, args: [FocusTrapDirective, ] },],\n'_open': [{ type: HostBinding, args: [\"class.open\", ] },{ type: Input, args: [\"clrModalOpen\", ] },],\n'_openChanged': [{ type: Output, args: [\"clrModalOpenChange\", ] },],\n'closable': [{ type: Input, args: [\"clrModalClosable\", ] },],\n'size': [{ type: Input, args: [\"clrModalSize\", ] },],\n'staticBackdrop': [{ type: Input, args: [\"clrModalStaticBackdrop\", ] },],\n'skipAnimation': [{ type: Input, args: [\"clrModalSkipAnimation\", ] },],\n'ghostPageState': [{ type: Input, args: [\"clrModalGhostPageState\", ] },],\n'bypassScrollService': [{ type: Input, args: [\"clrModalOverrideScrollService\", ] },],\n'stopClose': [{ type: Input, args: [\"clrModalPreventClose\", ] },],\n'altClose': [{ type: Output, args: [\"clrModalAlternateClose\", ] },],\n'close': [{ type: HostListener, args: [\"body:keyup.escape\", ] },],\n};\n}\n\nfunction Modal_tsickle_Closure_declarations() {\n/** @type {?} */\nModal.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nModal.ctorParameters;\n/** @type {?} */\nModal.propDecorators;\n/** @type {?} */\nModal.prototype.focusTrap;\n/** @type {?} */\nModal.prototype._open;\n/** @type {?} */\nModal.prototype._openChanged;\n/** @type {?} */\nModal.prototype.closable;\n/** @type {?} */\nModal.prototype.size;\n/** @type {?} */\nModal.prototype.staticBackdrop;\n/** @type {?} */\nModal.prototype.skipAnimation;\n/** @type {?} */\nModal.prototype.ghostPageState;\n/** @type {?} */\nModal.prototype.bypassScrollService;\n/** @type {?} */\nModal.prototype.stopClose;\n/** @type {?} */\nModal.prototype.altClose;\n/** @type {?} */\nModal.prototype._scrollingService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport const /** @type {?} */ GHOST_PAGE_ANIMATION = {\n    STATES: {NO_PAGES: \"inactive\", ALL_PAGES: \"ready\", NEXT_TO_LAST_PAGE: \"penultimateGhost\", LAST_PAGE: \"lastGhost\"},\n    TRANSITIONS: {IN: \"100ms ease-out\", OUT: \"100ms ease-in\"}\n};\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Inject, Injectable} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nexport class ScrollingService {\n/**\n * @param {?} _document\n */\nconstructor(\nprivate _document: any) {}\n/**\n * @return {?}\n */\nstopScrolling(): void {\n        this._document.body.classList.add(\"no-scrolling\");\n    }\n/**\n * @return {?}\n */\nresumeScrolling(): void {\n        if (this._document.body.classList.contains(\"no-scrolling\")) {\n            this._document.body.classList.remove(\"no-scrolling\");\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction ScrollingService_tsickle_Closure_declarations() {\n/** @type {?} */\nScrollingService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScrollingService.ctorParameters;\n/** @type {?} */\nScrollingService.prototype._document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FocusTrapTracker} from './focus-trap-tracker.service';\n\nimport {FOCUS_TRAP_DIRECTIVES} from './index';\nexport class ClrFocusTrapModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    providers: [FocusTrapTracker],\n    declarations: [FOCUS_TRAP_DIRECTIVES],\n    exports: [FOCUS_TRAP_DIRECTIVES]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrFocusTrapModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrFocusTrapModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrFocusTrapModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {FocusTrapDirective} from './focus-trap.directive';\n\nexport const /** @type {?} */ FOCUS_TRAP_DIRECTIVES: Type<any>[] = [FocusTrapDirective];\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {AfterViewInit, Directive, ElementRef, HostListener, Injector, OnDestroy} from '@angular/core';\nimport {FocusTrapTracker} from './focus-trap-tracker.service';\nexport class FocusTrapDirective implements AfterViewInit, OnDestroy {\nprivate _previousActiveElement: HTMLElement;\nprivate document: Document;\n/**\n * @param {?} elementRef\n * @param {?} injector\n * @param {?} focusTrapsTracker\n */\nconstructor(public elementRef: ElementRef, injector: Injector,\nprivate focusTrapsTracker: FocusTrapTracker) {\n        this.document = injector.get(DOCUMENT);\n        this.focusTrapsTracker.current = this;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonFocusIn(event: any) {\n        const /** @type {?} */ nativeElement: HTMLElement = this.elementRef.nativeElement;\n\n        if (this.focusTrapsTracker.current === this && !nativeElement.contains(event.target)) {\n            nativeElement.focus();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this._previousActiveElement = /** @type {?} */(( <HTMLElement>document.activeElement));\n        const /** @type {?} */ nativeElement: HTMLElement = this.elementRef.nativeElement;\n        nativeElement.setAttribute(\"tabindex\", \"0\");\n    }\n/**\n * @return {?}\n */\npublic setPreviousFocus(): void {\n        if (this._previousActiveElement && this._previousActiveElement.focus) {\n            this._previousActiveElement.focus();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.setPreviousFocus();\n        this.focusTrapsTracker.activatePreviousTrapper();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrFocusTrap]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Injector, },\n{type: FocusTrapTracker, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onFocusIn': [{ type: HostListener, args: [\"document:focusin\", [\"$event\"], ] },],\n};\n}\n\nfunction FocusTrapDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusTrapDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusTrapDirective.ctorParameters;\n/** @type {?} */\nFocusTrapDirective.propDecorators;\n/** @type {?} */\nFocusTrapDirective.prototype._previousActiveElement;\n/** @type {?} */\nFocusTrapDirective.prototype.document;\n/** @type {?} */\nFocusTrapDirective.prototype.elementRef;\n/** @type {?} */\nFocusTrapDirective.prototype.focusTrapsTracker;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\nimport {FocusTrapDirective} from './focus-trap.directive';\nexport class FocusTrapTracker {\nprivate _previousFocusTraps: FocusTrapDirective[] = [];\nprivate _current: FocusTrapDirective;\n/**\n * @return {?}\n */\nget current(): FocusTrapDirective {\n        return this._current;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset current(value: FocusTrapDirective) {\n        this._previousFocusTraps.push(this._current);\n        this._current = value;\n    }\n/**\n * @return {?}\n */\nactivatePreviousTrapper() {\n        this._current = this._previousFocusTraps.pop();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FocusTrapTracker_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusTrapTracker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusTrapTracker.ctorParameters;\n/** @type {?} */\nFocusTrapTracker.prototype._previousFocusTraps;\n/** @type {?} */\nFocusTrapTracker.prototype._current;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {ClrMainContainerModule} from './main-container/main-container.module';\nimport {ClrNavigationModule} from './nav/navigation.module';\nimport {ClrTabsModule} from './tabs/tabs.module';\nimport {ClrVerticalNavModule} from './vertical-nav/vertical-nav.module';\nexport class ClrLayoutModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{exports: [ClrMainContainerModule, ClrNavigationModule, ClrTabsModule, ClrVerticalNavModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrLayoutModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrLayoutModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrLayoutModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ClrIconModule} from '../../icon/icon.module';\nimport {ClrIfExpandModule} from '../../utils/expand/if-expand.module';\n\nimport {VERTICAL_NAV_DIRECTIVES} from './index';\nexport class ClrVerticalNavModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrIconModule, ClrIfExpandModule],\n    declarations: [VERTICAL_NAV_DIRECTIVES],\n    exports: [VERTICAL_NAV_DIRECTIVES, ClrIfExpandModule, ClrIconModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrVerticalNavModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrVerticalNavModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrVerticalNavModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\n\nimport {VerticalNav} from './vertical-nav';\nimport {VerticalNavGroup} from './vertical-nav-group';\nimport {VerticalNavGroupChildren} from './vertical-nav-group-children';\nimport {VerticalNavIcon} from './vertical-nav-icon.directive';\nimport {VerticalNavLink} from './vertical-nav-link';\n\nexport {VerticalNavGroup} from './vertical-nav-group';\nexport {VerticalNav} from './vertical-nav';\nexport {VerticalNavLink} from './vertical-nav-link';\nexport {VerticalNavIcon} from './vertical-nav-icon.directive';\n\nexport const /** @type {?} */ VERTICAL_NAV_DIRECTIVES: Type<any>[] =\n    [VerticalNav, VerticalNavLink, VerticalNavGroup, VerticalNavGroupChildren, VerticalNavIcon];\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, HostListener, Optional} from '@angular/core';\nimport {VerticalNavGroupService} from './providers/vertical-nav-group.service';\nexport class VerticalNavLink {\n/**\n * @param {?} _navGroupService\n */\nconstructor(\nprivate _navGroupService: VerticalNavGroupService) {}\n/**\n * @return {?}\n */\nprivate expandParentNavGroup(): void {\n        if (this._navGroupService) {\n            this._navGroupService.expand();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"[clrVerticalNavLink]\",\n    template: `\n        <ng-content select=\"[clrVerticalNavIcon]\"></ng-content>\n        <span class=\"nav-text\">\n            <ng-content></ng-content>    \n        </span>\n    `,\n    host: {\"class\": \"nav-link\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: VerticalNavGroupService, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expandParentNavGroup': [{ type: HostListener, args: [\"click\", ] },],\n};\n}\n\nfunction VerticalNavLink_tsickle_Closure_declarations() {\n/** @type {?} */\nVerticalNavLink.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVerticalNavLink.ctorParameters;\n/** @type {?} */\nVerticalNavLink.propDecorators;\n/** @type {?} */\nVerticalNavLink.prototype._navGroupService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, OnDestroy} from '@angular/core';\nimport {VerticalNavIconService} from './providers/vertical-nav-icon.service';\nexport class VerticalNavIcon implements OnDestroy {\n/**\n * @param {?} _verticalNavIconService\n */\nconstructor(private _verticalNavIconService: VerticalNavIconService) {\n        this._verticalNavIconService.registerIcon();\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._verticalNavIconService.unregisterIcon();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrVerticalNavIcon]\", host: {\"class\": \"nav-icon\"}}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: VerticalNavIconService, },\n];\n}\n\nfunction VerticalNavIcon_tsickle_Closure_declarations() {\n/** @type {?} */\nVerticalNavIcon.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVerticalNavIcon.ctorParameters;\n/** @type {?} */\nVerticalNavIcon.prototype._verticalNavIconService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Component} from '@angular/core';\nexport class VerticalNavGroupChildren {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-vertical-nav-group-children\",\n    template: `\n        <ng-content></ng-content>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VerticalNavGroupChildren_tsickle_Closure_declarations() {\n/** @type {?} */\nVerticalNavGroupChildren.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVerticalNavGroupChildren.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\nimport {AfterContentInit, Component, EventEmitter, HostBinding, Input, OnDestroy, Output} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {Expand} from '../../utils/expand/providers/expand';\n\nimport {VerticalNavGroupRegistrationService} from './providers/vertical-nav-group-registration.service';\nimport {VerticalNavGroupService} from './providers/vertical-nav-group.service';\nimport {VerticalNavService} from './providers/vertical-nav.service';\n\nconst /** @type {?} */ EXPANDED_STATE: string = \"expanded\";\nconst /** @type {?} */ COLLAPSED_STATE: string = \"collapsed\";\nexport class VerticalNavGroup implements AfterContentInit, OnDestroy {\n/**\n * @param {?} _itemExpand\n * @param {?} _navGroupRegistrationService\n * @param {?} _navGroupService\n * @param {?} _navService\n */\nconstructor(private _itemExpand: Expand,\nprivate _navGroupRegistrationService: VerticalNavGroupRegistrationService,\nprivate _navGroupService: VerticalNavGroupService,\nprivate _navService: VerticalNavService) {\n        this._navGroupRegistrationService.registerNavGroup();\n\n\n        // FIXME: This subscription handles a corner case\n        // Vertical Nav collapse requires the animation to run first and then\n        // remove the nodes from the DOM. If the user directly sets the input\n        // on the clrIfExpanded directive, we have no chance to run the animation\n        // and wait for it to complete. This subscription makes sure that the\n        // animation states are correct for that edge case.\n        this._subscriptions.push(this._itemExpand.expandChange.subscribe(value => {\n            if (value && this.expandAnimationState === COLLAPSED_STATE) {\n                if (this._navService.collapsed) {\n                    this._navService.collapsed = false;\n                }\n                this.expandAnimationState = EXPANDED_STATE;\n            } else if (!value && this.expandAnimationState === EXPANDED_STATE) {\n                this.expandAnimationState = COLLAPSED_STATE;\n            }\n        }));\n\n        // 1. If the nav is collapsing, close the open nav group + save its state\n        // 2. If the nav is expanding, expand the nav group if the previous state was expanded\n        this._subscriptions.push(this._navService.animateOnCollapsed.subscribe((goingToCollapse: boolean) => {\n            if (goingToCollapse && this.expanded) {\n                this.wasExpanded = true;\n                this.expandAnimationState = COLLAPSED_STATE;\n            } else if (!goingToCollapse && this.wasExpanded) {\n                this.expandGroup();\n                this.wasExpanded = false;\n            }\n        }));\n\n        // If a link is clicked, expand the nav group\n        this._subscriptions.push(this._navGroupService.expandChange.subscribe((expand: boolean) => {\n            if (expand && !this.expanded) {\n                this.expandGroup();\n            }\n        }));\n    }\nprivate wasExpanded: boolean = false;\n/**\n * @return {?}\n */\nget expanded(): boolean {\n        return this._itemExpand.expanded;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset expanded(value: boolean) {\n        if (this._itemExpand.expanded !== value) {\n            this._itemExpand.expanded = value;\n            this.expandedChange.emit(value);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset userExpandedInput(value: boolean) {\n        value = !!value;\n        if (this.expanded !== value) {\n            // We have to call toggleExpand because some cases require animations to occur first\n            // Directly setting the Expand service value skips the animation and can result in\n            // nodes in the DOM but the nav group still being collapsed\n            this.toggleExpand();\n        }\n    }\n\n    \n    expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\nprivate _subscriptions: Subscription[] = [];\nprivate _expandAnimationState: string = COLLAPSED_STATE;\n/**\n * @return {?}\n */\nexpandGroup(): void {\n        this.expanded = true;\n        // Expanded animation occurs after Expand.expand is set to true\n        this.expandAnimationState = EXPANDED_STATE;\n    }\n/**\n * @return {?}\n */\ncollapseGroup(): void {\n        // If a Vertical Nav Group toggle button is clicked while the Vertical Nav is in Collapsed state,\n        // the Vertical Nav should be expanded first.\n        this.expandAnimationState = COLLAPSED_STATE;\n    }\n/**\n * @param {?} $event\n * @return {?}\n */\nexpandAnimationDone($event: AnimationEvent) {\n        if ($event.toState === COLLAPSED_STATE) {\n            this.expanded = false;\n        }\n    }\n/**\n * @return {?}\n */\nget expandAnimationState(): string {\n        return this._expandAnimationState;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset expandAnimationState(value: string) {\n        if (value !== this._expandAnimationState) {\n            this._expandAnimationState = value;\n        }\n    }\n/**\n * @return {?}\n */\ntoggleExpand(): void {\n        if (this.expanded) {\n            this.collapseGroup();\n        } else {\n            // If nav is collasped, first open the nav\n            if (this._navService.collapsed) {\n                this._navService.collapsed = false;\n            }\n            // then expand the nav group\n            this.expandGroup();\n        }\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // This makes sure that if someone marks a nav group expanded in a collapsed nav\n        // the expanded property is switched back to collapsed state.\n        if (this._navService.collapsed && this.expanded) {\n            this.wasExpanded = true;\n            this.expandAnimationState = COLLAPSED_STATE;\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n        this._navGroupRegistrationService.unregisterNavGroup();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-vertical-nav-group\",\n    template: `\n      <div class=\"nav-group-content\">\n          <ng-content select=\"[clrVerticalNavLink]\"></ng-content>\n          <button\n              class=\"nav-group-trigger\"\n              type=\"button\"\n              (click)=\"toggleExpand()\">\n              <ng-content select=\"[clrVerticalNavIcon]\"></ng-content>\n              <div class=\"nav-group-text\">\n                  <ng-content></ng-content>\n              </div>\n              <clr-icon shape=\"caret\"\n                        class=\"nav-group-trigger-icon\"\n                        [attr.dir]=\"(this.expanded) ? 'down' : 'right'\">\n              </clr-icon>\n          </button>\n      </div>\n      <!--TODO: This animation needs to be added to the clr-vertical-nav-group-children component-->\n      <div class=\"nav-group-children\"\n           [@clrExpand]=\"expandAnimationState\"\n           (@clrExpand.done)=\"expandAnimationDone($event)\">\n          <ng-content select=\"[clrIfExpanded], clr-vertical-nav-group-children\"></ng-content>\n      </div>\n    `,\n    providers: [Expand, VerticalNavGroupService],\n    animations:\n        [trigger(\"clrExpand\",\n                 [\n                     state(EXPANDED_STATE, style({\"height\": \"*\"})),\n                     state(COLLAPSED_STATE, style({\"height\": 0, \"overflow-y\": \"hidden\", \"visibility\": \"hidden\"})),\n                     transition(`${EXPANDED_STATE} <=> ${COLLAPSED_STATE}`, animate(\"0.2s ease-in-out\"))\n                 ])],\n    host: {\"class\": \"nav-group\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Expand, },\n{type: VerticalNavGroupRegistrationService, },\n{type: VerticalNavGroupService, },\n{type: VerticalNavService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expanded': [{ type: HostBinding, args: [\"class.is-expanded\", ] },],\n'userExpandedInput': [{ type: Input, args: [\"clrVerticalNavGroupExpanded\", ] },],\n'expandedChange': [{ type: Output, args: [\"clrVerticalNavGroupExpandedChange\", ] },],\n};\n}\n\nfunction VerticalNavGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nVerticalNavGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVerticalNavGroup.ctorParameters;\n/** @type {?} */\nVerticalNavGroup.propDecorators;\n/** @type {?} */\nVerticalNavGroup.prototype.wasExpanded;\n/** @type {?} */\nVerticalNavGroup.prototype.expandedChange;\n/** @type {?} */\nVerticalNavGroup.prototype._subscriptions;\n/** @type {?} */\nVerticalNavGroup.prototype._expandAnimationState;\n/** @type {?} */\nVerticalNavGroup.prototype._itemExpand;\n/** @type {?} */\nVerticalNavGroup.prototype._navGroupRegistrationService;\n/** @type {?} */\nVerticalNavGroup.prototype._navGroupService;\n/** @type {?} */\nVerticalNavGroup.prototype._navService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nexport class VerticalNavGroupService {\nprivate _expandChange: Subject<boolean> = new Subject<boolean>();\n/**\n * @return {?}\n */\nget expandChange(): Observable<boolean> {\n        return this._expandChange.asObservable();\n    }\n/**\n * @return {?}\n */\nexpand(): void {\n        this._expandChange.next(true);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VerticalNavGroupService_tsickle_Closure_declarations() {\n/** @type {?} */\nVerticalNavGroupService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVerticalNavGroupService.ctorParameters;\n/** @type {?} */\nVerticalNavGroupService.prototype._expandChange;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Component, EventEmitter, Input, OnDestroy, Output} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {VerticalNavGroupRegistrationService} from './providers/vertical-nav-group-registration.service';\nimport {VerticalNavIconService} from './providers/vertical-nav-icon.service';\nimport {VerticalNavService} from './providers/vertical-nav.service';\nexport class VerticalNav implements OnDestroy {\n/**\n * @return {?}\n */\nget collapsible(): boolean {\n        return this._navService.collapsible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collapsible(value: boolean) {\n        this._navService.collapsible = value;\n    }\n/**\n * @return {?}\n */\nget collapsed(): boolean {\n        return this._navService.collapsed;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collapsed(value: boolean) {\n        this._navService.collapsed = value;\n    }\nprivate _collapsedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n/**\n * @return {?}\n */\nget hasNavGroups(): boolean {\n        return this._navGroupRegistrationService.navGroupCount > 0;\n    }\n/**\n * @return {?}\n */\nget hasIcons(): boolean {\n        return this._navIconService.hasIcons;\n    }\nprivate _sub: Subscription;\n/**\n * @param {?} _navService\n * @param {?} _navIconService\n * @param {?} _navGroupRegistrationService\n */\nconstructor(private _navService: VerticalNavService,\nprivate _navIconService: VerticalNavIconService,\nprivate _navGroupRegistrationService: VerticalNavGroupRegistrationService) {\n        this._sub = this._navService.collapsedChanged.subscribe(value => {\n            this._collapsedChanged.emit(value);\n        });\n    }\n/**\n * @return {?}\n */\ntoggleByButton() {\n        this.collapsed = !this.collapsed;\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._sub.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-vertical-nav\",\n    template: `\n      <button type=\"button\" class=\"nav-trigger\"\n              [class.on-collapse]=\"collapsed\"\n              (click)=\"toggleByButton()\"\n              *ngIf=\"collapsible\">\n          <clr-icon shape=\"angle-double\" class=\"nav-trigger-icon\" [attr.dir]=\"(this.collapsed) ? 'right' : 'left'\"></clr-icon>\n      </button>\n      <!-- Click handler on .nav-content is bad but required :-( -->\n      <div class=\"nav-content\">\n          <ng-content></ng-content>\n          <button (click)=\"collapsed = false\" class=\"nav-btn\" *ngIf=\"collapsible && collapsed\"></button>\n      </div>\n    `,\n    providers: [VerticalNavService, VerticalNavIconService, VerticalNavGroupRegistrationService],\n    host: {\n        \"class\": \"clr-vertical-nav\",\n        \"[class.is-collapsed]\": \"collapsed\",\n        \"[class.has-nav-groups]\": \"hasNavGroups\",\n        \"[class.has-icons]\": \"hasIcons\"\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: VerticalNavService, },\n{type: VerticalNavIconService, },\n{type: VerticalNavGroupRegistrationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'collapsible': [{ type: Input, args: [\"clrVerticalNavCollapsible\", ] },],\n'collapsed': [{ type: Input, args: [\"clrVerticalNavCollapsed\", ] },],\n'_collapsedChanged': [{ type: Output, args: [\"clrVerticalNavCollapsedChange\", ] },],\n};\n}\n\nfunction VerticalNav_tsickle_Closure_declarations() {\n/** @type {?} */\nVerticalNav.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVerticalNav.ctorParameters;\n/** @type {?} */\nVerticalNav.propDecorators;\n/** @type {?} */\nVerticalNav.prototype._collapsedChanged;\n/** @type {?} */\nVerticalNav.prototype._sub;\n/** @type {?} */\nVerticalNav.prototype._navService;\n/** @type {?} */\nVerticalNav.prototype._navIconService;\n/** @type {?} */\nVerticalNav.prototype._navGroupRegistrationService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nexport class VerticalNavService {\nprivate _animateOnCollapsed: Subject<boolean> = new Subject<boolean>();\n/**\n * @return {?}\n */\nget animateOnCollapsed(): Observable<boolean> {\n        return this._animateOnCollapsed.asObservable();\n    }\nprivate _collapsedChanged: Subject<boolean> = new Subject<boolean>();\n/**\n * @return {?}\n */\nget collapsedChanged(): Observable<boolean> {\n        return this._collapsedChanged.asObservable();\n    }\nprivate _collapsed: boolean = false;\n/**\n * @return {?}\n */\nget collapsed(): boolean {\n        return this._collapsed;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collapsed(value: boolean) {\n        value = !!value;\n        if (this.collapsible && (this._collapsed !== value)) {\n            this.updateCollapseBehavior(value);\n        }\n    }\nprivate _collapsible: boolean = false;\n/**\n * @return {?}\n */\nget collapsible(): boolean {\n        return this._collapsible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset collapsible(value: boolean) {\n        value = !!value;\n        if (this._collapsible !== value) {\n            if (!value && this.collapsed) {\n                this.updateCollapseBehavior(false);\n            }\n            this._collapsible = value;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate updateCollapseBehavior(value: boolean): void {\n        this._animateOnCollapsed.next(value);\n        this._collapsed = value;\n        this._collapsedChanged.next(value);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VerticalNavService_tsickle_Closure_declarations() {\n/** @type {?} */\nVerticalNavService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVerticalNavService.ctorParameters;\n/** @type {?} */\nVerticalNavService.prototype._animateOnCollapsed;\n/** @type {?} */\nVerticalNavService.prototype._collapsedChanged;\n/** @type {?} */\nVerticalNavService.prototype._collapsed;\n/** @type {?} */\nVerticalNavService.prototype._collapsible;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable} from '@angular/core';\nexport class VerticalNavIconService {\nprivate _icons: number = 0;\n/**\n * @return {?}\n */\nget hasIcons(): boolean {\n        return this._icons > 0;\n    }\n/**\n * @return {?}\n */\nregisterIcon(): void {\n        this._icons++;\n    }\n/**\n * @return {?}\n */\nunregisterIcon(): void {\n        this._icons--;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VerticalNavIconService_tsickle_Closure_declarations() {\n/** @type {?} */\nVerticalNavIconService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVerticalNavIconService.ctorParameters;\n/** @type {?} */\nVerticalNavIconService.prototype._icons;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {VerticalNavGroup} from '../vertical-nav-group';\nexport class VerticalNavGroupRegistrationService {\npublic navGroupCount: number = 0;\n/**\n * @return {?}\n */\nregisterNavGroup() {\n        this.navGroupCount++;\n    }\n/**\n * @return {?}\n */\nunregisterNavGroup(): void {\n        this.navGroupCount--;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction VerticalNavGroupRegistrationService_tsickle_Closure_declarations() {\n/** @type {?} */\nVerticalNavGroupRegistrationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nVerticalNavGroupRegistrationService.ctorParameters;\n/** @type {?} */\nVerticalNavGroupRegistrationService.prototype.navGroupCount;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ClrIconModule} from '../../icon/icon.module';\nimport {ClrCommonPopoverModule} from '../../popover/common/popover.module';\nimport {ClrConditionalModule} from '../../utils/conditional/conditional.module';\nimport {ClrTemplateRefModule} from '../../utils/template-ref/template-ref.module';\n\nimport {TABS_DIRECTIVES} from './index';\nexport class ClrTabsModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrCommonPopoverModule, ClrConditionalModule, ClrIconModule, ClrTemplateRefModule],\n    declarations: [TABS_DIRECTIVES],\n    exports: [TABS_DIRECTIVES, ClrConditionalModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrTabsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrTabsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrTabsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\n\nimport {ActiveOompaLoompa} from './chocolate/active-oompa-loompa';\nimport {TabsWillyWonka} from './chocolate/tabs-willy-wonka';\nimport {Tab} from './tab';\nimport {TabContent} from './tab-content';\nimport {TabLinkDirective} from './tab-link.directive';\nimport {TabOverflowContent} from './tab-overflow-content';\nimport {Tabs} from './tabs';\n\nexport {Tabs} from './tabs';\nexport {Tab} from './tab';\nexport {TabContent} from './tab-content';\nexport {TabOverflowContent} from './tab-overflow-content';\nexport {TabLinkDirective} from './tab-link.directive';\n\nexport const /** @type {?} */ TABS_DIRECTIVES: Type<any>[] =\n    [TabContent, Tab, Tabs, TabOverflowContent, TabLinkDirective, TabsWillyWonka, ActiveOompaLoompa];\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {AfterContentInit, Component, ContentChildren, Inject, QueryList} from '@angular/core';\n\nimport {IfActiveService} from '../../utils/conditional/if-active.service';\nimport {IfOpenService} from '../../utils/conditional/if-open.service';\n\nimport {TabLinkDirective} from './tab-link.directive';\nimport {TABS_ID, TABS_ID_PROVIDER} from './tabs-id.provider';\nimport {TabsService} from './tabs-service';\nexport class Tabs implements AfterContentInit {\n    \n    tabLinkDirectives: QueryList<TabLinkDirective>;\n/**\n * @param {?} ifActiveService\n * @param {?} ifOpenService\n * @param {?} tabsService\n * @param {?} tabsId\n */\nconstructor(public ifActiveService: IfActiveService,\npublic ifOpenService: IfOpenService,\npublic tabsService: TabsService,\npublic tabsId: number) {}\n/**\n * @return {?}\n */\nget activeTabInOverflow() {\n        return this.tabsService.overflowTabs.indexOf(this.tabsService.activeTab) > -1;\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        if (typeof this.ifActiveService.current === \"undefined\") {\n            this.tabLinkDirectives.first.activate();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\ntoggleOverflow(event: any) {\n        this.ifOpenService.toggleWithEvent(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-tabs\",\n    template: `\n        <ul class=\"nav\" role=\"tablist\">\n            <!--tab links-->\n            <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                <ng-container *ngIf=\"link.tabsId === tabsId && !link.inOverflow\"\n                              [ngTemplateOutlet]=\"link.templateRefContainer.template\">\n                </ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"tabsService.overflowTabs.length > 0\">\n                <div class=\"tabs-overflow bottom-right\" [class.open]=\"ifOpenService.open\"\n                     (click)=\"toggleOverflow($event)\">\n                    <li role=\"presentation\" class=\"nav-item\">\n                        <button class=\"btn btn-link nav-link dropdown-toggle\" [class.active]=\"activeTabInOverflow\">\n                            <clr-icon shape=\"ellipsis-horizontal\" [class.is-info]=\"ifOpenService.open\"></clr-icon>\n                        </button>\n                    </li>\n                    <!--tab links in overflow menu-->\n                    <clr-tab-overflow-content>\n                        <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                            <ng-container *ngIf=\"link.tabsId === tabsId && link.inOverflow\"\n                                          [ngTemplateOutlet]=\"link.templateRefContainer.template\">\n                            </ng-container>\n                        </ng-container>\n                    </clr-tab-overflow-content>\n                </div>\n            </ng-container>\n        </ul>\n        <!--tab content-->\n        <ng-content></ng-content>\n    `,\n    providers: [IfActiveService, IfOpenService, TabsService, TABS_ID_PROVIDER]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IfActiveService, },\n{type: IfOpenService, },\n{type: TabsService, },\n{type: undefined, decorators: [{ type: Inject, args: [TABS_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabLinkDirectives': [{ type: ContentChildren, args: [TabLinkDirective, {descendants: true}, ] },],\n};\n}\n\nfunction Tabs_tsickle_Closure_declarations() {\n/** @type {?} */\nTabs.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabs.ctorParameters;\n/** @type {?} */\nTabs.propDecorators;\n/** @type {?} */\nTabs.prototype.tabLinkDirectives;\n/** @type {?} */\nTabs.prototype.ifActiveService;\n/** @type {?} */\nTabs.prototype.ifOpenService;\n/** @type {?} */\nTabs.prototype.tabsService;\n/** @type {?} */\nTabs.prototype.tabsId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, ElementRef, Injector, SkipSelf} from '@angular/core';\n\nimport {AbstractPopover} from '../../popover/common/abstract-popover';\nimport {Point} from '../../popover/common/popover';\nexport class TabOverflowContent extends AbstractPopover {\n/**\n * @param {?} injector\n * @param {?} parentHost\n */\nconstructor(injector: Injector,  parentHost: ElementRef) {\n        super(injector, parentHost);\n        this.anchorPoint = Point.BOTTOM_RIGHT;\n        this.popoverPoint = Point.RIGHT_TOP;\n        this.closeOnOutsideClick = true;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-tab-overflow-content\",\n    template: `\n        <ng-content></ng-content>\n    `,\n    host: {\n        \"[class.dropdown-menu]\": \"true\",\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n{type: ElementRef, decorators: [{ type: SkipSelf }, ]},\n];\n}\n\nfunction TabOverflowContent_tsickle_Closure_declarations() {\n/** @type {?} */\nTabOverflowContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabOverflowContent.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, ContentChild, Inject} from '@angular/core';\n\nimport {IF_ACTIVE_ID, IF_ACTIVE_ID_PROVIDER, IfActiveService} from '../../utils/conditional/if-active.service';\n\nimport {AriaService} from './aria-service';\nimport {TabContent} from './tab-content';\nimport {TabLinkDirective} from './tab-link.directive';\nimport {TabsService} from './tabs-service';\nexport class Tab {\n     tabLink: TabLinkDirective;\n     tabContent: TabContent;\n/**\n * @param {?} ifActiveService\n * @param {?} id\n * @param {?} tabsService\n */\nconstructor(public ifActiveService: IfActiveService,\npublic id: number,\nprivate tabsService: TabsService) {\n        tabsService.register(this);\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.tabsService.unregister(this);\n    }\n/**\n * @return {?}\n */\nget active() {\n        return this.ifActiveService.current === this.id;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-tab\",\n    template: `\n        <ng-content></ng-content>\n    `,\n    providers: [IF_ACTIVE_ID_PROVIDER, AriaService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IfActiveService, },\n{type: undefined, decorators: [{ type: Inject, args: [IF_ACTIVE_ID, ] }, ]},\n{type: TabsService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tabLink': [{ type: ContentChild, args: [TabLinkDirective, ] },],\n'tabContent': [{ type: ContentChild, args: [TabContent, ] },],\n};\n}\n\nfunction Tab_tsickle_Closure_declarations() {\n/** @type {?} */\nTab.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTab.ctorParameters;\n/** @type {?} */\nTab.propDecorators;\n/** @type {?} */\nTab.prototype.tabLink;\n/** @type {?} */\nTab.prototype.tabContent;\n/** @type {?} */\nTab.prototype.ifActiveService;\n/** @type {?} */\nTab.prototype.id;\n/** @type {?} */\nTab.prototype.tabsService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\nimport {Tab} from './tab';\nexport class TabsService {\nprivate _children: Tab[] = [];\n/**\n * @param {?} tab\n * @return {?}\n */\nregister(tab: Tab) {\n        this._children.push(tab);\n    }\n/**\n * @return {?}\n */\nget children() {\n        return this._children;\n    }\n/**\n * @return {?}\n */\nget activeTab() {\n        return this.children.find((tab: Tab) => {\n            return tab.active;\n        });\n    }\n/**\n * @return {?}\n */\nget overflowTabs() {\n        return this.children.filter((tab: Tab) => {\n            return tab.tabLink.inOverflow === true;\n        });\n    }\n/**\n * @param {?} tab\n * @return {?}\n */\nunregister(tab: Tab) {\n        const /** @type {?} */ index = this.children.indexOf(tab);\n        if (index > -1) {\n            this.children.splice(index, 1);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TabsService_tsickle_Closure_declarations() {\n/** @type {?} */\nTabsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabsService.ctorParameters;\n/** @type {?} */\nTabsService.prototype._children;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n    ComponentFactoryResolver,\n    Directive,\n    ElementRef,\n    HostListener,\n    Inject,\n    Input,\n    ViewContainerRef\n} from '@angular/core';\nimport {IF_ACTIVE_ID, IfActiveService} from '../../utils/conditional/if-active.service';\nimport {TemplateRefContainer} from '../../utils/template-ref/template-ref-container';\nimport {AriaService} from './aria-service';\nimport {TABS_ID} from './tabs-id.provider';\n\nlet /** @type {?} */ nbTabLinkComponents: number = 0;\nexport class TabLinkDirective {\n     inOverflow: boolean;\n    templateRefContainer: TemplateRefContainer;\n/**\n * @param {?} ifActiveService\n * @param {?} id\n * @param {?} ariaService\n * @param {?} el\n * @param {?} cfr\n * @param {?} viewContainerRef\n * @param {?} tabsId\n */\nconstructor(public ifActiveService: IfActiveService,\nprivate id: number,\nprivate ariaService: AriaService,\nprivate el: ElementRef,\nprivate cfr: ComponentFactoryResolver,\nprivate viewContainerRef: ViewContainerRef,\npublic tabsId: number) {\n        if (!this.tabLinkId) {\n            this.tabLinkId = \"clr-tab-link-\" + (nbTabLinkComponents++);\n        }\n\n        // Tab links can be rendered in one of two places: in the main area or inside the overflow dropdown menu.\n        // Here, we create a container so that its template can be used to create embeddedView on the fly.\n        // See TabsService's renderView() method and how it's used in Tabs class for an example.\n        const factory = this.cfr.resolveComponentFactory(TemplateRefContainer);\n        this.templateRefContainer =\n            this.viewContainerRef.createComponent(factory, 1, undefined, [[this.el.nativeElement]]).instance;\n    }\n/**\n * @return {?}\n */\nget ariaControls(): string {\n        return this.ariaService.ariaControls;\n    }\n/**\n * @return {?}\n */\nget tabLinkId(): string {\n        return this.ariaService.ariaLabelledBy;\n    }\n/**\n * @param {?} id\n * @return {?}\n */\nset tabLinkId(id: string) {\n        this.ariaService.ariaLabelledBy = id;\n    }\n/**\n * @return {?}\n */\nactivate() {\n        this.ifActiveService.current = this.id;\n    }\n/**\n * @return {?}\n */\nget active() {\n        return this.ifActiveService.current === this.id;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: \"[clrTabLink]\",\n    host: {\n        \"[id]\": \"tabLinkId\",\n        \"[attr.aria-selected]\": \"active\",\n        \"[attr.aria-controls]\": \"ariaControls\",\n        \"role\": \"presentation\",\n        \"[class.btn]\": \"true\",\n        \"[class.btn-link]\": \"!inOverflow\",\n        \"[class.nav-link]\": \"!inOverflow\",\n        \"[class.nav-item]\": \"!inOverflow\",\n        \"[class.active]\": \"active\"\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IfActiveService, },\n{type: undefined, decorators: [{ type: Inject, args: [IF_ACTIVE_ID, ] }, ]},\n{type: AriaService, },\n{type: ElementRef, },\n{type: ComponentFactoryResolver, },\n{type: ViewContainerRef, },\n{type: undefined, decorators: [{ type: Inject, args: [TABS_ID, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'inOverflow': [{ type: Input, args: [\"clrTabLinkInOverflow\", ] },],\n'tabLinkId': [{ type: Input, args: [\"id\", ] },],\n'activate': [{ type: HostListener, args: [\"click\", ] },],\n};\n}\n\nfunction TabLinkDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTabLinkDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabLinkDirective.ctorParameters;\n/** @type {?} */\nTabLinkDirective.propDecorators;\n/** @type {?} */\nTabLinkDirective.prototype.inOverflow;\n/** @type {?} */\nTabLinkDirective.prototype.templateRefContainer;\n/** @type {?} */\nTabLinkDirective.prototype.ifActiveService;\n/** @type {?} */\nTabLinkDirective.prototype.id;\n/** @type {?} */\nTabLinkDirective.prototype.ariaService;\n/** @type {?} */\nTabLinkDirective.prototype.el;\n/** @type {?} */\nTabLinkDirective.prototype.cfr;\n/** @type {?} */\nTabLinkDirective.prototype.viewContainerRef;\n/** @type {?} */\nTabLinkDirective.prototype.tabsId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {InjectionToken} from '@angular/core';\n\nlet /** @type {?} */ nbTabsComponent = 0;\n\nexport const /** @type {?} */ TABS_ID = new InjectionToken<number>(\"TABS_ID\");\n/**\n * @return {?}\n */\nexport function tokenFactory() {\n    return \"clr-tabs-\" + (nbTabsComponent++);\n}\n\nexport const /** @type {?} */ TABS_ID_PROVIDER = {\n    provide: TABS_ID,\n    useFactory: tokenFactory\n};\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, Inject, Input, TemplateRef, ViewChild} from '@angular/core';\nimport {IF_ACTIVE_ID, IfActiveService} from '../../utils/conditional/if-active.service';\nimport {AriaService} from './aria-service';\n\nlet /** @type {?} */ nbTabContentComponents: number = 0;\nexport class TabContent {\n     templateRef: TemplateRef<TabContent>;\n/**\n * @param {?} ifActiveService\n * @param {?} id\n * @param {?} ariaService\n */\nconstructor(public ifActiveService: IfActiveService,\npublic id: number,\nprivate ariaService: AriaService) {\n        if (!this.tabContentId) {\n            this.tabContentId = \"clr-tab-content-\" + (nbTabContentComponents++);\n        }\n    }\n/**\n * @return {?}\n */\nget ariaLabelledBy(): string {\n        return this.ariaService.ariaLabelledBy;\n    }\n/**\n * @return {?}\n */\nget tabContentId(): string {\n        return this.ariaService.ariaControls;\n    }\n/**\n * @param {?} id\n * @return {?}\n */\nset tabContentId(id: string) {\n        this.ariaService.ariaControls = id;\n    }\n/**\n * @return {?}\n */\nget active() {\n        return this.ifActiveService.current === this.id;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-tab-content\",\n    template: `\n        <ng-content></ng-content>\n    `,\n    host: {\n        \"[id]\": \"tabContentId\",\n        \"[attr.aria-labelledby]\": \"ariaLabelledBy\",\n        \"[attr.aria-hidden]\": \"!active\",\n        \"[attr.data-hidden]\": \"!active\",\n        \"role\": \"tabpanel\"\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IfActiveService, },\n{type: undefined, decorators: [{ type: Inject, args: [IF_ACTIVE_ID, ] }, ]},\n{type: AriaService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'templateRef': [{ type: ViewChild, args: [\"tabContentProjectedRef\", ] },],\n'tabContentId': [{ type: Input, args: [\"id\", ] },],\n};\n}\n\nfunction TabContent_tsickle_Closure_declarations() {\n/** @type {?} */\nTabContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabContent.ctorParameters;\n/** @type {?} */\nTabContent.propDecorators;\n/** @type {?} */\nTabContent.prototype.templateRef;\n/** @type {?} */\nTabContent.prototype.ifActiveService;\n/** @type {?} */\nTabContent.prototype.id;\n/** @type {?} */\nTabContent.prototype.ariaService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\nexport class AriaService {\npublic ariaLabelledBy: string;\npublic ariaControls: string;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AriaService_tsickle_Closure_declarations() {\n/** @type {?} */\nAriaService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAriaService.ctorParameters;\n/** @type {?} */\nAriaService.prototype.ariaLabelledBy;\n/** @type {?} */\nAriaService.prototype.ariaControls;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {ChangeDetectorRef, Directive, Inject, Optional} from '@angular/core';\n\nimport {OompaLoompa} from '../../../utils/chocolate/oompa-loompa';\nimport {IF_ACTIVE_ID, IfActiveService} from '../../../utils/conditional/if-active.service';\n\nimport {TabsWillyWonka} from './tabs-willy-wonka';\nexport class ActiveOompaLoompa extends OompaLoompa {\nprivate ifActive: IfActiveService;\nprivate id: number;\n/**\n * @param {?} cdr\n * @param {?} willyWonka\n * @param {?} id\n * @param {?} ifActive\n */\nconstructor(cdr: ChangeDetectorRef,  willyWonka: TabsWillyWonka,  id: number,\n                ifActive: IfActiveService) {\n        if (!willyWonka) {\n            throw new Error(\"clrTabLink and clr-tab-content should only be used inside of a clr-tabs\");\n        }\n        super(cdr, willyWonka);\n        this.ifActive = ifActive;\n        this.id = id;\n    }\n/**\n * @return {?}\n */\nget flavor() {\n        return this.ifActive.current === this.id;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrTabLink], clr-tab-content\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: TabsWillyWonka, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [IF_ACTIVE_ID, ] }, ]},\n{type: IfActiveService, },\n];\n}\n\nfunction ActiveOompaLoompa_tsickle_Closure_declarations() {\n/** @type {?} */\nActiveOompaLoompa.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nActiveOompaLoompa.ctorParameters;\n/** @type {?} */\nActiveOompaLoompa.prototype.ifActive;\n/** @type {?} */\nActiveOompaLoompa.prototype.id;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive} from '@angular/core';\nimport {WillyWonka} from '../../../utils/chocolate/willy-wonka';\nexport class TabsWillyWonka extends WillyWonka {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-tabs\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TabsWillyWonka_tsickle_Closure_declarations() {\n/** @type {?} */\nTabsWillyWonka.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTabsWillyWonka.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {TEMPLATE_REF_DIRECTIVES} from './index';\nexport class ClrTemplateRefModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule],\n    declarations: [TEMPLATE_REF_DIRECTIVES],\n    entryComponents: [TEMPLATE_REF_DIRECTIVES],\n    exports: [TEMPLATE_REF_DIRECTIVES]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrTemplateRefModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrTemplateRefModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrTemplateRefModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {TemplateRefContainer} from './template-ref-container';\n\nexport {TemplateRefContainer} from './template-ref-container';\n\nexport const /** @type {?} */ TEMPLATE_REF_DIRECTIVES: Type<any>[] = [TemplateRefContainer];\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, TemplateRef, ViewChild} from '@angular/core';\nexport class TemplateRefContainer {  template: TemplateRef<any>; static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    template: `\n      <ng-template>\n        <ng-content></ng-content>\n      </ng-template>\n    `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ViewChild, args: [TemplateRef, ] },],\n};\n}\n\nfunction TemplateRefContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplateRefContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTemplateRefContainer.ctorParameters;\n/** @type {?} */\nTemplateRefContainer.propDecorators;\n/** @type {?} */\nTemplateRefContainer.prototype.template;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule, Optional, SkipSelf} from '@angular/core';\n\nimport {ClrIconModule} from '../../icon/icon.module';\nimport {ClrDropdownModule} from '../../popover/dropdown/dropdown.module';\n\nimport {clrResponsiveNavigationProvider} from './clrResponsiveNavigationProvider';\nimport {ClrResponsiveNavigationService} from './clrResponsiveNavigationService';\nimport {NAVIGATION_DIRECTIVES} from './index';\nexport class ClrNavigationModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n    declarations: [NAVIGATION_DIRECTIVES],\n    providers: [{\n        provide: ClrResponsiveNavigationService,\n        useFactory: clrResponsiveNavigationProvider,\n        deps: [[new Optional(), new SkipSelf(), ClrResponsiveNavigationService]]\n    }],\n    exports: [NAVIGATION_DIRECTIVES]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrNavigationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrNavigationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrNavigationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\n\nimport {MainContainerWillyWonka} from '../chocolate/main-container-willy-wonka';\nimport {NavDetectionOompaLoompa} from '../chocolate/nav-detection-oompa-loompa';\n\nimport {Header} from './header';\nimport {NavLevelDirective} from './navLevelDirective';\n\nexport {Header} from './header';\nexport {NavLevelDirective} from './navLevelDirective';\n\nexport const /** @type {?} */ NAVIGATION_DIRECTIVES: Type<any>[] =\n    [Header, NavLevelDirective, NavDetectionOompaLoompa, MainContainerWillyWonka];\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, ElementRef, HostListener, Input, OnInit} from '@angular/core';\n\nimport {ClrResponsiveNavCodes} from './clrResponsiveNavCodes';\nimport {ClrResponsiveNavigationService} from './clrResponsiveNavigationService';\nexport class NavLevelDirective implements OnInit {\n     _level: number;\n/**\n * @param {?} responsiveNavService\n * @param {?} elementRef\n */\nconstructor(private responsiveNavService: ClrResponsiveNavigationService,\nprivate elementRef: ElementRef) {}\n/**\n * @return {?}\n */\nngOnInit() {\n        if (this.level !== ClrResponsiveNavCodes.NAV_LEVEL_1 && this.level !== ClrResponsiveNavCodes.NAV_LEVEL_2) {\n            console.error(\"Nav Level can only be 1 or 2\");\n            return;\n        }\n        this.responsiveNavService.registerNav(this.level);\n        this.addNavClass(this.level);\n    }\n/**\n * @param {?} level\n * @return {?}\n */\naddNavClass(level: number) {\n        const /** @type {?} */ navHostClassList = this.elementRef.nativeElement.classList;\n        if (level === ClrResponsiveNavCodes.NAV_LEVEL_1) {\n            navHostClassList.add(ClrResponsiveNavCodes.NAV_CLASS_LEVEL_1);\n        } else if (level === ClrResponsiveNavCodes.NAV_LEVEL_2) {\n            navHostClassList.add(ClrResponsiveNavCodes.NAV_CLASS_LEVEL_2);\n        }\n    }\n/**\n * @return {?}\n */\nget level(): number {\n        return this._level;\n    }\n/**\n * @return {?}\n */\nget responsiveNavCodes(): ClrResponsiveNavCodes {\n        return ClrResponsiveNavCodes;\n    }\n/**\n * @return {?}\n */\nopen(): void {\n        this.responsiveNavService.sendControlMessage(ClrResponsiveNavCodes.NAV_OPEN, this.level);\n    }\n/**\n * @return {?}\n */\nclose(): void {\n        this.responsiveNavService.sendControlMessage(ClrResponsiveNavCodes.NAV_CLOSE, this.level);\n    }\n/**\n * @param {?} target\n * @return {?}\n */\nonMouseClick(target: any) {\n        let /** @type {?} */ current: any = target;  // Get the element in the DOM on which the mouse was clicked\n        const /** @type {?} */ navHost: any = this.elementRef.nativeElement;  // Get the current nav native HTML element\n\n        // Start checking if current and navHost are equal.\n        // If not traverse to the parentNode and check again.\n        while (current) {\n            if (current === navHost) {\n                return;\n            } else if (current.classList.contains(\"nav-link\")) {\n                this.close();\n                return;\n            }\n            current = current.parentNode;\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.responsiveNavService.unregisterNav(this.level);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clr-nav-level]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ClrResponsiveNavigationService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_level': [{ type: Input, args: [\"clr-nav-level\", ] },],\n'onMouseClick': [{ type: HostListener, args: [\"click\", [\"$event.target\"], ] },],\n};\n}\n\nfunction NavLevelDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNavLevelDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavLevelDirective.ctorParameters;\n/** @type {?} */\nNavLevelDirective.propDecorators;\n/** @type {?} */\nNavLevelDirective.prototype._level;\n/** @type {?} */\nNavLevelDirective.prototype.responsiveNavService;\n/** @type {?} */\nNavLevelDirective.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {ClrResponsiveNavCodes} from './clrResponsiveNavCodes';\nimport {ClrResponsiveNavigationService} from './clrResponsiveNavigationService';\nexport class Header implements OnDestroy {\nprivate _subscription: Subscription;\npublic isNavLevel1OnPage: boolean = false;\npublic isNavLevel2OnPage: boolean = false;\n/**\n * @param {?} responsiveNavService\n */\nconstructor(private responsiveNavService: ClrResponsiveNavigationService) {\n        this._subscription = this.responsiveNavService.registeredNavs.subscribe({\n            next: (navLevelList: number[]) => {\n                this.initializeNavTriggers(navLevelList);\n            }\n        });\n    }\n/**\n * @return {?}\n */\nget responsiveNavCodes(): ClrResponsiveNavCodes {\n        return ClrResponsiveNavCodes;\n    }\n/**\n * @return {?}\n */\nresetNavTriggers() {\n        this.isNavLevel1OnPage = false;\n        this.isNavLevel2OnPage = false;\n    }\n/**\n * @param {?} navList\n * @return {?}\n */\ninitializeNavTriggers(navList: number[]): void {\n        this.resetNavTriggers();\n        if (navList.length > 2) {\n            console.error(\"More than 2 Nav Levels detected.\");\n            return;\n        }\n        navList.forEach((navLevel) => {\n            if (navLevel === ClrResponsiveNavCodes.NAV_LEVEL_1) {\n                this.isNavLevel1OnPage = true;\n            } else if (navLevel === ClrResponsiveNavCodes.NAV_LEVEL_2) {\n                this.isNavLevel2OnPage = true;\n            }\n        });\n    }\n/**\n * @return {?}\n */\ncloseOpenNav() {\n        this.responsiveNavService.closeAllNavs();\n    }\n/**\n * @param {?} navLevel\n * @return {?}\n */\ntoggleNav(navLevel: number) {\n        this.responsiveNavService.sendControlMessage(ClrResponsiveNavCodes.NAV_TOGGLE, navLevel);\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-header\",\n    template: `\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel1OnPage\"\n            class=\"header-hamburger-trigger\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_1)\">\n            <span></span>\n        </button>\n        <ng-content></ng-content>\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel2OnPage\"\n            class=\"header-overflow-trigger\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_2)\">\n            <span></span>\n        </button>\n        <div class=\"header-backdrop\" (click)=\"closeOpenNav()\"></div>\n    `,\n    host: {\"[class.header]\": \"true\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ClrResponsiveNavigationService, },\n];\n}\n\nfunction Header_tsickle_Closure_declarations() {\n/** @type {?} */\nHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeader.ctorParameters;\n/** @type {?} */\nHeader.prototype._subscription;\n/** @type {?} */\nHeader.prototype.isNavLevel1OnPage;\n/** @type {?} */\nHeader.prototype.isNavLevel2OnPage;\n/** @type {?} */\nHeader.prototype.responsiveNavService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {ChangeDetectorRef, Directive, Optional} from '@angular/core';\nimport {OompaLoompa} from '../../utils/chocolate/oompa-loompa';\nimport {ClrResponsiveNavigationService} from '../nav/clrResponsiveNavigationService';\nimport {MainContainerWillyWonka} from './main-container-willy-wonka';\nexport class NavDetectionOompaLoompa extends OompaLoompa {\nprivate responsiveNavService: ClrResponsiveNavigationService;\n/**\n * @param {?} cdr\n * @param {?} willyWonka\n * @param {?} responsiveNavService\n */\nconstructor(cdr: ChangeDetectorRef,  willyWonka: MainContainerWillyWonka,\n                responsiveNavService: ClrResponsiveNavigationService) {\n        if (!willyWonka) {\n            throw new Error(\"clr-header should only be used inside of a clr-main-container\");\n        }\n        super(cdr, willyWonka);\n        this.responsiveNavService = responsiveNavService;\n    }\n/**\n * @return {?}\n */\nget flavor() {\n        return this.responsiveNavService.responsiveNavList.reduce((sum, navLevel) => sum + navLevel, 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-header\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: MainContainerWillyWonka, decorators: [{ type: Optional }, ]},\n{type: ClrResponsiveNavigationService, },\n];\n}\n\nfunction NavDetectionOompaLoompa_tsickle_Closure_declarations() {\n/** @type {?} */\nNavDetectionOompaLoompa.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNavDetectionOompaLoompa.ctorParameters;\n/** @type {?} */\nNavDetectionOompaLoompa.prototype.responsiveNavService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive} from '@angular/core';\nimport {WillyWonka} from '../../utils/chocolate/willy-wonka';\nexport class MainContainerWillyWonka extends WillyWonka {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-main-container\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MainContainerWillyWonka_tsickle_Closure_declarations() {\n/** @type {?} */\nMainContainerWillyWonka.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMainContainerWillyWonka.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {ClrResponsiveNavigationService} from './clrResponsiveNavigationService';\n/**\n * @param {?} existing\n * @return {?}\n */\nexport function clrResponsiveNavigationProvider(existing: ClrResponsiveNavigationService) {\n    return existing || new ClrResponsiveNavigationService();\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ClrIconModule} from '../../icon/icon.module';\n\nimport {LAYOUT_DIRECTIVES} from './index';\nexport class ClrMainContainerModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: [CommonModule, ClrIconModule], declarations: [LAYOUT_DIRECTIVES], exports: [LAYOUT_DIRECTIVES]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrMainContainerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrMainContainerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrMainContainerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {MainContainer} from './main-container';\n\nexport {MainContainer} from './main-container';\nexport const /** @type {?} */ LAYOUT_DIRECTIVES: Type<any>[] = [MainContainer];\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, ElementRef, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {ClrResponsiveNavCodes} from '../nav/clrResponsiveNavCodes';\nimport {ClrResponsiveNavControlMessage} from '../nav/clrResponsiveNavControlMessage';\nimport {ClrResponsiveNavigationService} from '../nav/clrResponsiveNavigationService';\nexport class MainContainer implements OnDestroy, OnInit {\nprivate _subscription: Subscription;\nprivate _classList: DOMTokenList;\n/**\n * @param {?} elRef\n * @param {?} responsiveNavService\n */\nconstructor(private elRef: ElementRef,\nprivate responsiveNavService: ClrResponsiveNavigationService) {}\n/**\n * @return {?}\n */\nngOnInit() {\n        this._classList = this.elRef.nativeElement.classList;\n        this._subscription = this.responsiveNavService.navControl.subscribe({\n            next: (message: ClrResponsiveNavControlMessage) => {\n                this.processMessage(message);\n            }\n        });\n    }\n/**\n * @param {?} message\n * @return {?}\n */\nprocessMessage(message: ClrResponsiveNavControlMessage): void {\n        let /** @type {?} */ navClass: string = ClrResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU;\n        if (message.controlCode === ClrResponsiveNavCodes.NAV_CLOSE_ALL) {\n            this._classList.remove(ClrResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU);\n            this._classList.remove(ClrResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU);\n        } else if (message.navLevel === ClrResponsiveNavCodes.NAV_LEVEL_1) {\n            this.controlNav(message.controlCode, navClass);\n        } else if (message.navLevel === ClrResponsiveNavCodes.NAV_LEVEL_2) {\n            navClass = ClrResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU;\n            this.controlNav(message.controlCode, navClass);\n        }\n    }\n/**\n * @param {?} controlCode\n * @param {?} navClass\n * @return {?}\n */\ncontrolNav(controlCode: string, navClass: string): void {\n        if (controlCode === ClrResponsiveNavCodes.NAV_OPEN) {\n            this._classList.add(navClass);\n        } else if (controlCode === ClrResponsiveNavCodes.NAV_CLOSE) {\n            this._classList.remove(navClass);\n        } else if (controlCode === ClrResponsiveNavCodes.NAV_TOGGLE) {\n            this._classList.toggle(navClass);\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-main-container\", host: {\"[class.main-container]\": \"true\"}}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ClrResponsiveNavigationService, },\n];\n}\n\nfunction MainContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nMainContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMainContainer.ctorParameters;\n/** @type {?} */\nMainContainer.prototype._subscription;\n/** @type {?} */\nMainContainer.prototype._classList;\n/** @type {?} */\nMainContainer.prototype.elRef;\n/** @type {?} */\nMainContainer.prototype.responsiveNavService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\nimport {ClrResponsiveNavCodes} from './clrResponsiveNavCodes';\nimport {ClrResponsiveNavControlMessage} from './clrResponsiveNavControlMessage';\nexport class ClrResponsiveNavigationService {\npublic responsiveNavList: number[] = [];\nprivate registerNavSubject: Subject<number[]> = new Subject<number[]>();\nprivate controlNavSubject: Subject<ClrResponsiveNavControlMessage> = new Subject<ClrResponsiveNavControlMessage>();\n/**\n * @return {?}\n */\nget registeredNavs(): Observable<number[]> {\n        return this.registerNavSubject.asObservable();\n    }\n/**\n * @return {?}\n */\nget navControl(): Observable<ClrResponsiveNavControlMessage> {\n        return this.controlNavSubject.asObservable();\n    }\nconstructor() {\n        this.closeAllNavs();  // We start with all navs closed\n    }\n/**\n * @param {?} navLevel\n * @return {?}\n */\nregisterNav(navLevel: number): void {\n        if (!navLevel || this.isNavRegistered(navLevel)) {\n            return;\n        }\n        this.responsiveNavList.push(navLevel);\n        this.registerNavSubject.next(this.responsiveNavList);\n    }\n/**\n * @param {?} navLevel\n * @return {?}\n */\nisNavRegistered(navLevel: number): boolean {\n        if (this.responsiveNavList.indexOf(navLevel) > -1) {\n            console.error(\"Multiple clr-nav-level \" + navLevel +\n                          \" attributes found. Please make sure that only one exists\");\n            return true;\n        }\n        return false;\n    }\n/**\n * @param {?} navLevel\n * @return {?}\n */\nunregisterNav(navLevel: number) {\n        const /** @type {?} */ index = this.responsiveNavList.indexOf(navLevel);\n        if (index > -1) {\n            this.responsiveNavList.splice(index, 1);\n            this.registerNavSubject.next(this.responsiveNavList);\n        }\n    }\n/**\n * @param {?} controlCode\n * @param {?} navLevel\n * @return {?}\n */\nsendControlMessage(controlCode: string, navLevel: number) {\n        const /** @type {?} */ message: ClrResponsiveNavControlMessage = new ClrResponsiveNavControlMessage(controlCode, navLevel);\n        this.controlNavSubject.next(message);\n    }\n/**\n * @return {?}\n */\ncloseAllNavs() {\n        const /** @type {?} */ message: ClrResponsiveNavControlMessage =\n            new ClrResponsiveNavControlMessage(ClrResponsiveNavCodes.NAV_CLOSE_ALL, -999);\n        this.controlNavSubject.next(message);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrResponsiveNavigationService_tsickle_Closure_declarations() {\n/** @type {?} */\nClrResponsiveNavigationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrResponsiveNavigationService.ctorParameters;\n/** @type {?} */\nClrResponsiveNavigationService.prototype.responsiveNavList;\n/** @type {?} */\nClrResponsiveNavigationService.prototype.registerNavSubject;\n/** @type {?} */\nClrResponsiveNavigationService.prototype.controlNavSubject;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ClrResponsiveNavControlMessage {\n/**\n * @param {?} _controlCode\n * @param {?} _navLevel\n */\nconstructor(private _controlCode: string,\nprivate _navLevel: number) {}\n/**\n * @return {?}\n */\nget controlCode(): string {\n        return this._controlCode;\n    }\n/**\n * @return {?}\n */\nget navLevel(): number {\n        return this._navLevel;\n    }\n}\n\nfunction ClrResponsiveNavControlMessage_tsickle_Closure_declarations() {\n/** @type {?} */\nClrResponsiveNavControlMessage.prototype._controlCode;\n/** @type {?} */\nClrResponsiveNavControlMessage.prototype._navLevel;\n}\n\n","\nexport class ClrResponsiveNavCodes {\npublic static NAV_LEVEL_1: number = 1;\npublic static NAV_LEVEL_2: number = 2;\npublic static NAV_CLOSE_ALL: string = \"NAV_CLOSE_ALL\";\npublic static NAV_OPEN: string = \"NAV_OPEN\";\npublic static NAV_CLOSE: string = \"NAV_CLOSE\";\npublic static NAV_TOGGLE: string = \"NAV_TOGGLE\";\npublic static NAV_CLASS_HAMBURGER_MENU: string = \"open-hamburger-menu\";\npublic static NAV_CLASS_OVERFLOW_MENU: string = \"open-overflow-menu\";\npublic static NAV_CLASS_TRIGGER_1: string = \"header-hamburger-trigger\";\npublic static NAV_CLASS_TRIGGER_2: string = \"header-overflow-trigger\";\npublic static NAV_CLASS_LEVEL_1: string = \"clr-nav-level-1\";\npublic static NAV_CLASS_LEVEL_2: string = \"clr-nav-level-2\";\n}\n\nfunction ClrResponsiveNavCodes_tsickle_Closure_declarations() {\n/** @type {?} */\nClrResponsiveNavCodes.NAV_LEVEL_1;\n/** @type {?} */\nClrResponsiveNavCodes.NAV_LEVEL_2;\n/** @type {?} */\nClrResponsiveNavCodes.NAV_CLOSE_ALL;\n/** @type {?} */\nClrResponsiveNavCodes.NAV_OPEN;\n/** @type {?} */\nClrResponsiveNavCodes.NAV_CLOSE;\n/** @type {?} */\nClrResponsiveNavCodes.NAV_TOGGLE;\n/** @type {?} */\nClrResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU;\n/** @type {?} */\nClrResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU;\n/** @type {?} */\nClrResponsiveNavCodes.NAV_CLASS_TRIGGER_1;\n/** @type {?} */\nClrResponsiveNavCodes.NAV_CLASS_TRIGGER_2;\n/** @type {?} */\nClrResponsiveNavCodes.NAV_CLASS_LEVEL_1;\n/** @type {?} */\nClrResponsiveNavCodes.NAV_CLASS_LEVEL_2;\n}\n\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {NgModule} from '@angular/core';\nimport {ClrAlertModule} from './alert/alert.module';\nexport class ClrEmphasisModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{exports: [ClrAlertModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrEmphasisModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrEmphasisModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrEmphasisModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ClrIconModule} from '../../icon/icon.module';\nimport {ClrDropdownModule} from '../../popover/dropdown/dropdown.module';\n\nimport {ALERT_DIRECTIVES} from './index';\nexport class ClrAlertModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n    declarations: [ALERT_DIRECTIVES],\n    exports: [ALERT_DIRECTIVES]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrAlertModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrAlertModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrAlertModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Type} from '@angular/core';\nimport {Alert} from './alert';\nimport {AlertItem} from './alert-item';\nimport {Alerts} from './alerts';\nimport {AlertsPager} from './alerts-pager';\n\nexport {Alert} from './alert';\nexport {AlertItem} from './alert-item';\nexport {Alerts} from './alerts';\nexport {AlertsPager} from './alerts-pager';\n\nexport const /** @type {?} */ ALERT_DIRECTIVES: Type<any>[] = [Alert, AlertItem, Alerts, AlertsPager];\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {Alert} from './alert';\nimport {MultiAlertService} from './providers/multi-alert-service';\nexport class AlertsPager implements OnInit, OnDestroy {\nprivate multiAlertServiceChanges: Subscription;\n/**\n * Input/Output to support two way binding on current alert instance\n * @param {?} alert\n * @return {?}\n */\nset currentAlert(alert: Alert) {\n        if (alert) {\n            this.multiAlertService.currentAlert = alert;\n        }\n    }\n/**\n * @return {?}\n */\nget currentAlert() {\n        return this.multiAlertService.currentAlert;\n    }\n\n     currentAlertChange = new EventEmitter<Alert>(false);\n/**\n * Input/Output to support two way binding on current alert index\n * @param {?} index\n * @return {?}\n */\nset currentAlertIndex(index: number) {\n        this.multiAlertService.current = index;\n    }\n/**\n * @return {?}\n */\nget currentAlertIndex() {\n        return this.multiAlertService.current;\n    }\n\n     currentAlertIndexChange = new EventEmitter<number>();\n/**\n * @param {?} multiAlertService\n */\nconstructor(public multiAlertService: MultiAlertService) {}\n/**\n * @return {?}\n */\nngOnInit() {\n        this.multiAlertServiceChanges = this.multiAlertService.changes.subscribe((index) => {\n            this.currentAlertIndexChange.emit(index);\n            this.currentAlertChange.emit(this.multiAlertService.activeAlerts[index]);\n        });\n    }\n/**\n * @return {?}\n */\npageUp() {\n        this.multiAlertService.next();\n    }\n/**\n * @return {?}\n */\npageDown() {\n        this.multiAlertService.previous();\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.multiAlertServiceChanges.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{selector: \"clr-alerts-pager\", template: `\n  <div class=\"alerts-pager-control\">\n      <div class=\"alerts-page-down\">\n          <button class=\"alerts-pager-button\" (click)=\"pageDown()\">\n              <clr-icon shape=\"caret left\"></clr-icon>\n          </button>\n      </div>\n      <div class=\"alerts-pager-text\">\n          {{this.multiAlertService.current+1}} / {{this.multiAlertService.count}}\n      </div>\n      <div class=\"alerts-page-up\">\n          <button class=\"alerts-pager-button\" (click)=\"pageUp()\">\n              <clr-icon shape=\"caret right\"></clr-icon>\n          </button>\n      </div>\n  </div>\n`, host: {\"[class.alerts-pager]\": \"true\"}}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MultiAlertService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'currentAlert': [{ type: Input, args: [\"clrCurrentAlert\", ] },],\n'currentAlertChange': [{ type: Output, args: [\"clrCurrentAlertChange\", ] },],\n'currentAlertIndex': [{ type: Input, args: [\"clrCurrentAlertIndex\", ] },],\n'currentAlertIndexChange': [{ type: Output, args: [\"clrCurrentAlertIndexChange\", ] },],\n};\n}\n\nfunction AlertsPager_tsickle_Closure_declarations() {\n/** @type {?} */\nAlertsPager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAlertsPager.ctorParameters;\n/** @type {?} */\nAlertsPager.propDecorators;\n/** @type {?} */\nAlertsPager.prototype.multiAlertServiceChanges;\n/** @type {?} */\nAlertsPager.prototype.currentAlertChange;\n/** @type {?} */\nAlertsPager.prototype.currentAlertIndexChange;\n/** @type {?} */\nAlertsPager.prototype.multiAlertService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {AfterContentInit, Component, ContentChildren, EventEmitter, Input, Output, QueryList} from '@angular/core';\nimport {Alert} from './alert';\nimport {MultiAlertService} from './providers/multi-alert-service';\nexport class Alerts implements AfterContentInit {\n     allAlerts: QueryList<Alert>;\n/**\n * Input/Output to support two way binding on current alert index\n * @param {?} index\n * @return {?}\n */\npublic set _inputCurrentIndex(index: number) {\n        if (index) {\n            this.multiAlertService.current = index;\n        }\n    }\npublic currentAlertIndexChange = new EventEmitter<number>(false);\n/**\n * @param {?} index\n * @return {?}\n */\nset currentAlertIndex(index: number) {\n        this.multiAlertService.current = index;\n    }\n/**\n * @return {?}\n */\nget currentAlertIndex() {\n        return this.multiAlertService.current;\n    }\n/**\n * Input/Output to support two way binding on current alert instance\n * @param {?} alert\n * @return {?}\n */\nset currentAlert(alert: Alert) {\n        if (alert) {\n            this.multiAlertService.currentAlert = alert;\n        }\n    }\n/**\n * @return {?}\n */\nget currentAlert() {\n        return this.multiAlertService.currentAlert;\n    }\npublic currentAlertChange = new EventEmitter<Alert>(false);\n/**\n * Ensure we are only dealing with alerts that have not been closed yet\n * @return {?}\n */\nget alerts() {\n        return this.allAlerts.filter((alert) => {\n            return alert.isHidden === false;\n        });\n    }\n/**\n * @return {?}\n */\nget currentAlertType(): string {\n        if (this.multiAlertService.currentAlert) {\n            return this.multiAlertService.currentAlert.alertType;\n        }\n        return \"\";\n    }\n/**\n * @param {?} multiAlertService\n */\nconstructor(public multiAlertService: MultiAlertService) {}\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this.multiAlertService.manage(this.allAlerts);\n        this.multiAlertService.changes.subscribe((index) => {\n            this.currentAlertIndexChange.next(index);\n            this.currentAlertChange.next(this.multiAlertService.currentAlert);\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-alerts\",\n    template: `\n      <clr-alerts-pager\n              *ngIf=\"multiAlertService.count > 1\"\n              [clrCurrentAlertIndex]=\"currentAlertIndex\">\n      </clr-alerts-pager>\n      <ng-content select=\"clr-alert\"></ng-content>\n    `,\n    providers: [MultiAlertService],\n    host: {\n        \"[class.alerts]\": \"true\",\n        \"[class.alert-danger]\": \"this.currentAlertType == 'danger'\",\n        \"[class.alert-info]\": \"this.currentAlertType == 'info'\",\n        \"[class.alert-success]\": \"this.currentAlertType == 'success'\",\n        \"[class.alert-warning]\": \"this.currentAlertType == 'warning'\"\n    },\n    styles: [\":host { display: block }\"]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MultiAlertService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'allAlerts': [{ type: ContentChildren, args: [Alert, ] },],\n'_inputCurrentIndex': [{ type: Input, args: [\"clrCurrentAlertIndex\", ] },],\n'currentAlertIndexChange': [{ type: Output, args: [\"clrCurrentAlertIndexChange\", ] },],\n'currentAlert': [{ type: Input, args: [\"clrCurrentAlert\", ] },],\n'currentAlertChange': [{ type: Output, args: [\"clrCurrentAlertChange\", ] },],\n};\n}\n\nfunction Alerts_tsickle_Closure_declarations() {\n/** @type {?} */\nAlerts.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAlerts.ctorParameters;\n/** @type {?} */\nAlerts.propDecorators;\n/** @type {?} */\nAlerts.prototype.allAlerts;\n/** @type {?} */\nAlerts.prototype.currentAlertIndexChange;\n/** @type {?} */\nAlerts.prototype.currentAlertChange;\n/** @type {?} */\nAlerts.prototype.multiAlertService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Component} from '@angular/core';\nimport {AlertIconAndTypesService} from './providers/icon-and-types-service';\nexport class AlertItem {\n/**\n * @param {?} iconService\n */\nconstructor(public iconService: AlertIconAndTypesService) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    // the .alert-item selector is deprecated; the :not clause is to allow us to use static\n    // examples in demos on the demo-app and website\n    selector: \".alert-item:not(.static), clr-alert-item\",\n    template: `\n        <div class=\"alert-icon-wrapper\">\n            <clr-icon class=\"alert-icon\" [attr.shape]=\"iconService.alertIconShape\"></clr-icon>\n        </div>\n        <ng-content></ng-content>\n    `,\n    host: {\"class\": \"alert-item\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlertIconAndTypesService, },\n];\n}\n\nfunction AlertItem_tsickle_Closure_declarations() {\n/** @type {?} */\nAlertItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAlertItem.ctorParameters;\n/** @type {?} */\nAlertItem.prototype.iconService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {ChangeDetectorRef, Component, EventEmitter, Input, Optional, Output} from '@angular/core';\n\n// providers\n\nimport {AlertIconAndTypesService} from './providers/icon-and-types-service';\nimport {MultiAlertService} from './providers/multi-alert-service';\nexport class Alert {\n/**\n * @param {?} iconService\n * @param {?} cdr\n * @param {?} multiAlertService\n */\nconstructor(public iconService: AlertIconAndTypesService,\npublic cdr: ChangeDetectorRef,\npublic multiAlertService: MultiAlertService) {}\n\n     isSmall: boolean = false;\n     closable: boolean = true;\n     isAppLevel: boolean = false;\n\n     _closed: boolean = false;\n     _closedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n/**\n * @param {?} val\n * @return {?}\n */\nset alertType(val: string) {\n        this.iconService.alertType = val;\n    }\n/**\n * @return {?}\n */\nget alertType(): string {\n        return this.iconService.alertType;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset alertIconShape(value: string) {\n        this.iconService.alertIconShape = value;\n    }\n/**\n * @return {?}\n */\nget alertClass(): string {\n        return this.iconService.iconInfoFromType(this.iconService.alertType).cssClass;\n    }\nprivate previouslyHidden = false;\nprivate hidden = false;\n/**\n * @return {?}\n */\nprivate detectChangesIfNeeded() {\n        if (this.previouslyHidden !== this.hidden) {\n            this.previouslyHidden = this.hidden;\n            this.cdr.detectChanges();\n        }\n    }\n/**\n * @return {?}\n */\nget isHidden() {\n        if (this.multiAlertService) {\n            if (this.multiAlertService.currentAlert === this) {\n                if (this.hidden === true) {\n                    this.previouslyHidden = true;\n                    this.hidden = false;\n                }\n            } else if (this.hidden === false) {\n                this.previouslyHidden = false;\n                this.hidden = true;\n            }\n            this.detectChangesIfNeeded();\n        }\n\n        return this.hidden;\n    }\n/**\n * @return {?}\n */\nclose(): void {\n        if (!this.closable) {\n            return;\n        }\n        this._closed = true;\n        if (this.multiAlertService) {\n            this.multiAlertService.close();\n        }\n        this._closedChanged.emit(true);\n    }\n/**\n * @return {?}\n */\nopen(): void {\n        this._closed = false;\n        this._closedChanged.emit(false);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{selector: \"clr-alert\", providers: [AlertIconAndTypesService], template: `\n  <!--\n    ~ Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n    ~ This software is released under MIT license.\n    ~ The full license information can be found in LICENSE in the root directory of this project.\n    -->\n\n  <div\n      *ngIf=\"!_closed\"\n      class=\"alert\"\n      [ngClass]=\"alertClass\"\n      [class.alert-hidden]=\"isHidden\"\n      [class.alert-sm]=\"isSmall\"\n      [class.alert-app-level]=\"isAppLevel\">\n      <div class=\"alert-items\">\n          <ng-content></ng-content>\n      </div>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" *ngIf=\"closable\" (click)=\"close()\">\n          <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n      </button>\n  </div>\n`}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AlertIconAndTypesService, },\n{type: ChangeDetectorRef, },\n{type: MultiAlertService, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isSmall': [{ type: Input, args: [\"clrAlertSizeSmall\", ] },],\n'closable': [{ type: Input, args: [\"clrAlertClosable\", ] },],\n'isAppLevel': [{ type: Input, args: [\"clrAlertAppLevel\", ] },],\n'_closed': [{ type: Input, args: [\"clrAlertClosed\", ] },],\n'_closedChanged': [{ type: Output, args: [\"clrAlertClosedChange\", ] },],\n'alertType': [{ type: Input, args: [\"clrAlertType\", ] },],\n'alertIconShape': [{ type: Input, args: [\"clrAlertIcon\", ] },],\n};\n}\n\nfunction Alert_tsickle_Closure_declarations() {\n/** @type {?} */\nAlert.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAlert.ctorParameters;\n/** @type {?} */\nAlert.propDecorators;\n/** @type {?} */\nAlert.prototype.isSmall;\n/** @type {?} */\nAlert.prototype.closable;\n/** @type {?} */\nAlert.prototype.isAppLevel;\n/** @type {?} */\nAlert.prototype._closed;\n/** @type {?} */\nAlert.prototype._closedChanged;\n/** @type {?} */\nAlert.prototype.previouslyHidden;\n/** @type {?} */\nAlert.prototype.hidden;\n/** @type {?} */\nAlert.prototype.iconService;\n/** @type {?} */\nAlert.prototype.cdr;\n/** @type {?} */\nAlert.prototype.multiAlertService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable, QueryList} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\nimport {Alert} from '../alert';\nexport class MultiAlertService {\nprivate allAlerts: QueryList<Alert> = new QueryList<Alert>();\nprivate _current = 0;\n/**\n * The Observable that lets other classes subscribe to changes\n */\nprivate _change = new Subject<number>();\n/**\n * @return {?}\n */\npublic get changes(): Observable<number> {\n        return this._change.asObservable();\n    }\n/**\n * @return {?}\n */\nget current() {\n        return this._current;\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nset current(index: number) {\n        if (index !== this._current) {\n            this._current = index;\n            this._change.next(index);\n        }\n    }\n/**\n * @return {?}\n */\nget activeAlerts() {\n        return this.allAlerts.filter((alert) => !alert._closed);\n    }\n/**\n * @return {?}\n */\nget currentAlert() {\n        return this.activeAlerts[this.current];\n    }\n/**\n * @param {?} alert\n * @return {?}\n */\nset currentAlert(alert: Alert) {\n        this.current = this.activeAlerts.indexOf(alert);\n    }\n/**\n * @return {?}\n */\nget count() {\n        return this.activeAlerts.length;\n    }\n/**\n * @param {?} alerts\n * @return {?}\n */\nmanage(alerts: QueryList<Alert>) {\n        this.allAlerts = alerts;\n    }\n/**\n * @return {?}\n */\nnext() {\n        this.current = (this.current === this.activeAlerts.length - 1) ? 0 : this.current + 1;\n    }\n/**\n * @return {?}\n */\nprevious() {\n        this.current = (this.current === 0) ? this.activeAlerts.length - 1 : this.current - 1;\n    }\n/**\n * @return {?}\n */\nclose() {\n        this.previous();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MultiAlertService_tsickle_Closure_declarations() {\n/** @type {?} */\nMultiAlertService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMultiAlertService.ctorParameters;\n/** @type {?} */\nMultiAlertService.prototype.allAlerts;\n/** @type {?} */\nMultiAlertService.prototype._current;\n/**\n * The Observable that lets other classes subscribe to changes\n * @type {?}\n */\nMultiAlertService.prototype._change;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable} from '@angular/core';\n\nimport {AlertInfoObject} from '../utils/alert-info-object';\nimport {ALERT_TYPES} from '../utils/alert-types';\nexport class AlertIconAndTypesService {\nprivate defaultIconShape = \"info-circle\";\nprivate _alertIconShape = \"\";\nprivate _alertType = \"info\";\n/**\n * @return {?}\n */\nget alertType(): string {\n        return this._alertType;\n    }\n/**\n * @param {?} val\n * @return {?}\n */\nset alertType(val: string) {\n        if (ALERT_TYPES.indexOf(val) > -1) {\n            this._alertType = val;\n        }\n    }\n/**\n * @return {?}\n */\nget alertIconShape(): string {\n        if (\"\" === this._alertIconShape) {\n            return this.iconInfoFromType(this._alertType).shape;\n        }\n        return this._alertIconShape;\n    }\n/**\n * @param {?} val\n * @return {?}\n */\nset alertIconShape(val: string) {\n        if (!val) {\n            this._alertIconShape = \"\";\n        } else if (val !== this._alertIconShape) {\n            this._alertIconShape = val;\n        }\n    }\n/**\n * @param {?} type\n * @param {?=} classOrShape\n * @return {?}\n */\npublic iconInfoFromType(type: string, classOrShape: string = \"shape\"): AlertInfoObject {\n        const /** @type {?} */ returnObj = {shape: \"\", cssClass: \"\"};\n\n        switch (type) {\n            case \"warning\":\n            case \"alert-warning\":\n                returnObj.shape = \"exclamation-triangle\";\n                returnObj.cssClass = \"alert-warning\";\n                break;\n            case \"danger\":\n            case \"alert-danger\":\n                returnObj.shape = \"exclamation-circle\";\n                returnObj.cssClass = \"alert-danger\";\n                break;\n            case \"success\":\n            case \"alert-success\":\n                returnObj.shape = \"check-circle\";\n                returnObj.cssClass = \"alert-success\";\n                break;\n            default:\n                returnObj.shape = this.defaultIconShape;\n                returnObj.cssClass = \"alert-info\";\n                break;\n        }\n\n        return returnObj;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AlertIconAndTypesService_tsickle_Closure_declarations() {\n/** @type {?} */\nAlertIconAndTypesService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAlertIconAndTypesService.ctorParameters;\n/** @type {?} */\nAlertIconAndTypesService.prototype.defaultIconShape;\n/** @type {?} */\nAlertIconAndTypesService.prototype._alertIconShape;\n/** @type {?} */\nAlertIconAndTypesService.prototype._alertType;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// TODO: alert-* types are deprecated and should be removed before 1.0!\nexport const /** @type {?} */ ALERT_TYPES: string[] =\n    [\"alert-info\", \"alert-warning\", \"alert-danger\", \"alert-success\", \"info\", \"warning\", \"danger\", \"success\"];","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ClrIconModule} from '../../icon/icon.module';\nimport {ClrConditionalModule} from '../../utils/conditional/conditional.module';\nimport {ClrCommonPopoverModule} from '../common/popover.module';\n\nimport {DROPDOWN_DIRECTIVES} from './index';\nexport class ClrDropdownModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrCommonPopoverModule],\n    declarations: [DROPDOWN_DIRECTIVES],\n    exports: [DROPDOWN_DIRECTIVES, ClrConditionalModule, ClrIconModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrDropdownModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrDropdownModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrDropdownModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\n\nimport {Dropdown} from './dropdown';\nimport {DropdownItem} from './dropdown-item';\nimport {DropdownMenu} from './dropdown-menu';\nimport {DropdownTrigger} from './dropdown-trigger';\n\nexport {Dropdown} from './dropdown';\nexport {DropdownMenu} from './dropdown-menu';\nexport {DropdownTrigger} from './dropdown-trigger';\nexport {DropdownItem} from './dropdown-item';\nexport {menuPositions} from './menu-positions';\n\nexport const /** @type {?} */ DROPDOWN_DIRECTIVES: Type<any>[] = [Dropdown, DropdownMenu, DropdownTrigger, DropdownItem];\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, HostListener} from '@angular/core';\n\nimport {IfOpenService} from '../../utils/conditional/if-open.service';\n\nimport {Dropdown} from './dropdown';\nexport class DropdownTrigger {\nprivate isRootLevelToggle: boolean = true;\n/**\n * @param {?} dropdown\n * @param {?} ifOpenService\n */\nconstructor(private dropdown: Dropdown,\nprivate ifOpenService: IfOpenService) {\n        // if the containing dropdown has a parent, then this is not the root level one\n        if (dropdown.parent) {\n            this.isRootLevelToggle = false;\n        }\n    }\n/**\n * @return {?}\n */\nget active(): boolean {\n        return this.ifOpenService.open;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nonDropdownTriggerClick(event: any): void {\n        this.ifOpenService.toggleWithEvent(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    // We support both selectors for legacy reasons\n    selector: \"[clrDropdownTrigger],[clrDropdownToggle]\",\n    host: {\n        \"[class.dropdown-toggle]\": \"isRootLevelToggle\",\n        \"[class.dropdown-item]\": \"!isRootLevelToggle\",\n        \"[class.expandable]\": \"!isRootLevelToggle\",\n        \"[class.active]\": \"active\"\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Dropdown, },\n{type: IfOpenService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onDropdownTriggerClick': [{ type: HostListener, args: [\"click\", [\"$event\"], ] },],\n};\n}\n\nfunction DropdownTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownTrigger.ctorParameters;\n/** @type {?} */\nDropdownTrigger.propDecorators;\n/** @type {?} */\nDropdownTrigger.prototype.isRootLevelToggle;\n/** @type {?} */\nDropdownTrigger.prototype.dropdown;\n/** @type {?} */\nDropdownTrigger.prototype.ifOpenService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, ElementRef, Inject, Injector, Input, Optional, SkipSelf} from '@angular/core';\nimport {AbstractPopover} from '../common/abstract-popover';\nimport {Point} from '../common/popover';\nimport {POPOVER_HOST_ANCHOR} from '../common/popover-host-anchor.token';\nexport class DropdownMenu extends AbstractPopover {\n/**\n * @param {?} injector\n * @param {?} parentHost\n * @param {?} nested\n */\nconstructor(injector: Injector,   parentHost: ElementRef,\n                  nested: DropdownMenu) {\n        if (!parentHost) {\n            throw new Error(\"clr-dropdown-menu should only be used inside of a clr-dropdown\");\n        }\n        super(injector, parentHost);\n        if (!nested) {\n            // Default positioning for normal dropdown is bottom-left\n            this.anchorPoint = Point.BOTTOM_LEFT;\n            this.popoverPoint = Point.LEFT_TOP;\n        } else {\n            // Default positioning for nested dropdown is right-top\n            this.anchorPoint = Point.RIGHT_TOP;\n            this.popoverPoint = Point.LEFT_TOP;\n        }\n        this.popoverOptions.allowMultipleOpen = true;\n        this.closeOnOutsideClick = true;\n    }\n/**\n * @param {?} position\n * @return {?}\n */\nset position(position: string) {\n        // set the popover values based on menu position\n        switch (position) {\n            case (\"top-right\"):\n                this.anchorPoint = Point.TOP_RIGHT;\n                this.popoverPoint = Point.RIGHT_BOTTOM;\n                break;\n            case (\"top-left\"):\n                this.anchorPoint = Point.TOP_LEFT;\n                this.popoverPoint = Point.LEFT_BOTTOM;\n                break;\n            case (\"bottom-right\"):\n                this.anchorPoint = Point.BOTTOM_RIGHT;\n                this.popoverPoint = Point.RIGHT_TOP;\n                break;\n            case (\"bottom-left\"):\n                this.anchorPoint = Point.BOTTOM_LEFT;\n                this.popoverPoint = Point.LEFT_TOP;\n                break;\n            case (\"right-top\"):\n                this.anchorPoint = Point.RIGHT_TOP;\n                this.popoverPoint = Point.LEFT_TOP;\n                break;\n            case (\"right-bottom\"):\n                this.anchorPoint = Point.RIGHT_BOTTOM;\n                this.popoverPoint = Point.LEFT_BOTTOM;\n                break;\n            case (\"left-top\"):\n                this.anchorPoint = Point.LEFT_TOP;\n                this.popoverPoint = Point.RIGHT_TOP;\n                break;\n            case (\"left-bottom\"):\n                this.anchorPoint = Point.LEFT_BOTTOM;\n                this.popoverPoint = Point.RIGHT_BOTTOM;\n                break;\n            default:\n                this.anchorPoint = Point.BOTTOM_LEFT;\n                this.popoverPoint = Point.LEFT_TOP;\n                break;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dropdown-menu\",\n    template: `\n        <ng-content></ng-content>\n    `,\n    host: {\n        \"[class.dropdown-menu]\": \"true\",\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n{type: ElementRef, decorators: [{ type: Optional }, { type: Inject, args: [POPOVER_HOST_ANCHOR, ] }, ]},\n{type: DropdownMenu, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: Input, args: [\"clrPosition\", ] },],\n};\n}\n\nfunction DropdownMenu_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownMenu.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownMenu.ctorParameters;\n/** @type {?} */\nDropdownMenu.propDecorators;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n    AfterViewChecked,\n    ElementRef,\n    HostBinding,\n    Injectable,\n    Injector,\n    OnDestroy,\n    Renderer2,\n    SkipSelf\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {IfOpenService} from '../../utils/conditional/if-open.service';\n\nimport {Point, Popover, PopoverOptions} from './popover';\n/**\n * @abstract\n */\nexport abstract class AbstractPopover implements AfterViewChecked, OnDestroy {\n/**\n * @param {?} injector\n * @param {?} parentHost\n */\nconstructor(injector: Injector,  protected parentHost: ElementRef) {\n        this.el = injector.get(ElementRef);\n        this.ifOpenService = injector.get(IfOpenService);\n        this.renderer = injector.get(Renderer2);\n        // Default anchor is the parent host\n        this.anchorElem = parentHost.nativeElement;\n\n        this.popoverInstance = new Popover(this.el.nativeElement);\n        this.subscription = this.ifOpenService.openChange.subscribe((change) => {\n            change ? this.anchor() : this.release();\n        });\n        if (this.ifOpenService.open) {\n            this.anchor();\n        }\n    }\n\n    protected el: ElementRef;\n    protected ifOpenService: IfOpenService;\n    protected renderer: Renderer2;\nprivate popoverInstance: Popover;\nprivate subscription: Subscription;\nprivate updateAnchor = false;\n\n    protected anchorElem: any;\n    protected anchorPoint: Point;\n    protected popoverPoint: Point;\n    protected popoverOptions: PopoverOptions = {};\n/**\n * @return {?}\n */\nprotected anchor() {\n        this.updateAnchor = true;\n        // Ugh\n        this.ignore = this.ifOpenService.originalEvent;\n    }\n/**\n * @return {?}\n */\nprotected release() {\n        this.detachOutsideClickListener();\n        this.popoverInstance.release();\n    }\n/**\n * @return {?}\n */\nngAfterViewChecked() {\n        if (this.updateAnchor) {\n            this.updateAnchor = false;\n            this.popoverInstance.anchor(this.anchorElem, this.anchorPoint, this.popoverPoint, this.popoverOptions)\n                .subscribe(() => {\n                    // if a scroll event is detected, close the popover\n                    this.ifOpenService.open = false;\n                });\n            this.attachOutsideClickListener();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.release();\n        this.subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nget isOffScreen() {\n        return this.ifOpenService.open ? false : true;\n    }\npublic closeOnOutsideClick = false;\nprivate hostListener: () => void;\nprivate documentListener: () => void;\nprivate ignore: any;\n/**\n * @return {?}\n */\nprivate attachOutsideClickListener() {\n        if (this.closeOnOutsideClick) {\n            this.hostListener = this.renderer.listen(this.el.nativeElement, \"click\", event => this.ignore = event);\n            this.documentListener = this.renderer.listen(\"document\", \"click\", event => {\n                if (event === this.ignore) {\n                    delete this.ignore;\n                } else {\n                    this.ifOpenService.open = false;\n                }\n            });\n        }\n    }\n/**\n * @return {?}\n */\nprivate detachOutsideClickListener() {\n        if (this.closeOnOutsideClick) {\n            if (this.hostListener) {\n                this.hostListener();\n                delete this.hostListener;\n            }\n            if (this.documentListener) {\n                this.documentListener();\n                delete this.documentListener;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n{type: ElementRef, decorators: [{ type: SkipSelf }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isOffScreen': [{ type: HostBinding, args: [\"class.is-off-screen\", ] },],\n};\n}\n\nfunction AbstractPopover_tsickle_Closure_declarations() {\n/** @type {?} */\nAbstractPopover.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAbstractPopover.ctorParameters;\n/** @type {?} */\nAbstractPopover.propDecorators;\n/** @type {?} */\nAbstractPopover.prototype.el;\n/** @type {?} */\nAbstractPopover.prototype.ifOpenService;\n/** @type {?} */\nAbstractPopover.prototype.renderer;\n/** @type {?} */\nAbstractPopover.prototype.popoverInstance;\n/** @type {?} */\nAbstractPopover.prototype.subscription;\n/** @type {?} */\nAbstractPopover.prototype.updateAnchor;\n/** @type {?} */\nAbstractPopover.prototype.anchorElem;\n/** @type {?} */\nAbstractPopover.prototype.anchorPoint;\n/** @type {?} */\nAbstractPopover.prototype.popoverPoint;\n/** @type {?} */\nAbstractPopover.prototype.popoverOptions;\n/** @type {?} */\nAbstractPopover.prototype.closeOnOutsideClick;\n/** @type {?} */\nAbstractPopover.prototype.hostListener;\n/** @type {?} */\nAbstractPopover.prototype.documentListener;\n/** @type {?} */\nAbstractPopover.prototype.ignore;\n/** @type {?} */\nAbstractPopover.prototype.parentHost;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, ElementRef, HostListener} from '@angular/core';\n\nimport {Dropdown} from './dropdown';\nimport {RootDropdownService} from './providers/dropdown.service';\nexport class DropdownItem {\n/**\n * @param {?} dropdown\n * @param {?} el\n * @param {?} _dropdownService\n */\nconstructor(private dropdown: Dropdown,\nprivate el: ElementRef,\nprivate _dropdownService: RootDropdownService) {}\n/**\n * @return {?}\n */\nonDropdownItemClick(): void {\n        if (this.dropdown.isMenuClosable && !this.el.nativeElement.classList.contains(\"disabled\")) {\n            this._dropdownService.closeMenus();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrDropdownItem]\", host: {\"[class.dropdown-item]\": \"true\"}}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Dropdown, },\n{type: ElementRef, },\n{type: RootDropdownService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onDropdownItemClick': [{ type: HostListener, args: [\"click\", ] },],\n};\n}\n\nfunction DropdownItem_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownItem.ctorParameters;\n/** @type {?} */\nDropdownItem.propDecorators;\n/** @type {?} */\nDropdownItem.prototype.dropdown;\n/** @type {?} */\nDropdownItem.prototype.el;\n/** @type {?} */\nDropdownItem.prototype._dropdownService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, ElementRef, Input, OnDestroy, Optional, SkipSelf} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {IfOpenService} from '../../utils/conditional/if-open.service';\nimport {POPOVER_HOST_ANCHOR} from '../common/popover-host-anchor.token';\n\nimport {ROOT_DROPDOWN_PROVIDER, RootDropdownService} from './providers/dropdown.service';\nexport class Dropdown implements OnDestroy {\nprivate _subscription: Subscription;\n/**\n * @param {?} parent\n * @param {?} ifOpenService\n * @param {?} dropdownService\n */\nconstructor(\npublic parent: Dropdown,\npublic ifOpenService: IfOpenService,\n                dropdownService: RootDropdownService) {\n        this._subscription = dropdownService.changes.subscribe(value => this.ifOpenService.open = value);\n    }\n\n     isMenuClosable: boolean = true;\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dropdown\",\n    template: \"<ng-content></ng-content>\",\n    host: {\n        \"[class.dropdown]\": \"true\",\n        // FIXME: remove this as soon as we stop supporting this old <div class=\"dropdown-menu\"> syntax\n        \"[class.open]\": \"ifOpenService.open\"\n    },\n    providers: [IfOpenService, ROOT_DROPDOWN_PROVIDER, {provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Dropdown, decorators: [{ type: SkipSelf }, { type: Optional }, ]},\n{type: IfOpenService, },\n{type: RootDropdownService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'isMenuClosable': [{ type: Input, args: [\"clrCloseMenuOnItemClick\", ] },],\n};\n}\n\nfunction Dropdown_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdown.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdown.ctorParameters;\n/** @type {?} */\nDropdown.propDecorators;\n/** @type {?} */\nDropdown.prototype._subscription;\n/** @type {?} */\nDropdown.prototype.isMenuClosable;\n/** @type {?} */\nDropdown.prototype.parent;\n/** @type {?} */\nDropdown.prototype.ifOpenService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nexport class RootDropdownService {\nprivate _changes: Subject<boolean> = new Subject<boolean>();\n/**\n * @return {?}\n */\nget changes(): Observable<boolean> {\n        return this._changes.asObservable();\n    }\n/**\n * @return {?}\n */\ncloseMenus(): void {\n        this._changes.next(false);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RootDropdownService_tsickle_Closure_declarations() {\n/** @type {?} */\nRootDropdownService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRootDropdownService.ctorParameters;\n/** @type {?} */\nRootDropdownService.prototype._changes;\n}\n\n/**\n * @param {?} existing\n * @return {?}\n */\nexport function clrRootDropdownFactory(existing: RootDropdownService) {\n    return existing || new RootDropdownService();\n}\n\nexport const /** @type {?} */ ROOT_DROPDOWN_PROVIDER = {\n    provide: RootDropdownService,\n    useFactory: clrRootDropdownFactory,\n    deps: [[new Optional(), new SkipSelf(), RootDropdownService]]\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {CONDITIONAL_DIRECTIVES} from './index';\nexport class ClrConditionalModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: [CommonModule], declarations: [CONDITIONAL_DIRECTIVES], exports: [CONDITIONAL_DIRECTIVES]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrConditionalModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrConditionalModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrConditionalModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {IfActiveDirective} from './if-active.directive';\nimport {IfOpenDirective} from './if-open.directive';\n\nexport {IfActiveDirective} from './if-active.directive';\nexport {IfOpenDirective} from './if-open.directive';\n\nexport const /** @type {?} */ CONDITIONAL_DIRECTIVES: Type<any>[] = [IfActiveDirective, IfOpenDirective];\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, EventEmitter, Input, OnDestroy, Output, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {IfOpenService} from './if-open.service';\n/**\n * *******\n * \n * \\@class IfOpenDirective\n * \n * \\@description \n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: IfOpenService to maintain state between itself and the component\n * using it in the component template.\n * \n */\nexport class IfOpenDirective implements OnDestroy {\nprivate subscription: Subscription;\n/**\n * ******\n * \\@function open\n * \n * \\@description \n * A setter that updates IfOpenService.open with value.\n * \n * @param {?} value\n * @return {?}\n */\npublic set open(value: boolean) {\n        this.ifOpenService.open = value;\n    }\n/**\n * *******\n * \\@property openChange\n * \n * \\@description \n * An event emitter that emits when the open property is set to allow for 2way binding when the directive is\n * used with de-structured / de-sugared syntax.\n * \n */\nopenChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n/**\n * *****\n * \\@function open\n * \n * \\@description \n * A getter that returns the current IfOpenService.open value.\n * @return {?}\n */\npublic get open() {\n        return this.ifOpenService.open;\n    }\n/**\n * @param {?} ifOpenService\n * @param {?} template\n * @param {?} container\n */\nconstructor(private ifOpenService: IfOpenService,\nprivate template: TemplateRef<any>,\nprivate container: ViewContainerRef) {\n        this.subscription = this.ifOpenService.openChange.subscribe((change) => {\n            this.updateView(change);\n            this.openChange.emit(change);\n        });\n    }\n/**\n * ******\n * \\@function updateView\n * \n * \\@description \n * Function that takes a boolean value and either created an embedded view for the associated ViewContainerRef or,\n * Clears all views from the ViewContainerRef\n * @param {?} value\n * @return {?}\n */\npublic updateView(value: boolean) {\n        if (value) {\n            this.container.createEmbeddedView(this.template);\n        } else {\n            this.container.clear();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrIfOpen]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IfOpenService, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'open': [{ type: Input, args: [\"clrIfOpen\", ] },],\n'openChange': [{ type: Output, args: [\"clrIfOpenChange\", ] },],\n};\n}\n\nfunction IfOpenDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nIfOpenDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIfOpenDirective.ctorParameters;\n/** @type {?} */\nIfOpenDirective.propDecorators;\n/** @type {?} */\nIfOpenDirective.prototype.subscription;\n/**\n * *******\n * \\@property openChange\n * \n * \\@description \n * An event emitter that emits when the open property is set to allow for 2way binding when the directive is\n * used with de-structured / de-sugared syntax.\n * \n * @type {?}\n */\nIfOpenDirective.prototype.openChange;\n/** @type {?} */\nIfOpenDirective.prototype.ifOpenService;\n/** @type {?} */\nIfOpenDirective.prototype.template;\n/** @type {?} */\nIfOpenDirective.prototype.container;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, EventEmitter, Inject, Input, OnDestroy, Output, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {IF_ACTIVE_ID, IfActiveService} from './if-active.service';\n/**\n * *******\n * \n * \\@class IfActiveDirective\n * \n * \\@description \n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: IfActiveService to maintain state between itself and\n * the component using it in the component template.\n * \n */\nexport class IfActiveDirective implements OnDestroy {\nprivate subscription: Subscription;\nprivate wasActive: boolean = false;\n/**\n * @param {?} ifActiveService\n * @param {?} id\n * @param {?} template\n * @param {?} container\n */\nconstructor(private ifActiveService: IfActiveService,\nprivate id: number,\nprivate template: TemplateRef<any>,\nprivate container: ViewContainerRef) {\n        this.checkAndUpdateView(ifActiveService.current);\n\n        this.subscription = this.ifActiveService.currentChange.subscribe((newCurrentId) => {\n            this.checkAndUpdateView(newCurrentId);\n        });\n    }\n/**\n * @param {?} currentId\n * @return {?}\n */\nprivate checkAndUpdateView(currentId: number) {\n        const /** @type {?} */ isNowActive = currentId === this.id;\n        // only emit if the new active state is changed since last time.\n        if (isNowActive !== this.wasActive) {\n            this.updateView(isNowActive);\n            this.activeChange.emit(isNowActive);\n            this.wasActive = isNowActive;\n        }\n    }\n/**\n * ******\n * \\@function active\n * \n * \\@description \n * A setter that updates IfActiveService.active with value.\n * \n * @param {?} value\n * @return {?}\n */\npublic set active(value: boolean) {\n        if (value) {\n            this.ifActiveService.current = this.id;\n        }\n    }\n/**\n * *******\n * \\@property activeChange\n * \n * \\@description \n * An event emitter that emits when the active property is set to allow for 2way binding when the directive is\n * used with de-structured / de-sugared syntax.\n * \n */\nactiveChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n/**\n * *****\n * \\@function active\n * \n * \\@description \n * A getter that returns the current IfActiveService.active value.\n * @return {?}\n */\npublic get active() {\n        return this.ifActiveService.current === this.id;\n    }\n/**\n * ******\n * \\@function updateView\n * \n * \\@description \n * Function that takes a any value and either created an embedded view for the associated ViewContainerRef or,\n * Clears all views from the ViewContainerRef\n * @param {?} value\n * @return {?}\n */\npublic updateView(value: boolean) {\n        if (value) {\n            this.container.createEmbeddedView(this.template);\n        } else {\n            this.container.clear();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrIfActive]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IfActiveService, },\n{type: undefined, decorators: [{ type: Inject, args: [IF_ACTIVE_ID, ] }, ]},\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input, args: [\"clrIfActive\", ] },],\n'activeChange': [{ type: Output, args: [\"clrIfActiveChange\", ] },],\n};\n}\n\nfunction IfActiveDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nIfActiveDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIfActiveDirective.ctorParameters;\n/** @type {?} */\nIfActiveDirective.propDecorators;\n/** @type {?} */\nIfActiveDirective.prototype.subscription;\n/** @type {?} */\nIfActiveDirective.prototype.wasActive;\n/**\n * *******\n * \\@property activeChange\n * \n * \\@description \n * An event emitter that emits when the active property is set to allow for 2way binding when the directive is\n * used with de-structured / de-sugared syntax.\n * \n * @type {?}\n */\nIfActiveDirective.prototype.activeChange;\n/** @type {?} */\nIfActiveDirective.prototype.ifActiveService;\n/** @type {?} */\nIfActiveDirective.prototype.id;\n/** @type {?} */\nIfActiveDirective.prototype.template;\n/** @type {?} */\nIfActiveDirective.prototype.container;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable, InjectionToken} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\nlet /** @type {?} */ activeCounter = 0;\n\nexport const /** @type {?} */ IF_ACTIVE_ID = new InjectionToken<number>(\"IF_ACTIVE_ID\");\n/**\n * @return {?}\n */\nexport function tokenFactory() {\n    return ++activeCounter;\n}\n\nexport const /** @type {?} */ IF_ACTIVE_ID_PROVIDER = {\n    provide: IF_ACTIVE_ID,\n    useFactory: tokenFactory\n};\n/**\n * ******\n * \\@class IfActiveService\n * \n * \\@description \n * An injectable service used by IfActive structural directives and the components that implement IfActive in their\n * templates. It holds the value of the current state and provides an Observable that both the directive and the\n * implementing component can subscribe to in order to take action on current value changes.\n * \n */\nexport class IfActiveService {\n/**\n * *****\n * \\@property _currentChange\n * \n * \\@description \n * A RXJS Subject that updates and provides subscriptions to for the current current state of a component template\n * implemting the IfActive structural directive.\n * \n */\nprivate _currentChange: Subject<number> = new Subject<number>();\n/**\n * ******\n * \\@property _current\n * \n * \\@description \n * A property holding the current value for current/closed state of an IfActive structural directive.\n * \n */\nprivate _current: number;\n/**\n * ******\n * \\@function currentChange\n * \n * \\@description \n * A getter function that provides an observable for the _current Subject.\n * \n * @return {?}\n */\npublic get currentChange(): Observable<number> {\n        return this._currentChange.asObservable();\n    }\n/**\n * ******\n * \\@function current\n * \n * \\@description \n * A setter function that updates the current state of _current for this instance of IfActive structural directive.\n * And, broadcasts the new value to all subscribers.\n * \n * @param {?} value\n * @return {?}\n */\npublic set current(value: number) {\n        if (this._current !== value) {\n            this._current = value;\n            this._currentChange.next(value);\n        }\n    }\n/**\n * ******\n * \n * \\@function current\n * \n * \\@description \n * A getter that returns the current value of this IfActive instance.\n * @return {?}\n */\npublic get current(): number {\n        return this._current;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction IfActiveService_tsickle_Closure_declarations() {\n/** @type {?} */\nIfActiveService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIfActiveService.ctorParameters;\n/**\n * *****\n * \\@property _currentChange\n * \n * \\@description \n * A RXJS Subject that updates and provides subscriptions to for the current current state of a component template\n * implemting the IfActive structural directive.\n * \n * @type {?}\n */\nIfActiveService.prototype._currentChange;\n/**\n * ******\n * \\@property _current\n * \n * \\@description \n * A property holding the current value for current/closed state of an IfActive structural directive.\n * \n * @type {?}\n */\nIfActiveService.prototype._current;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\n\nimport {NgModule} from '@angular/core';\nimport {ClrDatagridModule} from './datagrid/datagrid.module';\nimport {ClrStackViewModule} from './stack-view/stack-view.module';\nimport {ClrTreeViewModule} from './tree-view/tree-view.module';\nexport class ClrDataModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{exports: [ClrDatagridModule, ClrStackViewModule, ClrTreeViewModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrDataModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrDataModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrDataModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {ClrFormsModule} from '../../forms/forms.module';\nimport {ClrIconModule} from '../../icon/icon.module';\nimport {ClrIfExpandModule} from '../../utils/expand/if-expand.module';\n\nimport {TREE_VIEW_DIRECTIVES} from './index';\nexport class ClrTreeViewModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrIconModule, FormsModule, ClrFormsModule],\n    declarations: [TREE_VIEW_DIRECTIVES],\n    exports: [TREE_VIEW_DIRECTIVES, ClrIfExpandModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrTreeViewModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrTreeViewModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrTreeViewModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {TreeNode} from './tree-node';\n\nexport {TreeNode} from './tree-node';\n\nexport const /** @type {?} */ TREE_VIEW_DIRECTIVES: Type<any>[] = [TreeNode];\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {Component, EventEmitter, Input, OnDestroy, Optional, Output, SkipSelf} from '@angular/core';\n\nimport {Expand} from '../../utils/expand/providers/expand';\nimport {LoadingListener} from '../../utils/loading/loading-listener';\n\nimport {AbstractTreeSelection} from './abstract-tree-selection';\nimport {clrTreeSelectionProviderFactory} from './providers/tree-selection.provider';\nimport {TreeSelectionService} from './providers/tree-selection.service';\nexport class TreeNode extends AbstractTreeSelection implements OnDestroy {\n/**\n * @param {?} nodeExpand\n * @param {?} parent\n * @param {?} treeSelectionService\n */\nconstructor(public nodeExpand: Expand,\npublic parent: TreeNode,\npublic treeSelectionService: TreeSelectionService) {\n        super(parent);\n        if (this.parent) {\n            this.parent.register(this);\n        }\n    }\nprivate _children: TreeNode[] = [];\n/**\n * @return {?}\n */\nget children(): TreeNode[] {\n        return this._children;\n    }\n/**\n * @param {?} node\n * @return {?}\n */\ncheckIfChildNodeRegistered(node: TreeNode): boolean {\n        return (this.children.indexOf(node) > -1);\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nregister(node: TreeNode): void {\n        if (!this.checkIfChildNodeRegistered(node)) {\n            this.children.push(node);\n            if (this.selectable) {\n                if (this.selected) {\n                    node.parentChanged(this.selected);\n                }\n            }\n        }\n    }\n/**\n * @param {?} node\n * @return {?}\n */\nunregister(node: TreeNode): void {\n        const /** @type {?} */ index = this.children.indexOf(node);\n        if (index > -1) {\n            this.children.splice(index, 1);\n        }\n    }\n/**\n * @return {?}\n */\nactivateSelection(): void {\n        if (this.treeSelectionService && !this.treeSelectionService.selectable) {\n            this.treeSelectionService.selectable = true;\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set nodeSelected(value: boolean) {\n        // required for recursive trees to discard unset inputs.\n        this.activateSelection();\n        if (value === undefined || value === null) {\n            return;\n        }\n        if (this.selected !== value) {\n            this.selected = value;\n        }\n    }\n\n     nodeSelectedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n/**\n * @return {?}\n */\nselectedChanged(): void {\n        this.nodeSelectedChange.emit(this.selected);\n    }\n/**\n * @return {?}\n */\nget selectable(): boolean {\n        if (this.treeSelectionService) {\n            return this.treeSelectionService.selectable;\n        }\n        return false;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset nodeIndeterminate(value: boolean) {\n        this.indeterminate = value;\n        this.activateSelection();\n    }\n\n     nodeIndeterminateChanged: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n/**\n * @return {?}\n */\nindeterminateChanged(): void {\n        this.nodeIndeterminateChanged.emit(this.indeterminate);\n    }\n/**\n * @return {?}\n */\ntoggleExpand(): void {\n        this.nodeExpand.expanded = !this.nodeExpand.expanded;\n    }\n/**\n * @return {?}\n */\npublic get caretDirection(): string {\n        return (this.nodeExpand.expanded) ? \"down\" : \"right\";\n    }\n/**\n * @return {?}\n */\nget expanded(): boolean {\n        return this.nodeExpand.expanded;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset expanded(value: boolean) {\n        value = !!value;\n        if (this.nodeExpand.expanded !== value) {\n            this.nodeExpand.expanded = value;\n        }\n    }\n/**\n * @return {?}\n */\nget state(): string {\n        return (this.expanded && !this.nodeExpand.loading) ? \"expanded\" : \"collapsed\";\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        if (this.parent) {\n            this.parent.unregister(this);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-tree-node\",\n    template: `\n      <div class=\"clr-tree-node-content-container\">\n          <button\n              type=\"button\"\n              class=\"clr-treenode-caret\"\n              (click)=\"toggleExpand()\"\n              *ngIf=\"nodeExpand.expandable && !nodeExpand.loading\">\n              <clr-icon\n                  class=\"clr-treenode-caret-icon\"\n                  shape=\"caret\"\n                  [attr.dir]=\"caretDirection\"></clr-icon>\n          </button>\n          <div class=\"clr-treenode-spinner-container\" *ngIf=\"nodeExpand.expandable && nodeExpand.loading\">\n              <span class=\"clr-treenode-spinner spinner\">\n                  Loading...\n              </span>\n          </div>\n          <clr-checkbox\n              class=\"clr-treenode-checkbox\"\n              *ngIf=\"selectable\"\n              [(ngModel)]=\"selected\"\n              [(clrIndeterminate)]=\"indeterminate\"></clr-checkbox>\n          <div class=\"clr-treenode-content\">\n              <ng-content></ng-content>\n          </div>\n      </div>\n      <!-- FIXME: remove this string concatenation when boolean states are supported -->\n      <div\n          class=\"clr-treenode-children\"\n          [@childNodesState]=\"state\">\n          <ng-content select=\"clr-tree-node\"></ng-content>\n          <ng-content select=\"[clrIfExpanded]\"></ng-content>\n      </div>\n    `,\n    providers: [\n        Expand, {provide: LoadingListener, useExisting: Expand}, {\n            provide: TreeSelectionService,\n            useFactory: clrTreeSelectionProviderFactory,\n            deps: [[new Optional(), new SkipSelf(), TreeSelectionService]]\n        }\n    ],\n    animations: [trigger(\"childNodesState\",\n                         [\n                             state(\"expanded\", style({\"height\": \"*\", \"overflow-y\": \"hidden\"})),\n                             state(\"collapsed\", style({\"height\": 0, \"overflow-y\": \"hidden\"})),\n                             transition(\"expanded <=> collapsed\", animate(\"0.2s ease-in-out\"))\n                         ])],\n    host: {\"class\": \".clr-tree-node\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Expand, },\n{type: TreeNode, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n{type: TreeSelectionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'nodeSelected': [{ type: Input, args: [\"clrSelected\", ] },],\n'nodeSelectedChange': [{ type: Output, args: [\"clrSelectedChange\", ] },],\n'nodeIndeterminate': [{ type: Input, args: [\"clrIndeterminate\", ] },],\n'nodeIndeterminateChanged': [{ type: Output, args: [\"clrIndeterminateChange\", ] },],\n};\n}\n\nfunction TreeNode_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeNode.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeNode.ctorParameters;\n/** @type {?} */\nTreeNode.propDecorators;\n/** @type {?} */\nTreeNode.prototype._children;\n/** @type {?} */\nTreeNode.prototype.nodeSelectedChange;\n/** @type {?} */\nTreeNode.prototype.nodeIndeterminateChanged;\n/** @type {?} */\nTreeNode.prototype.nodeExpand;\n/** @type {?} */\nTreeNode.prototype.parent;\n/** @type {?} */\nTreeNode.prototype.treeSelectionService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {TreeSelectionService} from './tree-selection.service';\n/**\n * @param {?} existing\n * @return {?}\n */\nexport function clrTreeSelectionProviderFactory(existing: TreeSelectionService) {\n    return existing || new TreeSelectionService();\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\nexport class TreeSelectionService { selectable: boolean = false; static decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TreeSelectionService_tsickle_Closure_declarations() {\n/** @type {?} */\nTreeSelectionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTreeSelectionService.ctorParameters;\n/** @type {?} */\nTreeSelectionService.prototype.selectable;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @abstract\n */\nexport abstract class AbstractTreeSelection {\n/**\n * @param {?} parent\n */\nconstructor(public parent: AbstractTreeSelection) {}\n/**\n * @abstract\n * @return {?}\n */\nchildren() {}\n/**\n * @abstract\n * @return {?}\n */\nselectedChanged() {}\n/**\n * @abstract\n * @return {?}\n */\nindeterminateChanged() {}\nprivate _selected: boolean = false;\nprivate _indeterminate: boolean = false;\n/**\n * @return {?}\n */\npublic get selected(): boolean {\n        return this._selected;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set selected(value: boolean) {\n        this._selected = value;\n        this.indeterminate = false;\n        this.children.forEach(child => child.parentChanged(value));\n        if (this.parent) {\n            this.parent.childChanged();\n        }\n        this.selectedChanged();\n    }\n/**\n * @return {?}\n */\npublic get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set indeterminate(value: boolean) {\n        value = !!value;\n        if (this._indeterminate !== value) {\n            this._indeterminate = value;\n            this.indeterminateChanged();\n        }\n    }\n/**\n * @return {?}\n */\nchildChanged(): void {\n        let /** @type {?} */ oneSelectedChild = false;\n        const /** @type {?} */ previousSelectedValue: boolean = this._selected;\n        const /** @type {?} */ previousIndeterminateValue: boolean = this._indeterminate;\n        this._selected = true;\n        this._indeterminate = false;\n\n        for (const /** @type {?} */ child of this.children) {\n            if (child.indeterminate) {\n                this._selected = false;\n                this._indeterminate = true;\n                break;\n            }\n            if (child.selected) {\n                oneSelectedChild = true;\n                if (this._selected === false) {\n                    this._indeterminate = true;\n                    break;\n                }\n            } else {\n                this._selected = false;\n                if (oneSelectedChild) {\n                    this._indeterminate = true;\n                    break;\n                }\n            }\n        }\n\n        if (this.parent &&\n            (this._selected !== previousSelectedValue || this._indeterminate !== previousIndeterminateValue)) {\n            this.parent.childChanged();\n        }\n\n        if (this.selected !== previousSelectedValue) {\n            this.selectedChanged();\n        }\n\n        if (this.indeterminate !== previousIndeterminateValue) {\n            this.indeterminateChanged();\n        }\n    }\n/**\n * @param {?} selected\n * @return {?}\n */\nparentChanged(selected: boolean) {\n        if (selected && !this.selected) {\n            this._selected = true;\n            this.indeterminate = false;\n            this.children.forEach(child => child.parentChanged(true));\n            this.selectedChanged();\n        }\n        if (!selected && (this.selected || this.indeterminate)) {\n            this._selected = false;\n            this.indeterminate = false;\n            this.children.forEach(child => child.parentChanged(false));\n            this.selectedChanged();\n        }\n    }\n}\n\nfunction AbstractTreeSelection_tsickle_Closure_declarations() {\n/** @type {?} */\nAbstractTreeSelection.prototype._selected;\n/** @type {?} */\nAbstractTreeSelection.prototype._indeterminate;\n/** @type {?} */\nAbstractTreeSelection.prototype.parent;\n}\n\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {STACK_VIEW_DIRECTIVES} from './index';\nexport class ClrStackViewModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: [CommonModule, FormsModule], declarations: [STACK_VIEW_DIRECTIVES], exports: [STACK_VIEW_DIRECTIVES]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrStackViewModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrStackViewModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrStackViewModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\n\nimport {StackBlock} from './stack-block';\nimport {StackHeader} from './stack-header';\nimport {StackInput} from './stack-input';\nimport {StackSelect} from './stack-select';\nimport {StackView, StackViewCustomTags} from './stack-view';\n\nexport {StackView,StackViewCustomTags} from './stack-view';\nexport {StackHeader} from './stack-header';\nexport {StackBlock} from './stack-block';\nexport {StackInput} from './stack-input';\nexport {StackSelect} from './stack-select';\n\nexport const /** @type {?} */ STACK_VIEW_DIRECTIVES: Type<any>[] = [\n    StackView, StackHeader, StackBlock, StackViewCustomTags,\n    /**\n     * Undocumented experimental feature: inline editing.\n     */\n    StackInput, StackSelect\n    /**\n     * End of undocumented experimental feature.\n     */\n];","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: Offer a a way to customize the value displayed, plain value may be unreadable.\n */\n\n\nimport {Component} from '@angular/core';\nimport {StackControl} from './stack-control';\nimport {StackView} from './stack-view';\nexport class StackSelect extends StackControl {\n/**\n * @param {?} stackView\n */\nconstructor(public stackView: StackView) {\n        super(stackView);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-stack-select\",\n    inputs: [\"model: clrModel\"],\n    outputs: [\"modelChange: clrModelChange\"],\n    template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <div class=\"select\" *ngIf=\"stackView.editing\" >\n            <select [(ngModel)]=\"model\">\n                <ng-content></ng-content>\n            </select>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: StackView, },\n];\n}\n\nfunction StackSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nStackSelect.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStackSelect.ctorParameters;\n/** @type {?} */\nStackSelect.prototype.stackView;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: support more types of inputs: checkbox, radio, ...\n * TODO: Mirror input attributes from the host to the actual input: size, min, max, placeholder, ...\n */\n\n\nimport {Component} from '@angular/core';\nimport {StackControl} from './stack-control';\nimport {StackView} from './stack-view';\nexport class StackInput extends StackControl {\n    type: string = \"text\";\n/**\n * @param {?} stackView\n */\nconstructor(public stackView: StackView) {\n        super(stackView);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-stack-input\",\n    inputs: [\"model: clrModel\", \"type\"],\n    outputs: [\"modelChange: clrModelChange\"],\n    template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <input [type]=\"type\" *ngIf=\"stackView.editing\" [(ngModel)]=\"model\"/>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: StackView, },\n];\n}\n\nfunction StackInput_tsickle_Closure_declarations() {\n/** @type {?} */\nStackInput.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStackInput.ctorParameters;\n/** @type {?} */\nStackInput.prototype.type;\n/** @type {?} */\nStackInput.prototype.stackView;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n */\n\n\nimport {EventEmitter} from '@angular/core';\nimport {StackView} from './stack-view';\nexport class StackControl {\n    model: any;\n    modelChange: EventEmitter<any> = new EventEmitter<any>(false);\n/**\n * @param {?} stackView\n */\nconstructor(protected stackView: StackView) {\n        // Make the StackView editable, since it contains a StackControl\n        this.stackView.editable = true;\n        this.stackView.editingChange.subscribe((editing: boolean) => {\n            // Edit mode was closed\n            if (!editing) {\n                this.modelChange.emit(this.model);\n            }\n        });\n    }\n}\n\nfunction StackControl_tsickle_Closure_declarations() {\n/** @type {?} */\nStackControl.prototype.model;\n/** @type {?} */\nStackControl.prototype.modelChange;\n/** @type {?} */\nStackControl.prototype.stackView;\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component} from '@angular/core';\nimport {StackView} from './stack-view';\nexport class StackHeader {\n/**\n * @param {?} stackView\n */\nconstructor(public stackView: StackView) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-stack-header\",\n    template: `\n        <h4 class=\"stack-header\">\n            <span class=\"stack-title\"><ng-content></ng-content></span>\n            \n            <span class=\"stack-actions\">\n                <ng-content select=\".stack-action\"></ng-content>\n                <!-- Undocumented experimental feature: inline editing. -->\n                <button *ngIf=\"stackView.editable\" class=\"stack-action btn btn-sm btn-link\" \n                        (click)=\"stackView.editing = !stackView.editing\" type=\"button\">\n                        Edit\n                </button>\n                <!-- End of undocumented experimental feature. -->\n            </span>\n        </h4>\n    `,\n    // Custom elements are inline by default\n    styles: [`\n        :host { display: block; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: StackView, },\n];\n}\n\nfunction StackHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nStackHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStackHeader.ctorParameters;\n/** @type {?} */\nStackHeader.prototype.stackView;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, Directive, EventEmitter, Output} from '@angular/core';\nexport class StackView {\n/**\n * Undocumented experimental feature: inline editing.\n */\neditable: boolean = false;\n\n     save: EventEmitter<void> = new EventEmitter<void>(false);\nprivate _editMode: boolean = false;\n\n    editingChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n/**\n * @return {?}\n */\nget editing(): boolean {\n        return this.editable && this._editMode;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset editing(value: boolean) {\n        if (this.editable) {\n            this._editMode = value;\n            this.editingChange.emit(value);\n            if (!value) {\n                this.save.emit(null);\n            }\n        }\n    }\n/**\n * End of undocumented experimental feature.\n */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-stack-view\",\n    template: `\n        <ng-content select=\"clr-stack-header\"></ng-content>\n        <dl class=\"stack-view\"><ng-content></ng-content></dl>\n    `,\n    // Custom elements are inline by default.\n    styles: [`\n        :host { display: block; }\n    `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'save': [{ type: Output, args: [\"clrStackSave\", ] },],\n};\n}\n\nfunction StackView_tsickle_Closure_declarations() {\n/**\n * End of undocumented experimental feature.\n * @type {?}\n */\nStackView.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStackView.ctorParameters;\n/** @type {?} */\nStackView.propDecorators;\n/**\n * Undocumented experimental feature: inline editing.\n * @type {?}\n */\nStackView.prototype.editable;\n/** @type {?} */\nStackView.prototype.save;\n/** @type {?} */\nStackView.prototype._editMode;\n/** @type {?} */\nStackView.prototype.editingChange;\n}\n\nexport class StackViewCustomTags {\n    // No behavior\n    // The only purpose is to \"declare\" the tag in Angular\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-stack-label, clr-stack-content\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StackViewCustomTags_tsickle_Closure_declarations() {\n/** @type {?} */\nStackViewCustomTags.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStackViewCustomTags.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {Component, EventEmitter, HostBinding, Input, OnInit, Optional, Output, SkipSelf} from '@angular/core';\nexport class StackBlock implements OnInit {\n      expanded: boolean = false;\n     expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n      expandable: boolean = false;\nprivate _changedChildren: number = 0;\nprivate _fullyInitialized: boolean = false;\nprivate _changed: boolean = false;\n/**\n * @return {?}\n */\nget getChangedValue(): boolean {\n        return this._changed || (this._changedChildren > 0 && !this.expanded);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset setChangedValue(value: boolean) {\n        this._changed = value;\n\n        if (this.parent && this._fullyInitialized) {\n            if (value) {\n                this.parent._changedChildren++;\n            } else {\n                this.parent._changedChildren--;\n            }\n        }\n    }\n/**\n * @param {?} parent\n */\nconstructor(\nprivate parent: StackBlock) {\n        if (parent) {\n            parent.addChild();\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit(): void {\n        // in order to access the parent StackBlock's properties,\n        // the child StackBlock  has to be fully initialized at first.\n        this._fullyInitialized = true;\n    }\n/**\n * @return {?}\n */\naddChild(): void {\n        this.expandable = true;\n    }\n/**\n * @return {?}\n */\ntoggleExpand(): void {\n        if (this.expandable) {\n            this.expanded = !this.expanded;\n            this.expandedChange.emit(this.expanded);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-stack-block\",\n    template: `\n        <dt class=\"stack-block-label\" (click)=\"toggleExpand()\">\n            <ng-content select=\"clr-stack-label\"></ng-content>\n        </dt>\n        <dd class=\"stack-block-content\">\n            <ng-content></ng-content>\n        </dd>\n        <!-- FIXME: remove this string concatenation when boolean states are supported -->\n        <div [@collapse]=\"''+!expanded\" class=\"stack-children\">\n            <ng-content select=\"clr-stack-block\"></ng-content>\n        </div>\n    `,\n    // Custom elements are inline by default\n    styles: [`\n        :host { display: block; }\n    `],\n    // Make sure the host has the proper class for styling purposes\n    host: {\"[class.stack-block]\": \"true\"},\n    animations:\n        [trigger(\"collapse\",\n                 [\n                     state(\"true\", style({\"height\": 0, \"overflow-y\": \"hidden\"})),\n                     transition(\"true => false\",\n                                [animate(\"0.2s ease-in-out\", style({\"height\": \"*\", \"overflow-y\": \"hidden\"}))]),\n                     transition(\"false => true\",\n                                [style({\"height\": \"*\", \"overflow-y\": \"hidden\"}), animate(\"0.2s ease-in-out\")])\n                 ])]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: StackBlock, decorators: [{ type: SkipSelf }, { type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expanded': [{ type: HostBinding, args: [\"class.stack-block-expanded\", ] },{ type: Input, args: [\"clrSbExpanded\", ] },],\n'expandedChange': [{ type: Output, args: [\"clrSbExpandedChange\", ] },],\n'expandable': [{ type: HostBinding, args: [\"class.stack-block-expandable\", ] },{ type: Input, args: [\"clrSbExpandable\", ] },],\n'getChangedValue': [{ type: HostBinding, args: [\"class.stack-block-changed\", ] },],\n'setChangedValue': [{ type: Input, args: [\"clrSbNotifyChange\", ] },],\n};\n}\n\nfunction StackBlock_tsickle_Closure_declarations() {\n/** @type {?} */\nStackBlock.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStackBlock.ctorParameters;\n/** @type {?} */\nStackBlock.propDecorators;\n/** @type {?} */\nStackBlock.prototype.expanded;\n/** @type {?} */\nStackBlock.prototype.expandedChange;\n/** @type {?} */\nStackBlock.prototype.expandable;\n/** @type {?} */\nStackBlock.prototype._changedChildren;\n/** @type {?} */\nStackBlock.prototype._fullyInitialized;\n/** @type {?} */\nStackBlock.prototype._changed;\n/** @type {?} */\nStackBlock.prototype.parent;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {ClrFormsModule} from '../../forms/forms.module';\nimport {ClrIconModule} from '../../icon/icon.module';\nimport {ClrCommonPopoverModule} from '../../popover/common/popover.module';\nimport {ClrIfExpandModule} from '../../utils/expand/if-expand.module';\nimport {ClrLoadingModule} from '../../utils/loading/loading.module';\nimport {ClrOutsideClickModule} from '../../utils/outside-click/outside-click.module';\n\nimport {DATAGRID_DIRECTIVES} from './index';\nexport class ClrDatagridModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule, ClrIconModule, ClrFormsModule, FormsModule, ClrCommonPopoverModule, ClrLoadingModule,\n        ClrOutsideClickModule\n    ],\n    declarations: [\n        DATAGRID_DIRECTIVES,\n    ],\n    exports: [DATAGRID_DIRECTIVES, ClrIfExpandModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrDatagridModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrDatagridModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrDatagridModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\n\nimport {DatagridRowExpandAnimation} from './animation-hack/row-expand-animation';\nimport {DatagridStringFilter} from './built-in/filters/datagrid-string-filter';\nimport {ActionableOompaLoompa} from './chocolate/actionable-oompa-loompa';\nimport {DatagridWillyWonka} from './chocolate/datagrid-willy-wonka';\nimport {ExpandableOompaLoompa} from './chocolate/expandable-oompa-loompa';\nimport {Datagrid} from './datagrid';\nimport {DatagridActionBar} from './datagrid-action-bar';\nimport {DatagridActionOverflow} from './datagrid-action-overflow';\nimport {DatagridCell} from './datagrid-cell';\nimport {DatagridColumn} from './datagrid-column';\nimport {DatagridColumnToggle} from './datagrid-column-toggle';\nimport {DatagridDetailRegisterer} from './datagrid-detail-registerer';\nimport {DatagridFilter} from './datagrid-filter';\nimport {DatagridFooter} from './datagrid-footer';\nimport {DatagridHideableColumnDirective} from './datagrid-hidable-column.directive';\nimport {DatagridItems} from './datagrid-items';\nimport {DatagridPagination} from './datagrid-pagination';\nimport {DatagridPlaceholder} from './datagrid-placeholder';\nimport {DatagridRow} from './datagrid-row';\nimport {DatagridRowDetail} from './datagrid-row-detail';\nimport {DatagridBodyRenderer} from './render/body-renderer';\nimport {DatagridCellRenderer} from './render/cell-renderer';\nimport {DatagridColumnResizer} from './render/column-resizer';\nimport {DatagridHeadRenderer} from './render/head-renderer';\nimport {DatagridHeaderRenderer} from './render/header-renderer';\nimport {DatagridMainRenderer} from './render/main-renderer';\nimport {DatagridRowRenderer} from './render/row-renderer';\nimport {DatagridTableRenderer} from './render/table-renderer';\n\n\nexport {Datagrid} from './datagrid';\nexport {DatagridActionBar} from './datagrid-action-bar';\nexport {DatagridActionOverflow} from './datagrid-action-overflow';\nexport {DatagridColumn} from './datagrid-column';\nexport {DatagridColumnToggle} from './datagrid-column-toggle';\nexport {DatagridHideableColumnDirective} from './datagrid-hidable-column.directive';\nexport {DatagridFilter} from './datagrid-filter';\nexport {DatagridItems} from './datagrid-items';\nexport {DatagridRow} from './datagrid-row';\nexport {DatagridRowDetail} from './datagrid-row-detail';\nexport {DatagridCell} from './datagrid-cell';\nexport {DatagridFooter} from './datagrid-footer';\nexport {DatagridPagination} from './datagrid-pagination';\nexport {DatagridPlaceholder} from './datagrid-placeholder';\n\nexport {State} from './interfaces/state';\nexport {SortOrder} from './interfaces/sort-order';\nexport {Filter} from './interfaces/filter';\nexport {StringFilter} from './interfaces/string-filter';\nexport {Comparator} from './interfaces/comparator';\n\nexport {DatagridStringFilter} from './built-in/filters/datagrid-string-filter';\nexport {DatagridPropertyStringFilter} from './built-in/filters/datagrid-property-string-filter';\nexport {DatagridPropertyComparator} from './built-in/comparators/datagrid-property-comparator';\n\nexport const /** @type {?} */ DATAGRID_DIRECTIVES: Type<any>[] = [\n    // Core\n    Datagrid, DatagridActionBar, DatagridActionOverflow, DatagridColumn, DatagridColumnToggle,\n    DatagridHideableColumnDirective, DatagridFilter, DatagridItems, DatagridRow, DatagridRowDetail,\n    DatagridDetailRegisterer, DatagridCell, DatagridFooter, DatagridPagination, DatagridPlaceholder,\n\n    // Renderers\n    DatagridMainRenderer, DatagridTableRenderer, DatagridHeadRenderer, DatagridHeaderRenderer, DatagridBodyRenderer,\n    DatagridColumnResizer, DatagridRowRenderer, DatagridCellRenderer,\n\n    // Chocolate\n    DatagridWillyWonka, ActionableOompaLoompa, ExpandableOompaLoompa,\n\n    // Animation hack\n    DatagridRowExpandAnimation,\n\n    // Built-in shortcuts\n    DatagridStringFilter\n];\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, ElementRef, OnDestroy, Renderer2, TemplateRef, ViewChild, ViewContainerRef} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {COMPUTE_WIDTH_CLASS, NO_LAYOUT_CLASS} from './constants';\nimport {DatagridRenderOrganizer} from './render-organizer';\nexport class DatagridTableRenderer implements OnDestroy {\n/**\n * @param {?} el\n * @param {?} renderer\n * @param {?} organizer\n */\nconstructor(private el: ElementRef,\nprivate renderer: Renderer2, organizer: DatagridRenderOrganizer) {\n        this.subscriptions.push(organizer.tableMode.subscribe(on => this.tableMode(on)));\n        this.subscriptions.push(organizer.noLayout.subscribe(on => this.noLayout(on)));\n    }\nprivate subscriptions: Subscription[] = [];\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n\n     projected: TemplateRef<any>;\n     outsideContainer: ViewContainerRef;\n     insideContainer: ViewContainerRef;\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.outsideContainer.createEmbeddedView(this.projected);\n    }\n/**\n * @param {?} on\n * @return {?}\n */\nprivate tableMode(on: boolean) {\n        if (on) {\n            // We move stuff into the body before making it visible\n            this.insideContainer.insert(this.outsideContainer.detach(0), 0);\n            this.renderer.addClass(this.el.nativeElement, COMPUTE_WIDTH_CLASS);\n        } else {\n            // We make stuff invisible before moving it out of the body\n            this.renderer.removeClass(this.el.nativeElement, COMPUTE_WIDTH_CLASS);\n            this.outsideContainer.insert(this.insideContainer.detach(0), 0);\n        }\n    }\n/**\n * @param {?} on\n * @return {?}\n */\nprivate noLayout(on: boolean) {\n        if (on) {\n            this.renderer.addClass(this.el.nativeElement, NO_LAYOUT_CLASS);\n        } else {\n            this.renderer.removeClass(this.el.nativeElement, NO_LAYOUT_CLASS);\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-table-wrapper\",\n    template: `\n        <ng-template #head><ng-content select=\"[clrDgHead]\"></ng-content></ng-template>\n        <ng-container #outside></ng-container>\n        <div clrDgBody class=\"datagrid-body\">\n            <ng-container #inside></ng-container>\n            <ng-content></ng-content>\n        </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: DatagridRenderOrganizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'projected': [{ type: ViewChild, args: [\"head\", ] },],\n'outsideContainer': [{ type: ViewChild, args: [\"outside\", {read: ViewContainerRef}, ] },],\n'insideContainer': [{ type: ViewChild, args: [\"inside\", {read: ViewContainerRef}, ] },],\n};\n}\n\nfunction DatagridTableRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridTableRenderer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridTableRenderer.ctorParameters;\n/** @type {?} */\nDatagridTableRenderer.propDecorators;\n/** @type {?} */\nDatagridTableRenderer.prototype.subscriptions;\n/** @type {?} */\nDatagridTableRenderer.prototype.projected;\n/** @type {?} */\nDatagridTableRenderer.prototype.outsideContainer;\n/** @type {?} */\nDatagridTableRenderer.prototype.insideContainer;\n/** @type {?} */\nDatagridTableRenderer.prototype.el;\n/** @type {?} */\nDatagridTableRenderer.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {AfterContentInit, ContentChildren, Directive, OnDestroy, QueryList} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {DatagridCellRenderer} from './cell-renderer';\nimport {DatagridRenderOrganizer} from './render-organizer';\nexport class DatagridRowRenderer implements AfterContentInit, OnDestroy {\n/**\n * @param {?} organizer\n */\nconstructor(private organizer: DatagridRenderOrganizer) {\n        this.subscription = organizer.alignColumns.subscribe(() => this.setWidths());\n    }\nprivate subscription: Subscription;\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n\n     cells: QueryList<DatagridCellRenderer>;\n/**\n * @return {?}\n */\nprivate setWidths() {\n        if (this.organizer.widths.length !== this.cells.length) {\n            return;\n        }\n        this.cells.forEach((cell, index) => {\n            const /** @type {?} */ width = this.organizer.widths[index];\n            cell.setWidth(width.strict, width.px);\n        });\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this.cells.changes.subscribe(() => {\n            this.setWidths();\n        });\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.setWidths();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-dg-row, clr-dg-row-detail\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DatagridRenderOrganizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cells': [{ type: ContentChildren, args: [DatagridCellRenderer, ] },],\n};\n}\n\nfunction DatagridRowRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridRowRenderer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridRowRenderer.ctorParameters;\n/** @type {?} */\nDatagridRowRenderer.propDecorators;\n/** @type {?} */\nDatagridRowRenderer.prototype.subscription;\n/** @type {?} */\nDatagridRowRenderer.prototype.cells;\n/** @type {?} */\nDatagridRowRenderer.prototype.organizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n    AfterContentInit,\n    AfterViewChecked,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    Renderer2\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {Items} from '../providers/items';\nimport {Page} from '../providers/page';\n\nimport {DomAdapter} from './dom-adapter';\nimport {DatagridHeaderRenderer} from './header-renderer';\nimport {DatagridRenderOrganizer} from './render-organizer';\nexport class DatagridMainRenderer implements AfterContentInit, AfterViewChecked, OnDestroy {\n/**\n * @param {?} organizer\n * @param {?} items\n * @param {?} page\n * @param {?} domAdapter\n * @param {?} el\n * @param {?} renderer\n */\nconstructor(private organizer: DatagridRenderOrganizer,\nprivate items: Items,\nprivate page: Page,\nprivate domAdapter: DomAdapter,\nprivate el: ElementRef,\nprivate renderer: Renderer2) {\n        this._subscriptions.push(organizer.computeWidths.subscribe(() => this.computeHeadersWidth()));\n        this._subscriptions.push(this.page.sizeChange.subscribe(() => {\n            if (this._heightSet) {\n                this.resetDatagridHeight();\n            }\n        }));\n        this._subscriptions.push(this.items.change.subscribe(() => this.shouldStabilizeColumns = true));\n    }\npublic headers: QueryList<DatagridHeaderRenderer>;\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this._subscriptions.push(this.headers.changes.subscribe(() => {\n            // TODO: only re-stabilize if a column was added or removed. Reordering is fine.\n            this.columnsSizesStable = false;\n            this.stabilizeColumns();\n        }));\n    }\n/**\n * @return {?}\n */\nngAfterViewChecked() {\n        if (this.shouldStabilizeColumns) {\n            this.stabilizeColumns();\n        }\n        if (this.shouldComputeHeight()) {\n            setTimeout(() => {\n                this.computeDatagridHeight();\n            });\n        }\n    }\nprivate _heightSet: boolean = false;\n/**\n * @return {?}\n */\nprivate shouldComputeHeight(): boolean {\n        if (!this._heightSet && this.page.size > 0) {\n            if (this.items.displayed.length === this.page.size) {\n                return true;\n            }\n        }\n        return false;\n    }\n/**\n * Computes the height of the datagrid.\n * \n * NOTE: We had to choose to set the height instead of the min-height because\n * IE 11 requires the height on the parent for the children flex grow/shrink properties to work.\n * When we used min-height, 1 1 auto doesn't used to work in IE11 :-(\n * But this doesn't affect the fix. It works in both fixed & variable height datagrids.\n * \n * Refer: http://stackoverflow.com/questions/24396205/flex-grow-not-working-in-internet-explorer-11-0\n * @return {?}\n */\nprivate computeDatagridHeight() {\n        const /** @type {?} */ value: number = this.domAdapter.computedHeight(this.el.nativeElement);\n        this.renderer.setStyle(this.el.nativeElement, \"height\", value + \"px\");\n        this._heightSet = true;\n    }\n/**\n * @return {?}\n */\nprivate resetDatagridHeight() {\n        this.renderer.setStyle(this.el.nativeElement, \"height\", \"\");\n        this._heightSet = false;\n    }\nprivate _subscriptions: Subscription[] = [];\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._subscriptions.forEach(sub => sub.unsubscribe());\n    }\n/**\n * Makes each header compute its width.\n * @return {?}\n */\nprivate computeHeadersWidth() {\n        const /** @type {?} */ nbColumns: number = this.headers.length;\n        let /** @type {?} */ allStrict = true;\n\n        this.headers.forEach((header, index) => {\n\n            // On the last header column check whether all columns have strict widths.\n            // If all columns have strict widths, remove the strict width from the last column and make it the column's\n            // minimum width so that when all previous columns shrink, it will get a flexible width and cover the empty\n            // gap in the Datagrid.\n\n            if (!header.strictWidth) {\n                allStrict = false;\n            }\n\n            if (nbColumns === index + 1 && allStrict) {\n                delete header.strictWidth;\n            }\n\n            this.organizer.widths[index] = {px: header.computeWidth(), strict: !!header.strictWidth};\n        });\n\n        this.headers.forEach((header, index) => header.setWidth(this.organizer.widths[index].px));\n    }\n/**\n * Indicates if we want to re-compute columns width. This should only happen:\n * 1) When headers change, with columns being added or removed\n * 2) When rows are lazily loaded for the first time\n */\nprivate columnsSizesStable = false;\nprivate shouldStabilizeColumns = true;\n/**\n * Triggers a whole re-rendring cycle to set column sizes, if needed.\n * @return {?}\n */\nprivate stabilizeColumns() {\n        this.shouldStabilizeColumns = false;\n        if (this.columnsSizesStable) {\n            // change in items might have introduced/taken away the scrollbar\n\n            // FIXME: setTimeout is needed here because:\n            // When the user changes the page the following things happen:\n            // 1. The array which contains the items displayed is updated to contain the items on the new page.\n            // 2. An event is emitted which is subscribed to by the main renderer (this file) and this marks the\n            // shouldStabilizeColumns flag to true\n            // 3. While this is happening the datagrid is in the process of cleaning up the view. The view first\n            // renders the new displayed items and then cleans up the old items. But there is a point where the view\n            // contains the old items as well as the new items. So if the page size is 10 the view contains 20 items.\n            // This causes the datagrid body to overflow.\n            // Now since shouldStabilizeColumns was set to true, the scrollbar width is calculated\n            // and added to the datagrid header. Adding the setTimeout gives Angular time to clean up the view so that\n            // the scrollbar disappears.\n            // See this: https://github.com/angular/angular/issues/19094\n            // When the above issue is resolve, remove the setTimeout\n            setTimeout(() => {\n                this.organizer.scrollbar.next();\n            });\n            return;\n        }\n        // No point resizing if there are no rows, we wait until they are actually loaded.\n        if (this.items.displayed.length > 0) {\n            this.organizer.resize();\n            this.columnsSizesStable = true;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-datagrid\", providers: [DomAdapter]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DatagridRenderOrganizer, },\n{type: Items, },\n{type: Page, },\n{type: DomAdapter, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'headers': [{ type: ContentChildren, args: [DatagridHeaderRenderer, ] },],\n};\n}\n\nfunction DatagridMainRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridMainRenderer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridMainRenderer.ctorParameters;\n/** @type {?} */\nDatagridMainRenderer.propDecorators;\n/** @type {?} */\nDatagridMainRenderer.prototype.headers;\n/** @type {?} */\nDatagridMainRenderer.prototype._heightSet;\n/** @type {?} */\nDatagridMainRenderer.prototype._subscriptions;\n/**\n * Indicates if we want to re-compute columns width. This should only happen:\n * 1) When headers change, with columns being added or removed\n * 2) When rows are lazily loaded for the first time\n * @type {?}\n */\nDatagridMainRenderer.prototype.columnsSizesStable;\n/** @type {?} */\nDatagridMainRenderer.prototype.shouldStabilizeColumns;\n/** @type {?} */\nDatagridMainRenderer.prototype.organizer;\n/** @type {?} */\nDatagridMainRenderer.prototype.items;\n/** @type {?} */\nDatagridMainRenderer.prototype.page;\n/** @type {?} */\nDatagridMainRenderer.prototype.domAdapter;\n/** @type {?} */\nDatagridMainRenderer.prototype.el;\n/** @type {?} */\nDatagridMainRenderer.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, ElementRef, OnDestroy, Renderer2} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {DatagridColumnResizer} from './column-resizer';\nimport {STRICT_WIDTH_CLASS} from './constants';\nimport {DomAdapter} from './dom-adapter';\nimport {DatagridRenderOrganizer} from './render-organizer';\nexport class DatagridHeaderRenderer implements OnDestroy {\n/**\n * @param {?} el\n * @param {?} renderer\n * @param {?} organizer\n * @param {?} domAdapter\n * @param {?} columnResizer\n */\nconstructor(private el: ElementRef,\nprivate renderer: Renderer2,\nprivate organizer: DatagridRenderOrganizer,\nprivate domAdapter: DomAdapter,\nprivate columnResizer: DatagridColumnResizer) {\n        this.subscriptions.push(organizer.clearWidths.subscribe(() => this.clearWidth()));\n        this.subscriptions.push(organizer.detectStrictWidths.subscribe(() => this.detectStrictWidth()));\n    }\nprivate subscriptions: Subscription[] = [];\n/**\n * Indicates if the column has a strict width, so it doesn't shrink or expand based on the content.\n */\npublic strictWidth: number;\nprivate widthSet: boolean = false;\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n/**\n * @return {?}\n */\nprivate clearWidth() {\n        // remove the width only if we set it, and it is not changed by dragging.\n        if (this.widthSet && !this.columnResizer.columnResizeBy) {\n            this.renderer.setStyle(this.el.nativeElement, \"width\", null);\n        }\n    }\n/**\n * @return {?}\n */\nprivate detectStrictWidth() {\n        if (this.columnResizer.columnResizeBy) {\n            this.strictWidth = this.columnResizer.columnRectWidth + this.columnResizer.columnResizeBy;\n        } else {\n            this.strictWidth = this.domAdapter.userDefinedWidth(this.el.nativeElement);\n        }\n    }\n/**\n * @return {?}\n */\npublic computeWidth(): number {\n        let /** @type {?} */ width: number = this.strictWidth;\n        if (!width) {\n            width = this.domAdapter.scrollWidth(this.el.nativeElement);\n        }\n        return width;\n    }\n/**\n * @param {?} width\n * @return {?}\n */\npublic setWidth(width: number) {\n        if (this.strictWidth) {\n            if (this.columnResizer.columnResizeBy) {\n                this.renderer.setStyle(this.el.nativeElement, \"width\", width + \"px\");\n                this.columnResizer.columnResizeBy = 0;\n                this.widthSet = false;\n            }\n            this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n            // We don't actually set the width if there already is a user-defined one, we just add the class\n            return;\n        }\n        this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n        this.renderer.setStyle(this.el.nativeElement, \"width\", width + \"px\");\n        this.widthSet = true;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-dg-column\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: DatagridRenderOrganizer, },\n{type: DomAdapter, },\n{type: DatagridColumnResizer, },\n];\n}\n\nfunction DatagridHeaderRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridHeaderRenderer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridHeaderRenderer.ctorParameters;\n/** @type {?} */\nDatagridHeaderRenderer.prototype.subscriptions;\n/**\n * Indicates if the column has a strict width, so it doesn't shrink or expand based on the content.\n * @type {?}\n */\nDatagridHeaderRenderer.prototype.strictWidth;\n/** @type {?} */\nDatagridHeaderRenderer.prototype.widthSet;\n/** @type {?} */\nDatagridHeaderRenderer.prototype.el;\n/** @type {?} */\nDatagridHeaderRenderer.prototype.renderer;\n/** @type {?} */\nDatagridHeaderRenderer.prototype.organizer;\n/** @type {?} */\nDatagridHeaderRenderer.prototype.domAdapter;\n/** @type {?} */\nDatagridHeaderRenderer.prototype.columnResizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, ElementRef, OnDestroy, Renderer2} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {DatagridRenderOrganizer} from './render-organizer';\nexport class DatagridHeadRenderer implements OnDestroy {\n/**\n * @param {?} el\n * @param {?} renderer\n * @param {?} organizer\n */\nconstructor(private el: ElementRef,\nprivate renderer: Renderer2, organizer: DatagridRenderOrganizer) {\n        this.subscription = organizer.scrollbarWidth.subscribe(width => this.accountForScrollbar(width));\n    }\nprivate subscription: Subscription;\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n/**\n * @param {?} width\n * @return {?}\n */\nprivate accountForScrollbar(width: number) {\n        this.renderer.setStyle(this.el.nativeElement, \"padding-right\", width + \"px\");\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrDgHead]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: DatagridRenderOrganizer, },\n];\n}\n\nfunction DatagridHeadRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridHeadRenderer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridHeadRenderer.ctorParameters;\n/** @type {?} */\nDatagridHeadRenderer.prototype.subscription;\n/** @type {?} */\nDatagridHeadRenderer.prototype.el;\n/** @type {?} */\nDatagridHeadRenderer.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {AfterViewInit, Directive, ElementRef, EventEmitter, OnDestroy, Output, Renderer2} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {DragDispatcher} from '../providers/drag-dispatcher';\n\nimport {DomAdapter} from './dom-adapter';\nimport {DatagridRenderOrganizer} from './render-organizer';\nexport class DatagridColumnResizer implements AfterViewInit, OnDestroy {\n/**\n * @param {?} el\n * @param {?} renderer\n * @param {?} organizer\n * @param {?} domAdapter\n * @param {?} dragDispatcher\n */\nconstructor(private el: ElementRef,\nprivate renderer: Renderer2,\nprivate organizer: DatagridRenderOrganizer,\nprivate domAdapter: DomAdapter,\nprivate dragDispatcher: DragDispatcher) {\n        this.columnEl = el.nativeElement;\n    }\n\n    columnEl: any;\n    columnRectWidth: number;\n    columnResizeBy: number = 0;\n\n    handleTrackerEl: ElementRef;\n\n    pageStartPositionX: number;\n    dragDistancePositionX: number;  // relative to pageStartPosition\n\n    dragWithinMinWidth: boolean = false;\n\n    columnMinWidth: number;\n\n     resizeEmitter: EventEmitter<number> = new EventEmitter();\nprivate subscriptions: Subscription[] = [];\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.dragDispatcher.destroy();\n        this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.handleTrackerEl = this.dragDispatcher.handleTrackerRef.nativeElement;\n        this.dragDispatcher.addDragListener();\n        this.subscriptions.push(this.dragDispatcher.onDragStart.subscribe(() => this.dragStartHandler()));\n        this.subscriptions.push(this.dragDispatcher.onDragMove.subscribe(($event) => this.dragMoveHandler($event)));\n        this.subscriptions.push(this.dragDispatcher.onDragEnd.subscribe(() => this.dragEndHandler()));\n    }\n/**\n * @return {?}\n */\ndragStartHandler(): void {\n        if (!this.columnMinWidth) {\n            // sets the min width only on the very first drag attempt\n            this.columnMinWidth = this.domAdapter.minWidth(this.columnEl);\n        }\n        this.renderer.setStyle(this.handleTrackerEl, \"display\", \"block\");\n        this.renderer.setStyle(document.body, \"cursor\", \"col-resize\");\n        this.dragDistancePositionX = 0;\n        this.columnRectWidth = this.domAdapter.clientRectWidth(this.columnEl);\n        this.pageStartPositionX = this.domAdapter.clientRectRight(this.columnEl);\n    }\n/**\n * @param {?} moveEvent\n * @return {?}\n */\ndragMoveHandler(moveEvent: any): void {\n        const /** @type {?} */ pageMovePosition = moveEvent.pageX || moveEvent.changedTouches[0].pageX;\n        this.dragDistancePositionX = this.getPositionWithinMax(pageMovePosition - this.pageStartPositionX);\n        this.renderer.setStyle(this.handleTrackerEl, \"right\", -1 * this.dragDistancePositionX + \"px\");\n    }\n/**\n * @return {?}\n */\ndragEndHandler(): void {\n        this.renderer.setStyle(this.handleTrackerEl, \"right\", \"0px\");\n        this.renderer.setStyle(this.handleTrackerEl, \"display\", \"none\");\n        this.renderer.setStyle(document.body, \"cursor\", \"auto\");\n\n        if (this.dragDistancePositionX) {\n            this.columnResizeBy = this.dragDistancePositionX;\n\n            this.resizeEmitter.emit(this.columnRectWidth + this.columnResizeBy);\n\n            this.organizer.resize();\n        }\n    }\n/**\n * @param {?} draggedDistance\n * @return {?}\n */\ngetPositionWithinMax(draggedDistance: number): number {\n        if (draggedDistance < 0) {\n            if (Math.abs(draggedDistance) < this.columnRectWidth - this.columnMinWidth) {\n                if (this.dragWithinMinWidth) {\n                    this.dragWithinMinWidth = false;\n                    this.renderer.removeClass(this.handleTrackerEl, \"exceeded-max\");\n                }\n                return draggedDistance;\n            } else {\n                if (!this.dragWithinMinWidth) {\n                    this.dragWithinMinWidth = true;\n                    this.renderer.addClass(this.handleTrackerEl, \"exceeded-max\");\n                }\n                return this.columnMinWidth - this.columnRectWidth;\n            }\n\n        } else {\n            if (this.dragWithinMinWidth) {\n                this.dragWithinMinWidth = false;\n                this.renderer.removeClass(this.handleTrackerEl, \"exceeded-max\");\n            }\n\n            return draggedDistance;\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-dg-column\", providers: [DragDispatcher]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: DatagridRenderOrganizer, },\n{type: DomAdapter, },\n{type: DragDispatcher, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'resizeEmitter': [{ type: Output, args: [\"clrDgColumnResize\", ] },],\n};\n}\n\nfunction DatagridColumnResizer_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridColumnResizer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridColumnResizer.ctorParameters;\n/** @type {?} */\nDatagridColumnResizer.propDecorators;\n/** @type {?} */\nDatagridColumnResizer.prototype.columnEl;\n/** @type {?} */\nDatagridColumnResizer.prototype.columnRectWidth;\n/** @type {?} */\nDatagridColumnResizer.prototype.columnResizeBy;\n/** @type {?} */\nDatagridColumnResizer.prototype.handleTrackerEl;\n/** @type {?} */\nDatagridColumnResizer.prototype.pageStartPositionX;\n/** @type {?} */\nDatagridColumnResizer.prototype.dragDistancePositionX;\n/** @type {?} */\nDatagridColumnResizer.prototype.dragWithinMinWidth;\n/** @type {?} */\nDatagridColumnResizer.prototype.columnMinWidth;\n/** @type {?} */\nDatagridColumnResizer.prototype.resizeEmitter;\n/** @type {?} */\nDatagridColumnResizer.prototype.subscriptions;\n/** @type {?} */\nDatagridColumnResizer.prototype.el;\n/** @type {?} */\nDatagridColumnResizer.prototype.renderer;\n/** @type {?} */\nDatagridColumnResizer.prototype.organizer;\n/** @type {?} */\nDatagridColumnResizer.prototype.domAdapter;\n/** @type {?} */\nDatagridColumnResizer.prototype.dragDispatcher;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, ElementRef, OnDestroy, Renderer2} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {STRICT_WIDTH_CLASS} from './constants';\nimport {DatagridRenderOrganizer} from './render-organizer';\nexport class DatagridCellRenderer implements OnDestroy {\n/**\n * @param {?} el\n * @param {?} renderer\n * @param {?} organizer\n */\nconstructor(private el: ElementRef,\nprivate renderer: Renderer2, organizer: DatagridRenderOrganizer) {\n        this.subscription = organizer.clearWidths.subscribe(() => this.clearWidth());\n    }\nprivate subscription: Subscription;\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nprivate clearWidth() {\n        this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n        this.renderer.setStyle(this.el.nativeElement, \"width\", null);\n    }\n/**\n * @param {?} strict\n * @param {?} value\n * @return {?}\n */\npublic setWidth(strict: boolean, value: number) {\n        if (strict) {\n            this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n        } else {\n            this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n        }\n        this.renderer.setStyle(this.el.nativeElement, \"width\", value + \"px\");\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-dg-cell\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: DatagridRenderOrganizer, },\n];\n}\n\nfunction DatagridCellRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridCellRenderer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridCellRenderer.ctorParameters;\n/** @type {?} */\nDatagridCellRenderer.prototype.subscription;\n/** @type {?} */\nDatagridCellRenderer.prototype.el;\n/** @type {?} */\nDatagridCellRenderer.prototype.renderer;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const /** @type {?} */ NO_LAYOUT_CLASS = \"datagrid-no-layout\";\nexport const /** @type {?} */ COMPUTE_WIDTH_CLASS = \"datagrid-computing-columns-width\";\nexport const /** @type {?} */ STRICT_WIDTH_CLASS = \"datagrid-fixed-width\";\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, ElementRef, OnDestroy} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {DomAdapter} from './dom-adapter';\nimport {DatagridRenderOrganizer} from './render-organizer';\nexport class DatagridBodyRenderer implements OnDestroy {\n/**\n * @param {?} el\n * @param {?} organizer\n * @param {?} domAdapter\n */\nconstructor(private el: ElementRef,\nprivate organizer: DatagridRenderOrganizer,\nprivate domAdapter: DomAdapter) {\n        this.subscription = organizer.scrollbar.subscribe(() => this.computeScrollbarWidth());\n    }\nprivate subscription: Subscription;\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nprivate computeScrollbarWidth() {\n        this.organizer.scrollbarWidth.next(this.domAdapter.scrollBarWidth(this.el.nativeElement));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrDgBody]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: DatagridRenderOrganizer, },\n{type: DomAdapter, },\n];\n}\n\nfunction DatagridBodyRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridBodyRenderer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridBodyRenderer.ctorParameters;\n/** @type {?} */\nDatagridBodyRenderer.prototype.subscription;\n/** @type {?} */\nDatagridBodyRenderer.prototype.el;\n/** @type {?} */\nDatagridBodyRenderer.prototype.organizer;\n/** @type {?} */\nDatagridBodyRenderer.prototype.domAdapter;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {AfterContentInit, Component, ContentChildren, Input, OnDestroy, QueryList} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {Expand} from '../../utils/expand/providers/expand';\n\nimport {DatagridCell} from './datagrid-cell';\nimport {DatagridHideableColumn} from './datagrid-hideable-column';\nimport {HideableColumnService} from './providers/hideable-column.service';\nimport {RowActionService} from './providers/row-action-service';\nimport {Selection, SelectionType} from './providers/selection';\n/**\n * Generic bland container serving various purposes for Datagrid.\n * For instance, it can help span a text over multiple rows in detail view.\n */\nexport class DatagridRowDetail implements AfterContentInit, OnDestroy {\npublic SELECTION_TYPE = SelectionType;\n/**\n * @param {?} selection\n * @param {?} rowActionService\n * @param {?} expand\n * @param {?} hideableColumnService\n */\nconstructor(public selection: Selection,\npublic rowActionService: RowActionService,\npublic expand: Expand,\npublic hideableColumnService: HideableColumnService) {}\n\n     cells: QueryList<DatagridCell>;\n/**\n * @return {?}\n */\nget replace() {\n        return this.expand.replace;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset replace(value: boolean) {\n        this.expand.replace = !!value;\n    }\nprivate subscription: Subscription;\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        const /** @type {?} */ columnsList = this.hideableColumnService.getColumns();\n        this.updateCellsForColumns(columnsList);\n\n        // Triggered when the Cells list changes per row-renderer\n        this.cells.changes.subscribe((cellList) => {\n            const /** @type {?} */ columnList = this.hideableColumnService.getColumns();\n            if (cellList.length === columnList.length) {\n                this.updateCellsForColumns(columnList);\n            }\n        });\n\n        // Used to set things up the first time but only after all the columns are ready.\n        this.subscription = this.hideableColumnService.columnListChange.subscribe((columnList) => {\n            // Prevents cell updates when cols and cells array are not aligned\n            if (columnList.length === this.cells.length) {\n                this.updateCellsForColumns(columnList);\n            }\n        });\n    }\n/**\n * @param {?} columnList\n * @return {?}\n */\npublic updateCellsForColumns(columnList: DatagridHideableColumn[]) {\n        this.cells.forEach((cell, index) => {\n            const /** @type {?} */ currentColumn = columnList[index];  // Accounts for null space.\n            if (currentColumn) {\n                cell.id = currentColumn.id;\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-row-detail\",\n    template: `\n        <ng-container *ngIf=\"!replace\">\n            <clr-dg-cell class=\"datagrid-fixed-column\"\n                *ngIf=\"selection.selectionType === SELECTION_TYPE.Multi \n                    || selection.selectionType === SELECTION_TYPE.Single\"></clr-dg-cell>\n            <clr-dg-cell *ngIf=\"rowActionService.hasActionableRow\" class=\"datagrid-fixed-column\"></clr-dg-cell>\n            <clr-dg-cell class=\"datagrid-fixed-column\"></clr-dg-cell>\n        </ng-container>\n        <ng-content></ng-content>\n    `,\n    host: {\n        \"[class.datagrid-row-flex]\": \"true\",\n        \"[class.datagrid-row-detail]\": \"!replace\",\n        \"[class.datagrid-container]\": \"cells.length === 0\",\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Selection, },\n{type: RowActionService, },\n{type: Expand, },\n{type: HideableColumnService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cells': [{ type: ContentChildren, args: [DatagridCell, ] },],\n'replace': [{ type: Input, args: [\"clrDgReplace\", ] },],\n};\n}\n\nfunction DatagridRowDetail_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridRowDetail.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridRowDetail.ctorParameters;\n/** @type {?} */\nDatagridRowDetail.propDecorators;\n/** @type {?} */\nDatagridRowDetail.prototype.SELECTION_TYPE;\n/** @type {?} */\nDatagridRowDetail.prototype.cells;\n/** @type {?} */\nDatagridRowDetail.prototype.subscription;\n/** @type {?} */\nDatagridRowDetail.prototype.selection;\n/** @type {?} */\nDatagridRowDetail.prototype.rowActionService;\n/** @type {?} */\nDatagridRowDetail.prototype.expand;\n/** @type {?} */\nDatagridRowDetail.prototype.hideableColumnService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {Page} from './providers/page';\nexport class DatagridPagination implements OnDestroy, OnInit {\n/**\n * @param {?} page\n */\nconstructor(public page: Page) {\n        /*\n         * Default page size is 10.\n         * The reason we set it in this constructor and not in the provider itself is because\n         * we don't want pagination (page size 0) if this component isn't present in the datagrid.\n         */\n        page.size = 10;\n    }\n/**\n * *******\n * Subscription to the Page service for page changes.\n * Note: this only emits after the datagrid is initialized/stabalized and the page changes.\n * @return {?}\n */\nngOnInit() {\n        this._pageSubscription = this.page.change.subscribe(current => this.currentChanged.emit(current));\n    }\n/**\n * Subscription to the page service changes\n */\nprivate _pageSubscription: Subscription;\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._pageSubscription.unsubscribe();\n    }\n/**\n * Page size\n * @return {?}\n */\npublic get pageSize(): number {\n        return this.page.size;\n    }\n/**\n * @param {?} size\n * @return {?}\n */\npublic set pageSize(size: number) {\n        if (typeof size === \"number\") {\n            this.page.size = size;\n        }\n    }\n/**\n * Total items (needed to guess the last page)\n * @return {?}\n */\npublic get totalItems(): number {\n        return this.page.totalItems;\n    }\n/**\n * @param {?} total\n * @return {?}\n */\npublic set totalItems(total: number) {\n        if (typeof total === \"number\") {\n            this.page.totalItems = total;\n        }\n    }\n/**\n * Last page\n * @return {?}\n */\npublic get lastPage(): number {\n        return this.page.last;\n    }\n/**\n * @param {?} last\n * @return {?}\n */\npublic set lastPage(last: number) {\n        if (typeof last === \"number\") {\n            this.page.last = last;\n        }\n    }\n/**\n * Current page\n * @return {?}\n */\npublic get currentPage(): number {\n        return this.page.current;\n    }\n/**\n * @param {?} page\n * @return {?}\n */\npublic set currentPage(page: number) {\n        if (typeof page === \"number\") {\n            this.page.current = page;\n        }\n    }\n\n     currentChanged = new EventEmitter<number>(false);\n/**\n * Moves to the previous page if it exists\n * @return {?}\n */\npublic previous() {\n        this.page.previous();\n    }\n/**\n * Moves to the next page if it exists\n * @return {?}\n */\npublic next() {\n        this.page.next();\n    }\n/**\n * Index of the first item displayed on the current page, starting at 0\n * @return {?}\n */\npublic get firstItem(): number {\n        return this.page.firstItem;\n    }\n/**\n * Index of the last item displayed on the current page, starting at 0\n * @return {?}\n */\npublic get lastItem(): number {\n        return this.page.lastItem;\n    }\n/**\n * Conditionally adds page numbers before and after the current page\n * @return {?}\n */\npublic get middlePages(): number[] {\n        const /** @type {?} */ middlePages: number[] = [];\n        if (this.page.current > 1) {\n            middlePages.push(this.page.current - 1);\n        }\n        middlePages.push(this.page.current);\n        if (this.page.current < this.page.last) {\n            middlePages.push(this.page.current + 1);\n        }\n        return middlePages;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-pagination\",\n    template: `\n        <ul class=\"pagination\" *ngIf=\"page.last > 1\">\n            <li *ngIf=\"page.current > 1\">\n                <button \n                    class=\"pagination-previous\" \n                    (click)=\"page.previous()\"\n                    type=\"button\"></button>\n            </li>\n            <li *ngIf=\"page.current > 2\">\n                <button (click)=\"page.current = 1\" type=\"button\">1</button>\n            </li>\n            <li *ngIf=\"page.current > 3\">...</li>\n            <li *ngFor=\"let pageNum of middlePages\" [class.pagination-current]=\"pageNum === page.current\">\n                <button \n                    *ngIf=\"pageNum !== page.current; else noButton\" \n                    (click)=\"page.current = pageNum\"\n                    type=\"button\">{{pageNum}}</button>\n                <ng-template #noButton>{{pageNum}}</ng-template>\n            </li>\n            <li *ngIf=\"page.current < page.last - 2\">...</li>\n            <li *ngIf=\"page.current < page.last - 1\">\n                <button \n                    (click)=\"page.current = page.last\"\n                    type=\"button\">{{page.last}}</button>\n            </li>\n            <li *ngIf=\"page.current < page.last\">\n                <button \n                    class=\"pagination-next\" \n                    (click)=\"page.next()\"\n                    type=\"button\"></button>\n            </li>\n        </ul>\n    `,\n    // IE10 comes to pollute even our components declaration\n    styles: [`:host { display: block; }`]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Page, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'pageSize': [{ type: Input, args: [\"clrDgPageSize\", ] },],\n'totalItems': [{ type: Input, args: [\"clrDgTotalItems\", ] },],\n'lastPage': [{ type: Input, args: [\"clrDgLastPage\", ] },],\n'currentPage': [{ type: Input, args: [\"clrDgPage\", ] },],\n'currentChanged': [{ type: Output, args: [\"clrDgPageChange\", ] },],\n};\n}\n\nfunction DatagridPagination_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridPagination.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridPagination.ctorParameters;\n/** @type {?} */\nDatagridPagination.propDecorators;\n/**\n * Subscription to the page service changes\n * @type {?}\n */\nDatagridPagination.prototype._pageSubscription;\n/** @type {?} */\nDatagridPagination.prototype.currentChanged;\n/** @type {?} */\nDatagridPagination.prototype.page;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n\nimport {DatagridColumn} from './datagrid-column';\nimport {DatagridHideableColumn} from './datagrid-hideable-column';\n/**\n * \\@class DatagridHideableColumnDirective\n * \n * \\@description \n * A structural directive meant to be used inside a clr-dg-column component.\n * \n * <clr-dg-column>\n *       <ng-container *clrDgHideableColumn=\"{ hidden: true }\">\n *           User ID\n *       </ng-container>\n *   </clr-dg-column>\n * \n * It sets up state and properties so that columns can be manges for hide/show by a service and an internal\n * datagrid toggle component.\n * \n */\nexport class DatagridHideableColumnDirective {\n/**\n * \\@property _hidden\n * \n * \\@description \n * Used to initialize the column with either hidden or visible state.\n * \n */\nprivate _hidden: boolean;\n/**\n * \\@function clrDgHideableColumn\n * \n * \\@description \n * Setter fn for the \\@Input with the same name as this structural directive.\n * It allows the user to pre-configure the column's hide/show state. { hidden: true }\n * It's more verbose but has more Clarity.\n * \n * \\@default false\n * \n * \n * \\@example \n * *clrDgHideableColumn\n * *clrDgHideableColumn={hidden: false}\n * *clrDgHideableColumn={hidden: true}\n * \n * @param {?} value \n * \n * @return {?}\n */\nset clrDgHideableColumn(value: any) {\n        this._hidden = (value && value.hidden) ? value.hidden : false;\n        if (this.dgColumn.hideable) {\n            this.dgColumn.hideable.hidden = (value && value.hidden) ? value.hidden : false;\n        }\n    }\n/**\n * \\@property columnId\n * \n * \\@description \n * A unique identifier passed into the directive from the parent (A DatagridColumn).\n * \n *  \\@type {string}\n */\npublic columnId: string;\n/**\n * \\@property column\n * \n * \\@description \n * An instance of the DatagridHideableColumn Utility class that is used to:\n * 1. Create an instance of HideableColumn that will manage the TemplateRef, state and communication\n * 2. Manage the hidden/shown state for the column to which this directive is applied\n * 3. track the id of the hidden column so it can be used in cells as well as on the column\n */\npublic column: DatagridHideableColumn;\n/**\n * \\@description \n * Used the DatagridColumn to get and set an id for this HiddenColumn\n * \n * @param {?} templateRef\n * @param {?} viewContainerRef\n * @param {?} dgColumn\n */\nconstructor(private templateRef: TemplateRef<any>,\nprivate viewContainerRef: ViewContainerRef,\nprivate dgColumn: DatagridColumn) {\n        this.columnId = dgColumn.columnId;\n\n        // Use the templateRef to create this view\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n\n        // Create instance of the utility class DatagridHideableColumn.\n        // Note this is on the parent instance of DatagridColumn.\n        this.dgColumn.hideable = new DatagridHideableColumn(this.templateRef, this.columnId, this._hidden);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrDgHideableColumn]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: DatagridColumn, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'clrDgHideableColumn': [{ type: Input, args: [\"clrDgHideableColumn\", ] },],\n};\n}\n\nfunction DatagridHideableColumnDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridHideableColumnDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridHideableColumnDirective.ctorParameters;\n/** @type {?} */\nDatagridHideableColumnDirective.propDecorators;\n/**\n * \\@property _hidden\n * \n * \\@description \n * Used to initialize the column with either hidden or visible state.\n * \n * @type {?}\n */\nDatagridHideableColumnDirective.prototype._hidden;\n/**\n * \\@property columnId\n * \n * \\@description \n * A unique identifier passed into the directive from the parent (A DatagridColumn).\n * \n *  \\@type {string}\n * @type {?}\n */\nDatagridHideableColumnDirective.prototype.columnId;\n/**\n * \\@property column\n * \n * \\@description \n * An instance of the DatagridHideableColumn Utility class that is used to:\n * 1. Create an instance of HideableColumn that will manage the TemplateRef, state and communication\n * 2. Manage the hidden/shown state for the column to which this directive is applied\n * 3. track the id of the hidden column so it can be used in cells as well as on the column\n * @type {?}\n */\nDatagridHideableColumnDirective.prototype.column;\n/** @type {?} */\nDatagridHideableColumnDirective.prototype.templateRef;\n/** @type {?} */\nDatagridHideableColumnDirective.prototype.viewContainerRef;\n/** @type {?} */\nDatagridHideableColumnDirective.prototype.dgColumn;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {TemplateRef} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n/**\n * \\@class DatagridHideableColumn\n * \n * \\@description \n * A utility class for that adds hide/show functionality to a column, its cells and enables a toggler in the\n * DatagridColumnToggle Component.\n * \n */\nexport class DatagridHideableColumn {\n/**\n * \\@property hiddenChanges\n * \n * \\@description \n * A stream of state changes an instance of DatagridHideableColumn will broadcast to subscribers.\n * \n */\nprivate hiddenChangesState: Subject<boolean> = new Subject<boolean>();\n/**\n *\n * \\@description \n * The init function for DatagridHideableColumn instances that does the following:\n * \n * 1. Set values for the private variables that enable a hideable column\n * 2. Broadcast the next hidden change for anyone (already) subscribed to this DatagridHideableColumn\n * TODO: Debug and verify that #2 is really necessary.\n * \n * @param {?} _template\n * @param {?} _id\n * @param {?=} _hidden\n */\nconstructor(private _template: TemplateRef<any>,\nprivate _id: string,\nprivate _hidden: boolean = false) {}\n/**\n * \\@function template\n * \n * \\@description \n * A getter function that returns an TemplateRef of the DatagridColumn that is hideable. This is currently used to\n * populate the DatagridColumnToggle UI with the correct Column name.\n * \n * @return {?}\n */\nget template() {\n        return this._template;\n    }\n/**\n * \\@function id\n * \n * \\@description \n * public function that returns the id of a HideableCOlumn instance. Used by the HideableCOlumnService for passing\n * state and actions between DateGridColumns, DataGridCells & the DatagridColumnToggle Components.\n * \n * @return {?}\n */\nget id(): string {\n        return this._id;\n    }\n/**\n * \\@function hidden\n * \n * \\@description \n * A getter that returns the hidden value of a DatagridHideableColumn instance.\n * TODO: debug and make sure you really need this since we have the hiddenCHanges observable.\n * \n * @return {?}\n */\nget hidden(): boolean {\n        return this._hidden;\n    }\n/**\n * \\@function hidden\n * \n * \\@description \n * The setter for setting the hidden state of a DatagridHideableColumn instance.\n * It also broadcasts the change after its set.\n * \n * @param {?} value\n * @return {?}\n */\nset hidden(value: boolean) {\n        if (this._hidden === value) {\n            return;\n        }\n        this._hidden = value;\n        this.hiddenChangesState.next(value);\n    }\n/**\n * \\@function hiddenChangeState\n * \n * \\@description \n * An Observable for the HideableColumns hidden changes.\n * \n * @return {?}\n */\nget hiddenChangeState(): Observable<boolean> {\n        return this.hiddenChangesState.asObservable();\n    }\npublic lastVisibleColumn: boolean = false;\n}\n\nfunction DatagridHideableColumn_tsickle_Closure_declarations() {\n/**\n * \\@property hiddenChanges\n * \n * \\@description \n * A stream of state changes an instance of DatagridHideableColumn will broadcast to subscribers.\n * \n * @type {?}\n */\nDatagridHideableColumn.prototype.hiddenChangesState;\n/** @type {?} */\nDatagridHideableColumn.prototype.lastVisibleColumn;\n/** @type {?} */\nDatagridHideableColumn.prototype._template;\n/** @type {?} */\nDatagridHideableColumn.prototype._id;\n/** @type {?} */\nDatagridHideableColumn.prototype._hidden;\n}\n\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {HideableColumnService} from './providers/hideable-column.service';\nimport {Selection, SelectionType} from './providers/selection';\nexport class DatagridFooter implements OnInit {\n/**\n * @param {?} selection\n * @param {?} hideableColumnService\n * @param {?} cdr\n */\nconstructor(public selection: Selection,\npublic hideableColumnService: HideableColumnService,\npublic cdr: ChangeDetectorRef) {}\npublic activeToggler: boolean;\nprivate subscriptions: Subscription[] = [];\npublic SELECTION_TYPE = SelectionType;\n/**\n * @return {?}\n */\nngOnInit() {\n        this.subscriptions.push(this.hideableColumnService.columnListChange.subscribe((change) => {\n            const /** @type {?} */ hiddenColumnsInSub = change.filter(col => col);\n            if (hiddenColumnsInSub.length > 0) {\n                this.activeToggler = true;\n            }\n        }));\n\n        const /** @type {?} */ hiddenColumns = this.hideableColumnService.getColumns().filter(col => col);\n\n        if (hiddenColumns.length > 0) {\n            this.activeToggler = true;\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscriptions.forEach((sub) => {\n            sub.unsubscribe();\n        });\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-footer\",\n    template: `\n        <ng-container\n            *ngIf=\"(selection.selectionType === SELECTION_TYPE.Multi) && (selection.current.length > 0)\">\n            <clr-checkbox [clrDisabled]=\"true\" [clrChecked]=\"true\" class=\"datagrid-foot-select\">\n                {{selection.current.length}}\n            </clr-checkbox>\n        </ng-container>\n        <clr-dg-column-toggle *ngIf=\"activeToggler\"></clr-dg-column-toggle>\n        <div class=\"datagrid-foot-description\">\n            <ng-content></ng-content>\n        </div>\n        <ng-content select=\"clr-dg-pagination\"></ng-content>\n    `,\n    host: {\n        \"[class.datagrid-foot]\": \"true\",\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Selection, },\n{type: HideableColumnService, },\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction DatagridFooter_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridFooter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridFooter.ctorParameters;\n/** @type {?} */\nDatagridFooter.prototype.activeToggler;\n/** @type {?} */\nDatagridFooter.prototype.subscriptions;\n/** @type {?} */\nDatagridFooter.prototype.SELECTION_TYPE;\n/** @type {?} */\nDatagridFooter.prototype.selection;\n/** @type {?} */\nDatagridFooter.prototype.hideableColumnService;\n/** @type {?} */\nDatagridFooter.prototype.cdr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, Optional} from '@angular/core';\nimport {ExpandableRowsCount} from './providers/global-expandable-rows';\nexport class DatagridDetailRegisterer {\n/**\n * @param {?} expandableRowsCount\n */\nconstructor(\nprivate expandableRowsCount: ExpandableRowsCount) {\n        if (this.expandableRowsCount) {\n            this.expandableRowsCount.register();\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        if (this.expandableRowsCount) {\n            this.expandableRowsCount.unregister();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrIfExpanded]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ExpandableRowsCount, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction DatagridDetailRegisterer_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridDetailRegisterer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridDetailRegisterer.ctorParameters;\n/** @type {?} */\nDatagridDetailRegisterer.prototype.expandableRowsCount;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {Point} from '../../popover/common/popover';\n\nimport {DatagridHideableColumn} from './datagrid-hideable-column';\nimport {HideableColumnService} from './providers/hideable-column.service';\nexport class DatagridColumnToggle implements OnInit, OnDestroy {\nprivate _hideableColumnChangeSubscription: Subscription;\nprivate _allColumnsVisible: boolean;\n/**\n * \n * Popover init\n */\npublic anchorPoint: Point = Point.TOP_LEFT;\npublic popoverPoint: Point = Point.LEFT_BOTTOM;\npublic open: boolean = false;\n/**\n * *\n * DatagridHideableColumn init\n */\npublic columns: DatagridHideableColumn[] = [];\n/**\n * @return {?}\n */\npublic get allColumnsVisible(): boolean {\n        return this._allColumnsVisible;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set allColumnsVisible(value: boolean) {\n        this._allColumnsVisible = value;\n    }\n/**\n * @param {?} hideableColumnService\n */\nconstructor(public hideableColumnService: HideableColumnService) {}\n/**\n * @return {?}\n */\nngOnInit() {\n        this._hideableColumnChangeSubscription = this.hideableColumnService.columnListChange.subscribe((columnList) => {\n            // Reset the list of columns\n            this.columns.length = 0;\n            this.hideableColumnService.updateForLastVisibleColumn();\n            this.allColumnsVisible = this.hideableColumnService.checkForAllColumnsVisible;\n\n            // Add only the hidden columns to the toggler.\n            columnList.forEach((col) => {\n                if (col) {\n                    this.columns.push(col);\n                }\n            });\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._hideableColumnChangeSubscription.unsubscribe();\n    }\n/**\n * @return {?}\n */\nselectAll() {\n        this.hideableColumnService.showHiddenColumns();\n        this.allColumnsVisible = this.hideableColumnService.checkForAllColumnsVisible;\n    }\n/**\n * @param {?} event\n * @param {?} column\n * @return {?}\n */\ntoggleColumn(event: boolean, column: DatagridHideableColumn) {\n        column.hidden = !event;\n        this.allColumnsVisible = this.hideableColumnService.checkForAllColumnsVisible;\n        this.hideableColumnService.updateForLastVisibleColumn();\n    }\n/**\n * @return {?}\n */\ntoggleUI() {\n        this.open = !this.open;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-column-toggle\",\n    template: `\n        <button\n                #anchor\n                (click)=\"toggleUI()\"\n                class=\"btn btn-sm btn-link column-toggle--action\"\n                type=\"button\">\n            <clr-icon shape=\"view-columns\"></clr-icon>\n        </button>\n        <div class=\"column-switch\"\n             *clrPopoverOld=\"open; anchor: anchor; anchorPoint: anchorPoint; popoverPoint: popoverPoint\">\n            <div class=\"switch-header\">\n                Show Columns\n                <button\n                    class=\"btn btn-sm btn-link\"\n                    (click)=\"toggleUI()\"\n                    type=\"button\">\n                    <clr-icon\n                            shape=\"close\"></clr-icon>\n                </button>\n            </div>\n            <ul class=\"switch-content list-unstyled\">\n                <li *ngFor=\"let column of columns\">\n                    <clr-checkbox [clrChecked]=\"!column.hidden\"\n                                  [clrDisabled]=\"column.lastVisibleColumn\"\n                                  (clrCheckedChange)=\"toggleColumn($event, column)\">\n                        <ng-template [ngTemplateOutlet]=\"column.template\"></ng-template>\n                    </clr-checkbox>\n                </li>\n            </ul>\n            <div class=\"switch-footer\">\n                <div>\n                    <button\n                            class=\"btn btn-sm btn-link p6 text-uppercase\"\n                            [disabled]=\"allColumnsVisible\"\n                            (click)=\"selectAll()\"\n                            type=\"button\">Select All\n                    </button>\n                </div>\n                <div class=\"action-right\">\n                    <button\n                            (click)=\"toggleUI()\"\n                            class=\"btn btn-primary\"\n                            type=\"button\">\n                        Ok\n                    </button>\n                </div>\n            </div>\n        </div>\n    `,\n    host: {\"[class.column-switch-wrapper]\": \"true\", \"[class.active]\": \"open\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HideableColumnService, },\n];\n}\n\nfunction DatagridColumnToggle_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridColumnToggle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridColumnToggle.ctorParameters;\n/** @type {?} */\nDatagridColumnToggle.prototype._hideableColumnChangeSubscription;\n/** @type {?} */\nDatagridColumnToggle.prototype._allColumnsVisible;\n/**\n * \n * Popover init\n * @type {?}\n */\nDatagridColumnToggle.prototype.anchorPoint;\n/** @type {?} */\nDatagridColumnToggle.prototype.popoverPoint;\n/** @type {?} */\nDatagridColumnToggle.prototype.open;\n/**\n * *\n * DatagridHideableColumn init\n * @type {?}\n */\nDatagridColumnToggle.prototype.columns;\n/** @type {?} */\nDatagridColumnToggle.prototype.hideableColumnService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, EventEmitter, Input, OnDestroy, Output} from '@angular/core';\n\nimport {Point} from '../../popover/common/popover';\n\nimport {RowActionService} from './providers/row-action-service';\nexport class DatagridActionOverflow implements OnDestroy {\npublic anchorPoint: Point = Point.RIGHT_CENTER;\npublic popoverPoint: Point = Point.LEFT_CENTER;\n/**\n * @param {?} rowActionService\n */\nconstructor(private rowActionService: RowActionService) {\n        this.rowActionService.register();\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.rowActionService.unregister();\n    }\n/**\n * Tracks whether the action overflow menu is open or not\n */\nprivate _open = false;\n/**\n * @return {?}\n */\npublic get open() {\n        return this._open;\n    }\n/**\n * @param {?} open\n * @return {?}\n */\npublic set open(open: boolean) {\n        const /** @type {?} */ boolOpen = !!open;\n        if (boolOpen !== this._open) {\n            this._open = boolOpen;\n            this.openChanged.emit(boolOpen);\n        }\n    }\npublic openChanged = new EventEmitter<boolean>(false);\nprivate openingEvent: any;\n/**\n * Shows/hides the action overflow menu\n * @param {?} event\n * @return {?}\n */\npublic toggle(event: any) {\n        this.openingEvent = event;\n        this.open = !this.open;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic close(event: MouseEvent) {\n        /*\n         * Because this listener is added synchonously, before the event finishes bubbling up the DOM,\n         * we end up firing on the very click that just opened the menu, p\n         * otentially closing it immediately every time. So we just ignore it.\n         */\n        if (event === this.openingEvent) {\n            delete this.openingEvent;\n            return;\n        }\n        this.open = false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-action-overflow\",\n    template: `\n        <button (click)=\"toggle($event)\" class=\"datagrid-action-toggle\" #anchor>\n            <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\n        </button>\n        <ng-template [(clrPopoverOld)]=\"open\" [clrPopoverOldAnchor]=\"anchor\" [clrPopoverOldAnchorPoint]=\"anchorPoint\"\n                     [clrPopoverOldPopoverPoint]=\"popoverPoint\">\n            <div #menu class=\"datagrid-action-overflow\" (clrOutsideClick)=\"close($event)\" [clrStrict]=\"true\">\n                <ng-content></ng-content>\n            </div>\n        </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: RowActionService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'open': [{ type: Input, args: [\"clrDgActionOverflowOpen\", ] },],\n'openChanged': [{ type: Output, args: [\"clrDgActionOverflowOpenChange\", ] },],\n};\n}\n\nfunction DatagridActionOverflow_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridActionOverflow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridActionOverflow.ctorParameters;\n/** @type {?} */\nDatagridActionOverflow.propDecorators;\n/** @type {?} */\nDatagridActionOverflow.prototype.anchorPoint;\n/** @type {?} */\nDatagridActionOverflow.prototype.popoverPoint;\n/**\n * Tracks whether the action overflow menu is open or not\n * @type {?}\n */\nDatagridActionOverflow.prototype._open;\n/** @type {?} */\nDatagridActionOverflow.prototype.openChanged;\n/** @type {?} */\nDatagridActionOverflow.prototype.openingEvent;\n/** @type {?} */\nDatagridActionOverflow.prototype.rowActionService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component} from '@angular/core';\nexport class DatagridActionBar {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-action-bar\",\n    template: `\n        <ng-content></ng-content>\n    `,\n    host: {\"[class.datagrid-action-bar]\": \"true\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DatagridActionBar_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridActionBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridActionBar.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    Component,\n    ContentChild,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {DatagridColumn} from './datagrid-column';\nimport {DatagridItems} from './datagrid-items';\nimport {DatagridPlaceholder} from './datagrid-placeholder';\nimport {DatagridRow} from './datagrid-row';\nimport {State} from './interfaces/state';\nimport {FiltersProvider} from './providers/filters';\nimport {ExpandableRowsCount} from './providers/global-expandable-rows';\nimport {HideableColumnService} from './providers/hideable-column.service';\nimport {Items} from './providers/items';\nimport {Page} from './providers/page';\nimport {RowActionService} from './providers/row-action-service';\nimport {Selection, SelectionType} from './providers/selection';\nimport {Sort} from './providers/sort';\nimport {StateDebouncer} from './providers/state-debouncer.provider';\nimport {StateProvider} from './providers/state.provider';\nimport {DatagridRenderOrganizer} from './render/render-organizer';\nexport class Datagrid implements AfterContentInit, AfterViewInit, OnDestroy {\n/**\n * @param {?} columnService\n * @param {?} organizer\n * @param {?} items\n * @param {?} expandableRows\n * @param {?} selection\n * @param {?} rowActionService\n * @param {?} stateProvider\n */\nconstructor(private columnService: HideableColumnService,\nprivate organizer: DatagridRenderOrganizer,\npublic items: Items,\npublic expandableRows: ExpandableRowsCount,\npublic selection: Selection,\npublic rowActionService: RowActionService,\nprivate stateProvider: StateProvider) {}\npublic SELECTION_TYPE = SelectionType;\n/**\n * Freezes the datagrid while data is loading\n * @return {?}\n */\npublic get loading(): boolean {\n        return this.items.loading;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set loading(value: boolean) {\n        this.items.loading = value;\n    }\n/**\n * Output emitted whenever the data needs to be refreshed, based on user action or external ones\n */\npublic refresh = new EventEmitter<State>(false);\n/**\n * Public method to re-trigger the computation of displayed items manually\n * @return {?}\n */\npublic dataChanged() {\n        this.items.refresh();\n    }\n/**\n * We grab the smart iterator from projected content\n */\npublic iterator: DatagridItems;\n/**\n * Array of all selected items\n * @param {?} value\n * @return {?}\n */\nset selected(value: any[]) {\n        if (value) {\n            this.selection.selectionType = SelectionType.Multi;\n        } else {\n            this.selection.selectionType = SelectionType.None;\n        }\n        this.selection.current = value;\n    }\n\n     selectedChanged = new EventEmitter<any[]>(false);\n/**\n * Selected item in single-select mode\n * @param {?} value\n * @return {?}\n */\nset singleSelected(value: any) {\n        this.selection.selectionType = SelectionType.Single;\n        if (value) {\n            this.selection.currentSingle = value;\n        } else {\n            this.selection.currentSingle = null;\n        }\n    }\n\n     singleSelectedChanged = new EventEmitter<any>(false);\n/**\n * Selection/Deselection on row click mode\n * @param {?} value\n * @return {?}\n */\nset rowSelectionMode(value: boolean) {\n        this.selection.rowSelectionMode = value;\n    }\n/**\n * Indicates if all currently displayed items are selected\n * @return {?}\n */\npublic get allSelected() {\n        return this.selection.isAllSelected();\n    }\n/**\n * Selects/deselects all currently displayed items\n * @param {?} value\n * @return {?}\n */\npublic set allSelected(value: boolean) {\n        /*\n         * This is a setter but we ignore the value.\n         * It's strange, but it lets us have an indeterminate state where only\n         * some of the items are selected.\n         */\n        this.selection.toggleAll();\n    }\n/**\n * Custom placeholder detection\n */\npublic placeholder: DatagridPlaceholder;\n/**\n * Hideable Column data source / detection.\n */\npublic columns: QueryList<DatagridColumn>;\n/**\n * When the datagrid is user-managed without the smart iterator, we get the items displayed\n * by querying the projected content. This is needed to keep track of the models currently\n * displayed, typically for selection.\n */\nrows: QueryList<DatagridRow>;\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        this._subscriptions.push(this.rows.changes.subscribe(() => {\n            if (!this.items.smart) {\n                this.items.all = this.rows.map((row: DatagridRow) => row.item);\n            }\n        }));\n        if (!this.items.smart) {\n            this.items.all = this.rows.map((row: DatagridRow) => row.item);\n        }\n\n        this._subscriptions.push(this.columns.changes.subscribe((columns: DatagridColumn[]) => {\n            this.columnService.updateColumnList(this.columns.map(col => col.hideable));\n        }));\n\n        // Get ColumnService ready for HideableColumns.\n        this.columnService.updateColumnList(this.columns.map(col => col.hideable));\n    }\n/**\n * Our setup happens in the view of some of our components, so we wait for it to be done before starting\n * @return {?}\n */\nngAfterViewInit() {\n        // TODO: determine if we can get rid of provider wiring in view init so that subscriptions can be done earlier\n        this.refresh.emit(this.stateProvider.state);\n        this._subscriptions.push(this.stateProvider.change.subscribe(state => this.refresh.emit(state)));\n        this._subscriptions.push(this.selection.change.subscribe(s => {\n            if (this.selection.selectionType === SelectionType.Single) {\n                this.singleSelectedChanged.emit(s);\n            } else if (this.selection.selectionType === SelectionType.Multi) {\n                this.selectedChanged.emit(s);\n            }\n        }));\n    }\n/**\n * Subscriptions to all the services and queries changes\n */\nprivate _subscriptions: Subscription[] = [];\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    }\n/**\n * @return {?}\n */\nresize(): void {\n        this.organizer.resize();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-datagrid\",\n    template: `\n      <!--\n        ~ Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n        ~ This software is released under MIT license.\n        ~ The full license information can be found in LICENSE in the root directory of this project.\n        -->\n\n      <ng-content select=\"clr-dg-action-bar\"></ng-content>\n      <div class=\"datagrid-overlay-wrapper\">\n          <div class=\"datagrid-scroll-wrapper\">\n              <div class=\"datagrid\" #datagrid>\n                  <clr-dg-table-wrapper class=\"datagrid-table-wrapper\">\n                      <div clrDgHead class=\"datagrid-head\">\n                          <div class=\"datagrid-row datagrid-row-flex\">\n                              <!-- header for datagrid where you can select multiple rows -->\n                              <div class=\"datagrid-column datagrid-select datagrid-fixed-column\"\n                                   *ngIf=\"selection.selectionType === SELECTION_TYPE.Multi\">\n                              <span class=\"datagrid-column-title\">\n                                  <clr-checkbox [(ngModel)]=\"allSelected\"></clr-checkbox>\n                              </span>\n                                  <div class=\"datagrid-column-separator\"></div>\n                              </div>\n                              <!-- header for datagrid where you can select one row only -->\n                              <div class=\"datagrid-column datagrid-select datagrid-fixed-column\"\n                                   *ngIf=\"selection.selectionType === SELECTION_TYPE.Single\">\n                                  <div class=\"datagrid-column-separator\"></div>\n                              </div>\n                              <!-- header for single row action; only display if we have at least one actionable row in datagrid -->\n                              <div class=\"datagrid-column datagrid-row-actions datagrid-fixed-column\"\n                                   *ngIf=\"rowActionService.hasActionableRow\">\n                                  <div class=\"datagrid-column-separator\"></div>\n                              </div>\n                              <!-- header for carets; only display if we have at least one expandable row in datagrid -->\n                              <div class=\"datagrid-column datagrid-expandable-caret datagrid-fixed-column\"\n                                   *ngIf=\"expandableRows.hasExpandableRow\">\n                                  <div class=\"datagrid-column-separator\"></div>\n                              </div>\n                              <ng-content select=\"clr-dg-column\"></ng-content>\n                          </div>\n                      </div>\n\n                      <ng-template *ngIf=\"iterator\"\n                                   ngFor [ngForOf]=\"items.displayed\" [ngForTrackBy]=\"items.trackBy\"\n                                   [ngForTemplate]=\"iterator.template\"></ng-template>\n                      <ng-content *ngIf=\"!iterator\"></ng-content>\n\n                      <!-- Custom placeholder overrides the default empty one -->\n                      <ng-content select=\"clr-dg-placeholder\"></ng-content>\n                      <clr-dg-placeholder *ngIf=\"!placeholder\"></clr-dg-placeholder>\n                  </clr-dg-table-wrapper>\n\n                  <!--\n                      This is not inside the table because there is no good way of having a single column span\n                      everything when using custom elements with display:table-cell.\n                  -->\n                  <ng-content select=\"clr-dg-footer\"></ng-content>\n              </div>\n          </div>\n          <div class=\"datagrid-spinner\" *ngIf=\"loading\">\n              <div class=\"spinner\">Loading...</div>\n          </div>\n      </div>\n    `,\n    providers: [\n        Selection, Sort, FiltersProvider, Page, Items, DatagridRenderOrganizer, RowActionService, ExpandableRowsCount,\n        HideableColumnService, StateDebouncer, StateProvider\n    ],\n    host: {\"[class.datagrid-host]\": \"true\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HideableColumnService, },\n{type: DatagridRenderOrganizer, },\n{type: Items, },\n{type: ExpandableRowsCount, },\n{type: Selection, },\n{type: RowActionService, },\n{type: StateProvider, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'loading': [{ type: Input, args: [\"clrDgLoading\", ] },],\n'refresh': [{ type: Output, args: [\"clrDgRefresh\", ] },],\n'iterator': [{ type: ContentChild, args: [DatagridItems, ] },],\n'selected': [{ type: Input, args: [\"clrDgSelected\", ] },],\n'selectedChanged': [{ type: Output, args: [\"clrDgSelectedChange\", ] },],\n'singleSelected': [{ type: Input, args: [\"clrDgSingleSelected\", ] },],\n'singleSelectedChanged': [{ type: Output, args: [\"clrDgSingleSelectedChange\", ] },],\n'rowSelectionMode': [{ type: Input, args: [\"clDgRowSelection\", ] },],\n'placeholder': [{ type: ContentChild, args: [DatagridPlaceholder, ] },],\n'columns': [{ type: ContentChildren, args: [DatagridColumn, ] },],\n'rows': [{ type: ContentChildren, args: [DatagridRow, ] },],\n};\n}\n\nfunction Datagrid_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagrid.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagrid.ctorParameters;\n/** @type {?} */\nDatagrid.propDecorators;\n/** @type {?} */\nDatagrid.prototype.SELECTION_TYPE;\n/**\n * Output emitted whenever the data needs to be refreshed, based on user action or external ones\n * @type {?}\n */\nDatagrid.prototype.refresh;\n/**\n * We grab the smart iterator from projected content\n * @type {?}\n */\nDatagrid.prototype.iterator;\n/** @type {?} */\nDatagrid.prototype.selectedChanged;\n/** @type {?} */\nDatagrid.prototype.singleSelectedChanged;\n/**\n * Custom placeholder detection\n * @type {?}\n */\nDatagrid.prototype.placeholder;\n/**\n * Hideable Column data source / detection.\n * @type {?}\n */\nDatagrid.prototype.columns;\n/**\n * When the datagrid is user-managed without the smart iterator, we get the items displayed\n * by querying the projected content. This is needed to keep track of the models currently\n * displayed, typically for selection.\n * @type {?}\n */\nDatagrid.prototype.rows;\n/**\n * Subscriptions to all the services and queries changes\n * @type {?}\n */\nDatagrid.prototype._subscriptions;\n/** @type {?} */\nDatagrid.prototype.columnService;\n/** @type {?} */\nDatagrid.prototype.organizer;\n/** @type {?} */\nDatagrid.prototype.items;\n/** @type {?} */\nDatagrid.prototype.expandableRows;\n/** @type {?} */\nDatagrid.prototype.selection;\n/** @type {?} */\nDatagrid.prototype.rowActionService;\n/** @type {?} */\nDatagrid.prototype.stateProvider;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport'rxjs/add/operator/map';\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport {DatagridPropertyComparator} from '../built-in/comparators/datagrid-property-comparator';\nimport {DatagridPropertyStringFilter} from '../built-in/filters/datagrid-property-string-filter';\nimport {DatagridStringFilterImpl} from '../built-in/filters/datagrid-string-filter-impl';\nimport {State} from '../interfaces/state';\n\nimport {FiltersProvider} from './filters';\nimport {Page} from './page';\nimport {Sort} from './sort';\nimport {StateDebouncer} from './state-debouncer.provider';\n/**\n * This provider aggregates state changes from the various providers of the Datagrid\n */\nexport class StateProvider {\n/**\n * @param {?} filters\n * @param {?} sort\n * @param {?} page\n * @param {?} debouncer\n */\nconstructor(private filters: FiltersProvider,\nprivate sort: Sort,\nprivate page: Page,\nprivate debouncer: StateDebouncer) {}\n/**\n * The Observable that lets other classes subscribe to global state changes\n */\nchange: Observable<State> = this.debouncer.change.map(() => this.state);\n/**\n * @return {?}\n */\nget state(): State {\n        const /** @type {?} */ state: State = {};\n        if (this.page.size > 0) {\n            state.page = {from: this.page.firstItem, to: this.page.lastItem, size: this.page.size};\n        }\n        if (this.sort.comparator) {\n            if (this.sort.comparator instanceof DatagridPropertyComparator) {\n                /*\n                 * Special case for the default object property comparator,\n                 * we give the property name instead of the actual comparator.\n                 */\n                state.sort = {by: ( /** @type {?} */((<DatagridPropertyComparator>this.sort.comparator))).prop, reverse: this.sort.reverse};\n            } else {\n                state.sort = {by: this.sort.comparator, reverse: this.sort.reverse};\n            }\n        }\n\n        const /** @type {?} */ activeFilters = this.filters.getActiveFilters();\n        if (activeFilters.length > 0) {\n            state.filters = [];\n            for (const /** @type {?} */ filter of activeFilters) {\n                if (filter instanceof DatagridStringFilterImpl) {\n                    const /** @type {?} */ stringFilter = ( /** @type {?} */((<DatagridStringFilterImpl>filter))).filterFn;\n                    if (stringFilter instanceof DatagridPropertyStringFilter) {\n                        /*\n                         * Special case again for the default object property filter,\n                         * we give the property name instead of the full filter object.\n                         */\n                        state.filters.push({\n                            property: ( /** @type {?} */((<DatagridPropertyStringFilter>stringFilter))).prop,\n                            value: ( /** @type {?} */((<DatagridStringFilterImpl>filter))).value\n                        });\n                        continue;\n                    }\n                }\n                state.filters.push(filter);\n            }\n        }\n        return state;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FiltersProvider, },\n{type: Sort, },\n{type: Page, },\n{type: StateDebouncer, },\n];\n}\n\nfunction StateProvider_tsickle_Closure_declarations() {\n/** @type {?} */\nStateProvider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStateProvider.ctorParameters;\n/**\n * The Observable that lets other classes subscribe to global state changes\n * @type {?}\n */\nStateProvider.prototype.change;\n/** @type {?} */\nStateProvider.prototype.filters;\n/** @type {?} */\nStateProvider.prototype.sort;\n/** @type {?} */\nStateProvider.prototype.page;\n/** @type {?} */\nStateProvider.prototype.debouncer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n    AfterContentInit,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    Output,\n    QueryList\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {Expand} from '../../utils/expand/providers/expand';\nimport {LoadingListener} from '../../utils/loading/loading-listener';\n\nimport {DatagridCell} from './datagrid-cell';\nimport {DatagridHideableColumn} from './datagrid-hideable-column';\nimport {ExpandableRowsCount} from './providers/global-expandable-rows';\nimport {HideableColumnService} from './providers/hideable-column.service';\nimport {RowActionService} from './providers/row-action-service';\nimport {Selection, SelectionType} from './providers/selection';\n\n\nlet /** @type {?} */ nbRow: number = 0;\nexport class DatagridRow implements AfterContentInit {\npublic id: string;\npublic SELECTION_TYPE = SelectionType;\nprivate readonly ENTER_KEY_CODE = 13;\nprivate readonly SPACE_KEY_CODE = 32;\n/**\n * Model of the row, to use for selection\n */\nitem: any;\n\n     role: string;\n/**\n * @param {?} selection\n * @param {?} rowActionService\n * @param {?} globalExpandable\n * @param {?} expand\n * @param {?} hideableColumnService\n */\nconstructor(public selection: Selection,\npublic rowActionService: RowActionService,\npublic globalExpandable: ExpandableRowsCount,\npublic expand: Expand,\npublic hideableColumnService: HideableColumnService) {\n        this.id = \"clr-dg-row\" + (nbRow++);\n        this.role = selection.rowSelectionMode ? \"button\" : null;\n    }\nprivate _selected = false;\n/**\n * Indicates if the row is selected\n * @return {?}\n */\npublic get selected() {\n        if (this.selection.selectionType === SelectionType.None) {\n            return this._selected;\n        } else {\n            return this.selection.isSelected(this.item);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set selected(value: boolean) {\n        if (this.selection.selectionType === SelectionType.None) {\n            this._selected = value;\n        } else {\n            this.selection.setSelected(this.item, value);\n        }\n    }\n\n     selectedChanged = new EventEmitter<boolean>(false);\n/**\n * @param {?=} selected\n * @return {?}\n */\npublic toggle(selected = !this.selected) {\n        if (selected !== this.selected) {\n            this.selected = selected;\n            this.selectedChanged.emit(selected);\n        }\n    }\n/**\n * @return {?}\n */\npublic get expanded() {\n        return this.expand.expanded;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set expanded(value: boolean) {\n        this.expand.expanded = value;\n    }\n\n     expandedChange = new EventEmitter<boolean>(false);\n/**\n * @return {?}\n */\npublic toggleExpand() {\n        if (this.expand.expandable) {\n            this.expanded = !this.expanded;\n            this.expandedChange.emit(this.expanded);\n        }\n    }\n/**\n * @return {?}\n */\npublic toggleSelection() {\n        if (!this.selection.rowSelectionMode) {\n            return;\n        }\n\n        switch (this.selection.selectionType) {\n            case SelectionType.None:\n                break;\n            case SelectionType.Single:\n                this.selection.currentSingle = this.item;\n                break;\n            case SelectionType.Multi:\n                this.toggle();\n                break;\n            default:\n                break;\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic keypress(event: KeyboardEvent) {\n        if (!this.selection.rowSelectionMode) {\n            return;\n        }\n\n        // Check to see if space or enter were pressed\n        if (event.keyCode === this.ENTER_KEY_CODE || event.keyCode === this.SPACE_KEY_CODE) {\n            // Prevent the default action to stop scrolling when space is pressed\n            event.preventDefault();\n            this.toggleSelection();\n        }\n    }\nprivate subscription: Subscription;\n/**\n * **\n * property dgCells\n * \n * \\@description \n * A Query List of the Datagrid cells in this row.\n * \n */\ndgCells: QueryList<DatagridCell>;\n/**\n * @return {?}\n */\nngAfterContentInit() {\n        // Make sure things get started\n        const /** @type {?} */ columnsList = this.hideableColumnService.getColumns();\n        this.updateCellsForColumns(columnsList);\n\n        // Triggered when the Cells list changes per row-renderer\n        this.dgCells.changes.subscribe((cellList) => {\n            const /** @type {?} */ columnList = this.hideableColumnService.getColumns();\n            if (cellList.length === columnList.length) {\n                this.updateCellsForColumns(columnList);\n            }\n        });\n\n        // Used to set things up the first time but only after all the columns are ready.\n        this.subscription = this.hideableColumnService.columnListChange.subscribe((columnList) => {\n            // Prevents cell updates when cols and cells array are not aligned - only seems to run on init / first time.\n            if (columnList.length === this.dgCells.length) {\n                this.updateCellsForColumns(columnList);\n            }\n        });\n    }\n/**\n * *******\n * \\@function updateCellsForColumns\n * \n * \\@description \n * 1. Maps the new columnListChange to the dgCells list by index\n * 2. Sets the hidden state on the cell\n * Take a Column list and use index to access the columns for hideable properties.\n * \n * @param {?} columnList\n * @return {?}\n */\npublic updateCellsForColumns(columnList: DatagridHideableColumn[]) {\n        // Map cells to columns with Array.index\n        this.dgCells.forEach((cell, index) => {\n            const /** @type {?} */ currentColumn = columnList[index];  // Accounts for null space.\n            if (currentColumn) {\n                cell.id = currentColumn.id;\n            }\n        });\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-row\",\n    template: `\n        <div class=\"datagrid-row-master datagrid-row-flex\">\n            <clr-dg-cell *ngIf=\"selection.selectionType === SELECTION_TYPE.Multi\"\n                         class=\"datagrid-select datagrid-fixed-column\">\n                <clr-checkbox [clrChecked]=\"selected\" (clrCheckedChange)=\"toggle($event)\"></clr-checkbox>\n            </clr-dg-cell>\n            <clr-dg-cell *ngIf=\"selection.selectionType === SELECTION_TYPE.Single\"\n                         class=\"datagrid-select datagrid-fixed-column\">\n                <div class=\"radio\">\n                    <input type=\"radio\" [id]=\"id\" [name]=\"selection.id + '-radio'\" [value]=\"item\"\n                           [(ngModel)]=\"selection.currentSingle\">\n                    <label for=\"{{id}}\"></label>\n                </div>\n            </clr-dg-cell>\n            <clr-dg-cell *ngIf=\"rowActionService.hasActionableRow\"\n                         class=\"datagrid-row-actions datagrid-fixed-column\">\n                <ng-content select=\"clr-dg-action-overflow\"></ng-content>\n            </clr-dg-cell>\n            <clr-dg-cell *ngIf=\"globalExpandable.hasExpandableRow\"\n                         class=\"datagrid-expandable-caret datagrid-fixed-column\">\n                <ng-container *ngIf=\"expand.expandable\">\n                    <button (click)=\"toggleExpand()\" *ngIf=\"!expand.loading\" type=\"button\" class=\"datagrid-expandable-caret-button\">\n                        <clr-icon shape=\"caret\" [attr.dir]=\"expand.expanded?'down':'right'\" class=\"datagrid-expandable-caret-icon\"></clr-icon>\n                    </button>\n                    <div class=\"spinner spinner-sm\" *ngIf=\"expand.loading\"></div>\n                </ng-container>\n            </clr-dg-cell>\n            <ng-content *ngIf=\"!expand.replace || !expand.expanded || expand.loading\"></ng-content>\n\n            <ng-template *ngIf=\"expand.replace && expand.expanded && !expand.loading\"\n                         [ngTemplateOutlet]=\"detail\"></ng-template>\n        </div>\n\n        <ng-template *ngIf=\"!expand.replace && expand.expanded && !expand.loading\"\n                     [ngTemplateOutlet]=\"detail\"></ng-template>\n\n        <!-- \n            We need the \"project into template\" hack because we need this in 2 different places\n            depending on whether the details replace the row or not.\n        -->\n        <ng-template #detail>\n            <ng-content select=\"clr-dg-row-detail\"></ng-content>\n        </ng-template>\n    `,\n    host: {\n        \"[class.datagrid-row]\": \"true\",\n        \"[class.datagrid-selected]\": \"selected\",\n        \"[attr.tabindex]\": \"selection.rowSelectionMode ? 0 : null\"\n    },\n    providers: [Expand, {provide: LoadingListener, useExisting: Expand}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Selection, },\n{type: RowActionService, },\n{type: ExpandableRowsCount, },\n{type: Expand, },\n{type: HideableColumnService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'item': [{ type: Input, args: [\"clrDgItem\", ] },],\n'role': [{ type: HostBinding, args: [\"attr.role\", ] },],\n'selected': [{ type: Input, args: [\"clrDgSelected\", ] },],\n'selectedChanged': [{ type: Output, args: [\"clrDgSelectedChange\", ] },],\n'expanded': [{ type: Input, args: [\"clrDgExpanded\", ] },],\n'expandedChange': [{ type: Output, args: [\"clrDgExpandedChange\", ] },],\n'toggleSelection': [{ type: HostListener, args: [\"click\", ] },],\n'keypress': [{ type: HostListener, args: [\"keypress\", [\"$event\"], ] },],\n'dgCells': [{ type: ContentChildren, args: [DatagridCell, ] },],\n};\n}\n\nfunction DatagridRow_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridRow.ctorParameters;\n/** @type {?} */\nDatagridRow.propDecorators;\n/** @type {?} */\nDatagridRow.prototype.id;\n/** @type {?} */\nDatagridRow.prototype.SELECTION_TYPE;\n/** @type {?} */\nDatagridRow.prototype.ENTER_KEY_CODE;\n/** @type {?} */\nDatagridRow.prototype.SPACE_KEY_CODE;\n/**\n * Model of the row, to use for selection\n * @type {?}\n */\nDatagridRow.prototype.item;\n/** @type {?} */\nDatagridRow.prototype.role;\n/** @type {?} */\nDatagridRow.prototype._selected;\n/** @type {?} */\nDatagridRow.prototype.selectedChanged;\n/** @type {?} */\nDatagridRow.prototype.expandedChange;\n/** @type {?} */\nDatagridRow.prototype.subscription;\n/**\n * **\n * property dgCells\n * \n * \\@description \n * A Query List of the Datagrid cells in this row.\n * \n * @type {?}\n */\nDatagridRow.prototype.dgCells;\n/** @type {?} */\nDatagridRow.prototype.selection;\n/** @type {?} */\nDatagridRow.prototype.rowActionService;\n/** @type {?} */\nDatagridRow.prototype.globalExpandable;\n/** @type {?} */\nDatagridRow.prototype.expand;\n/** @type {?} */\nDatagridRow.prototype.hideableColumnService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable, TrackByFn} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {FiltersProvider} from './filters';\nimport {Items} from './items';\n\nlet /** @type {?} */ nbSelection: number = 0;\nexport type SelectionType = number;\nexport let SelectionType: any = {};\nSelectionType.None = 0;\nSelectionType.Single = 1;\nSelectionType.Multi = 2;\nSelectionType[SelectionType.None] = \"None\";\nSelectionType[SelectionType.Single] = \"Single\";\nSelectionType[SelectionType.Multi] = \"Multi\";\n\nexport class Selection {\npublic id: string;\n/**\n * @param {?} _items\n * @param {?} _filters\n */\nconstructor(private _items: Items,\nprivate _filters: FiltersProvider) {\n        this.id = \"clr-dg-selection\" + (nbSelection++);\n\n        this._filtersSub = this._filters.change.subscribe(() => {\n            if (!this._selectable) {\n                return;\n            }\n            this.clearSelection();\n        });\n\n        this._itemsSub = this._items.allChanges.subscribe((updatedItems) => {\n            if (!this._selectable) {\n                return;\n            }\n            let leftOver: any[];\n            if (this._items.trackBy) {\n                const trackBy: TrackByFn = this._items.trackBy;\n                const updatedTracked: any[] = updatedItems.map((item, index) => trackBy(index, item));\n                leftOver = this.current.filter((selected, index) => {\n                    return updatedTracked.indexOf(trackBy(index, selected)) > -1;\n                });\n            } else {\n                leftOver = this.current.filter(selected => updatedItems.indexOf(selected) > -1);\n            }\n            if (this.current.length !== leftOver.length) {\n                // TODO: Discussed this with Eudes and this is fine for now.\n                // But we need to figure out a different pattern for the\n                // child triggering the parent change detection problem.\n                // Using setTimeout for now to fix this.\n                setTimeout(() => {\n                    this.current = leftOver;\n                }, 0);\n            }\n        });\n    }\n/**\n * @return {?}\n */\npublic clearSelection(): void {\n        this.current.length = 0;\n        this.emitChange();\n    }\nprivate _selectionType: SelectionType = SelectionType.None;\n/**\n * @return {?}\n */\npublic get selectionType(): SelectionType {\n        return this._selectionType;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set selectionType(value: SelectionType) {\n        if (value === this.selectionType) {\n            return;\n        }\n        this._selectionType = value;\n        if (value === SelectionType.None) {\n            delete this.current;\n        } else {\n            this.current = [];\n        }\n    }\npublic rowSelectionMode: boolean = false;\n/**\n * @return {?}\n */\nprivate get _selectable(): boolean {\n        return (this._selectionType === SelectionType.Multi) || (this._selectionType === SelectionType.Single);\n    }\n/**\n * Ignore items changes in the same change detection cycle.\n */\nprivate debounce: boolean = false;\n/**\n * Subscriptions to the other providers changes.\n */\nprivate _itemsSub: Subscription;\nprivate _filtersSub: Subscription;\n/**\n * Cleans up our subscriptions to other providers\n * @return {?}\n */\npublic destroy() {\n        this._itemsSub.unsubscribe();\n        this._filtersSub.unsubscribe();\n    }\n/**\n * The current selection in single selection type\n */\nprivate _currentSingle: any;\n/**\n * @return {?}\n */\npublic get currentSingle(): any {\n        return this._currentSingle;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set currentSingle(value: any) {\n        if (value === this._currentSingle) {\n            return;\n        }\n        this._currentSingle = value;\n        this.emitChange();\n        // Ignore items changes in the same change detection cycle.\n        this.debounce = true;\n        setTimeout(() => this.debounce = false);\n    }\n/**\n * The current selection\n */\nprivate _current: any[];\n/**\n * @return {?}\n */\npublic get current(): any[] {\n        return this._current;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set current(value: any[]) {\n        this._current = value;\n        this.emitChange();\n        // Ignore items changes in the same change detection cycle.\n        this.debounce = true;\n        setTimeout(() => this.debounce = false);\n    }\n/**\n * The Observable that lets other classes subscribe to selection changes\n */\nprivate _change = new Subject<any[]|any>();\n/**\n * @return {?}\n */\nprivate emitChange() {\n        if (this._selectionType === SelectionType.Single) {\n            this._change.next(this.currentSingle);\n        } else if (this._selectionType === SelectionType.Multi) {\n            this._change.next(this.current);\n        }\n    }\n/**\n * @return {?}\n */\npublic get change(): Observable<any[]|any> {\n        return this._change.asObservable();\n    }\n/**\n * Checks if an item is currently selected\n * @param {?} item\n * @return {?}\n */\npublic isSelected(item: any): boolean {\n        if (this._selectionType === SelectionType.Single) {\n            return this.currentSingle === item;\n        } else if (this._selectionType === SelectionType.Multi) {\n            return this.current.indexOf(item) >= 0;\n        }\n        return false;\n    }\n/**\n * Selects or deselects an item\n * @param {?} item\n * @param {?} selected\n * @return {?}\n */\npublic setSelected(item: any, selected: boolean) {\n        switch (this._selectionType) {\n            case SelectionType.None:\n                break;\n            case SelectionType.Single:\n                // in single selection, set currentSingle method should be used\n                break;\n            case SelectionType.Multi:\n                const /** @type {?} */ index = this.current.indexOf(item);\n                if (index >= 0 && !selected) {\n                    this.current.splice(index, 1);\n                    this.emitChange();\n                } else if (index < 0 && selected) {\n                    this.current.push(item);\n                    this.emitChange();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n/**\n * Checks if all currently displayed items are selected\n * @return {?}\n */\npublic isAllSelected(): boolean {\n        if ((this._selectionType !== SelectionType.Multi) || !this._items.displayed) {\n            return false;\n        }\n        const /** @type {?} */ displayedItems: any[] = this._items.displayed;\n        const /** @type {?} */ nbDisplayed = this._items.displayed.length;\n        if (nbDisplayed < 1) {\n            return false;\n        }\n        const /** @type {?} */ temp: any[] = displayedItems.filter(item => this.current.indexOf(item) > -1);\n        return temp.length === displayedItems.length;\n    }\n/**\n * Selects or deselects all currently displayed items\n * @return {?}\n */\npublic toggleAll() {\n        if (this._selectionType === SelectionType.None || this._selectionType === SelectionType.Single) {\n            return;\n        }\n        /*\n         * If every currently displayed item is already selected, we clear them.\n         * If at least one item isn't selected, we select every currently displayed item.\n         */\n        if (this.isAllSelected()) {\n            this.current = this.current.filter(item => {\n                return this._items.displayed.indexOf(item) < 0;\n            });\n        } else {\n            this._items.displayed.forEach(item => {\n                if (this.current.indexOf(item) < 0) {\n                    this.current.push(item);\n                }\n            });\n            this.emitChange();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Items, },\n{type: FiltersProvider, },\n];\n}\n\nfunction Selection_tsickle_Closure_declarations() {\n/** @type {?} */\nSelection.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSelection.ctorParameters;\n/** @type {?} */\nSelection.prototype.id;\n/** @type {?} */\nSelection.prototype._selectionType;\n/** @type {?} */\nSelection.prototype.rowSelectionMode;\n/**\n * Ignore items changes in the same change detection cycle.\n * @type {?}\n */\nSelection.prototype.debounce;\n/**\n * Subscriptions to the other providers changes.\n * @type {?}\n */\nSelection.prototype._itemsSub;\n/** @type {?} */\nSelection.prototype._filtersSub;\n/**\n * The current selection in single selection type\n * @type {?}\n */\nSelection.prototype._currentSingle;\n/**\n * The current selection\n * @type {?}\n */\nSelection.prototype._current;\n/**\n * The Observable that lets other classes subscribe to selection changes\n * @type {?}\n */\nSelection.prototype._change;\n/** @type {?} */\nSelection.prototype._items;\n/** @type {?} */\nSelection.prototype._filters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, ContentChildren, QueryList} from '@angular/core';\n\nimport {Signpost} from '../../popover/signpost/signpost';\n\nimport {DatagridHideableColumn} from './datagrid-hideable-column';\nimport {HideableColumnService} from './providers/hideable-column.service';\nexport class DatagridCell {\n/**\n * ******\n * \\@property signpost\n * \n * \n * \\@description\n * \\@ContentChild is used to detect the presence of a Signpost in the projected content.\n * On the host, we set the .datagrid-signpost-trigger class on the cell when signpost.length is greater than 0.\n * \n */\nsignpost: QueryList<Signpost>;\n/**\n * \\@property hidden\n * \n * \\@description \n * Property used to apply a css class to this cell that hides it when hidden = true.\n * \n * @return {?}\n */\npublic get hidden(): boolean {\n        const /** @type {?} */ column: DatagridHideableColumn = this.hideableColumnService.getColumnById(this.id);\n        return (column) ? column.hidden : false;\n    }\n/**\n * \\@property id\n * \n * \\@description \n * An identifier for an instance of this cell that maps it to a specific column\n * \n */\npublic id: string;\n/**\n * @param {?} hideableColumnService\n */\nconstructor(public hideableColumnService: HideableColumnService) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-cell\",\n    template: `\n        <ng-content></ng-content>\n    `,\n    host: {\n        \"[class.datagrid-cell]\": \"true\",\n        \"[class.datagrid-cell--hidden]\": \"hidden\",\n        \"[class.datagrid-signpost-trigger]\": \"signpost.length > 0\"\n    }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HideableColumnService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'signpost': [{ type: ContentChildren, args: [Signpost, ] },],\n};\n}\n\nfunction DatagridCell_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridCell.ctorParameters;\n/** @type {?} */\nDatagridCell.propDecorators;\n/**\n * ******\n * \\@property signpost\n * \n * \n * \\@description\n * \\@ContentChild is used to detect the presence of a Signpost in the projected content.\n * On the host, we set the .datagrid-signpost-trigger class on the cell when signpost.length is greater than 0.\n * \n * @type {?}\n */\nDatagridCell.prototype.signpost;\n/**\n * \\@property id\n * \n * \\@description \n * An identifier for an instance of this cell that maps it to a specific column\n * \n * @type {?}\n */\nDatagridCell.prototype.id;\n/** @type {?} */\nDatagridCell.prototype.hideableColumnService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {DatagridHideableColumn} from '../datagrid-hideable-column';\n/**\n * \\@class HideableColumnService\n * \n * \\@description \n * An \\@Injectable provider class that enables\n * \n * 1. Managing, track hideability of DatagridColumns\n * \n */\nexport class HideableColumnService {\n/**\n * *******\n * \\@property dgHiddenColumnMap\n * \n * \\@description \n * An array of DatagridHideableColumn.\n * NOTE: because we can have columns w/o the *clrDgHideableColumn directive\n * this array will have empty spaces a.k.a nulls. This is needed to be able to map\n * DatagridCells to DatagridColumns in the RowRenderer.\n * \n * \n */\nprivate _columnList: DatagridHideableColumn[] = [];\n/**\n * *******\n * \n * \\@property dgHiddenColumnMapChange\n * \n * \\@description \n * A behavior subject that can broadcast updates to the column list.\n * NOTE: I am using BehaviorSubject because <clr-dg-column-toggle> is not getting the latest _columnListChange\n * on page load.\n * \n */\nprivate _columnListChange: BehaviorSubject<DatagridHideableColumn[]> =\n        new BehaviorSubject<DatagridHideableColumn[]>(this._columnList);\n/**\n * *******\n * \n * \\@property canHideNextColumn\n * \n * \\@description \n * Service function that is called by clr-dg-column-toggle component. Use this if you need to ask if you can hide\n * a column. It acts as a guard against hiding all the columns making sure there is at least one column displayed.\n * \n * @return {?}\n */\npublic get canHideNextColumn(): boolean {\n        const /** @type {?} */ hiddenColumns = this._columnList.filter(column => column !== undefined).filter(column => column.hidden);\n        return (this._columnList.length - hiddenColumns.length > 1);\n    }\n/**\n * *******\n * \n * \\@property checkForAllColumnsVisible\n * \n * \\@description \n * For when you need to know if the datagrid's columns are all showing.\n * \n * @return {?}\n */\npublic get checkForAllColumnsVisible(): boolean {\n        return !this._columnList.some(column => column && column.hidden);\n    }\n/**\n * ********\n * \\@property columnListChange\n * \n * \\@description \n * A public property that enables subscribers to hear updates to the column map.\n * Use this if you need to do something whenever the Datagrid's column list is changed (i.e *ngIf on a column).\n * \n * @return {?}\n */\npublic get columnListChange(): Observable<DatagridHideableColumn[]> {\n        return this._columnListChange.asObservable();\n    }\n/**\n * *******\n * \n * \\@function getColumns\n * \n * \\@description \n * Public function that returns the current list of columns. I needed an array of to iterate on in the RowRenderer\n * but subscribing to the _columnListChange changes did not seem like the correct way to get it.\n * \n * @return {?}\n */\npublic getColumns(): DatagridHideableColumn[] {\n        return this._columnList;\n    }\n/**\n * *******\n * \\@function showHiddenColumns\n * \n * \\@description \n * Iterate through the current _columnList:\n * - if it has a DatagridHideableColumn and is hidden then show it.\n * - if it's DatagridHideableColumn was previously the last column visible, turn that flag off.\n * \n * @return {?}\n */\npublic showHiddenColumns() {\n        this._columnList.forEach((column) => {\n            if (column && column.hidden === true) {\n                column.hidden = false;\n            }\n\n            if (column && column.lastVisibleColumn) {\n                column.lastVisibleColumn = false;\n            }\n        });\n    }\n/**\n * \\@function updateColumnList\n * \n * \\@description \n * Creates an array of DatagridHideableColumn's || null based column array passed as param.\n * Is dependent on the order in \\@ContentChildren in Datagrid.\n * \n * @param {?} columns \n * \n * @return {?}\n */\npublic updateColumnList(columns: DatagridHideableColumn[]) {\n        this._columnList = columns;                     // clear the list\n        this.updateForLastVisibleColumn();              // Update our visibility state for UI\n        this._columnListChange.next(this._columnList);  // Broadcast it\n    }\n/**\n * *******\n * \n * \\@function updateForLastVisibleColumn\n * \n * \\@description \n * Gets the current visible count for all columns.\n * When it is greater than 1 it marks everything as false for the lastVisibleColumn.\n * When visible count is not > 1 (i.e) 1. , it finds the only column that is not hidden and marks it as the\n * lastVisibleColumn.\n * \n * @return {?} void\n * \n */\npublic updateForLastVisibleColumn(): void {\n        // There is more than one column showing, make sure nothing is marked lastVisibleColumn\n        if (this.canHideNextColumn) {\n            this._columnList.map((column) => {\n                if (column && column.lastVisibleColumn) {\n                    column.lastVisibleColumn = false;\n                }\n            });\n        } else {\n            // The visibleCount is down to only one column showing. Find it and flag it as the lastVisibleColumn\n            this._columnList.map((column) => {\n                if (column && !column.hidden) {\n                    column.lastVisibleColumn = true;\n                }\n            });\n        }\n    }\n/**\n * *******\n * \n * \\@function getColumnById\n * \n * \\@description \n * Return a HideableColumn in this._columnList for the given id.\n * \n * @param {?} id \n * \n * \n * @return {?} HideableColumn\n * \n */\npublic getColumnById(id: string): undefined|DatagridHideableColumn {\n        if (id) {\n            return this._columnList.find(column => column && column.id === id);\n        }\n        return;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HideableColumnService_tsickle_Closure_declarations() {\n/** @type {?} */\nHideableColumnService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHideableColumnService.ctorParameters;\n/**\n * *******\n * \\@property dgHiddenColumnMap\n * \n * \\@description \n * An array of DatagridHideableColumn.\n * NOTE: because we can have columns w/o the *clrDgHideableColumn directive\n * this array will have empty spaces a.k.a nulls. This is needed to be able to map\n * DatagridCells to DatagridColumns in the RowRenderer.\n * \n * \n * @type {?}\n */\nHideableColumnService.prototype._columnList;\n/**\n * *******\n * \n * \\@property dgHiddenColumnMapChange\n * \n * \\@description \n * A behavior subject that can broadcast updates to the column list.\n * NOTE: I am using BehaviorSubject because <clr-dg-column-toggle> is not getting the latest _columnListChange\n * on page load.\n * \n * @type {?}\n */\nHideableColumnService.prototype._columnListChange;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n    Component,\n    ContentChild,\n    ElementRef,\n} from '@angular/core';\n\nimport {IfOpenService} from '../../utils/conditional/if-open.service';\nimport {POPOVER_HOST_ANCHOR} from '../common/popover-host-anchor.token';\n\nimport {SignpostTriggerDirective} from './signpost-trigger.directive';\n/**\n * ******\n * \n * \\@class Signpost\n * \n * \\@description \n * Class used to configure and control the state of a Signpost and its associated SignpostContent.\n * It supports the clrPosition with a 'right-middle' default.\n * \n */\nexport class Signpost {\n/**\n * *******\n * \\@property useCustomTrigger\n * \n * \\@description \n * Flag used to determine if we need to use the default trigger or a user supplied trigger element.\n * \n */\npublic useCustomTrigger: boolean = false;\n/**\n * *******\n * \\@property signPostTrigger\n * \n * \\@description \n * Uses ContentChild to check for a user supplied element with the SignpostTriggerDirective on it.\n * \n * @param {?} trigger\n * @return {?}\n */\nset customTrigger(trigger: SignpostTriggerDirective) {\n        this.useCustomTrigger = !!trigger;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-signpost\",\n    template: `\n        <ng-container *ngIf=\"!useCustomTrigger\">\n            <button\n                type=\"button\"\n                class=\"signpost-action btn btn-small btn-link\"\n                clrSignpostTrigger>\n                <clr-icon shape=\"info\"></clr-icon>\n            </button>\n        </ng-container>\n        \n        <ng-content></ng-content>\n    `,\n    host: {\"[class.signpost]\": \"true\"},\n    providers: [IfOpenService, {provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'customTrigger': [{ type: ContentChild, args: [SignpostTriggerDirective, ] },],\n};\n}\n\nfunction Signpost_tsickle_Closure_declarations() {\n/** @type {?} */\nSignpost.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSignpost.ctorParameters;\n/** @type {?} */\nSignpost.propDecorators;\n/**\n * *******\n * \\@property useCustomTrigger\n * \n * \\@description \n * Flag used to determine if we need to use the default trigger or a user supplied trigger element.\n * \n * @type {?}\n */\nSignpost.prototype.useCustomTrigger;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, ElementRef, HostListener, OnDestroy, Renderer2} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {IfOpenService} from '../../utils/conditional/if-open.service';\n/**\n * ******\n * \n * \\@class SignpostTriggerDirective\n * \n * \\@Description \n * A Directive added to the Signpost Trigger button that will call the Signpost.toggle() function to hide/show the\n * SignpostContent.\n * \n */\nexport class SignpostTriggerDirective implements OnDestroy {\nprivate subscriptions: Subscription[] = [];\n/**\n * @param {?} ifOpenService\n * @param {?} renderer\n * @param {?} el\n */\nconstructor(private ifOpenService: IfOpenService,\nprivate renderer: Renderer2,\nprivate el: ElementRef) {\n        this.subscriptions.push(this.ifOpenService.openChange.subscribe((isOpen: boolean) => {\n            if (isOpen) {\n                this.renderer.addClass(this.el.nativeElement, \"active\");\n            } else {\n                this.renderer.removeClass(this.el.nativeElement, \"active\");\n            }\n        }));\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    }\n/**\n * *******\n * \\@function onSignpostTriggerClick\n * \n * \\@description \n * click handler for the Signpost trigger button used to hide/show SignpostContent.\n * @param {?} event\n * @return {?}\n */\nonSignpostTriggerClick(event: Event): void {\n        this.ifOpenService.toggleWithEvent(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrSignpostTrigger]\", host: {\"class\": \"signpost-trigger\"}}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IfOpenService, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onSignpostTriggerClick': [{ type: HostListener, args: [\"click\", [\"$event\"], ] },],\n};\n}\n\nfunction SignpostTriggerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nSignpostTriggerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSignpostTriggerDirective.ctorParameters;\n/** @type {?} */\nSignpostTriggerDirective.propDecorators;\n/** @type {?} */\nSignpostTriggerDirective.prototype.subscriptions;\n/** @type {?} */\nSignpostTriggerDirective.prototype.ifOpenService;\n/** @type {?} */\nSignpostTriggerDirective.prototype.renderer;\n/** @type {?} */\nSignpostTriggerDirective.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {ElementRef, InjectionToken} from '@angular/core';\n\nexport const /** @type {?} */ POPOVER_HOST_ANCHOR = new InjectionToken<ElementRef>(\"POPOVER_HOST_ANCHOR\");\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n/**\n * ******\n * \\@class IfOpenService\n * \n * \\@description \n * An injectable service used by IfOpen structural directives and the components that implemnt IfOpen in their\n * templates. It holds the value of the open state and provides an Observable that both the directive and the\n * implementing component can subscribe to in order to take action on open value changes.\n * \n */\nexport class IfOpenService {\n/**\n * *****\n * \\@property _openChange\n * \n * \\@description \n * A RXJS Subject that updates and provides subscriptions to for the current open state of a component template\n * implemting the IfOpen structural directive.\n * \n */\nprivate _openChange: Subject<boolean> = new Subject<boolean>();\n/**\n * ******\n * \\@property _open\n * \n * \\@description \n * A property holding the current value for open/closed state of an IfOpen structural directive.\n * \n */\nprivate _open: boolean;\n/**\n * ******\n * \\@function openChange\n * \n * \\@description \n * A getter function that provides an observable for the _opened Subject.\n * \n * @return {?}\n */\npublic get openChange(): Observable<boolean> {\n        return this._openChange.asObservable();\n    }\n/**\n * ******\n * \\@function open\n * \n * \\@description \n * A setter function that updates the current state of _open for this instance of IfOpen structural directive. And,\n * broadcasts the new value to all subscribers.\n * \n * @param {?} value\n * @return {?}\n */\npublic set open(value: boolean) {\n        value = !!value;\n        if (this._open !== value) {\n            this._open = value;\n            this._openChange.next(value);\n        }\n    }\n/**\n * ******\n * \n * \\@function open\n * \n * \\@description \n * A getter that returns the current value of this IfOpen instance.\n * @return {?}\n */\npublic get open(): boolean {\n        return this._open;\n    }\n/**\n * Sometimes, we need to remember the event that triggered the toggling to avoid loops.\n * This is for instance the case of components that open on a click, but close on a click outside.\n */\npublic originalEvent: any;\n/**\n * @param {?} event\n * @return {?}\n */\npublic toggleWithEvent(event: any) {\n        this.originalEvent = event;\n        this.open = !this.open;\n        delete this.originalEvent;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction IfOpenService_tsickle_Closure_declarations() {\n/** @type {?} */\nIfOpenService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIfOpenService.ctorParameters;\n/**\n * *****\n * \\@property _openChange\n * \n * \\@description \n * A RXJS Subject that updates and provides subscriptions to for the current open state of a component template\n * implemting the IfOpen structural directive.\n * \n * @type {?}\n */\nIfOpenService.prototype._openChange;\n/**\n * ******\n * \\@property _open\n * \n * \\@description \n * A property holding the current value for open/closed state of an IfOpen structural directive.\n * \n * @type {?}\n */\nIfOpenService.prototype._open;\n/**\n * Sometimes, we need to remember the event that triggered the toggling to avoid loops.\n * This is for instance the case of components that open on a click, but close on a click outside.\n * @type {?}\n */\nIfOpenService.prototype.originalEvent;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component} from '@angular/core';\nimport {Items} from './providers/items';\nimport {Page} from './providers/page';\nexport class DatagridPlaceholder {\n/**\n * @param {?} items\n * @param {?} page\n */\nconstructor(private items: Items,\nprivate page: Page) {}\n/**\n * Tests if the datagrid is empty, meaning it doesn't contain any items\n * @return {?}\n */\npublic get emptyDatagrid() {\n        return !this.items.loading && (!this.items.displayed || this.items.displayed.length === 0);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-placeholder\",\n    template: `\n        <div\n            class=\"datagrid-placeholder\"\n            [class.datagrid-empty]=\"emptyDatagrid\">\n                <div class=\"datagrid-placeholder-image\" *ngIf=\"emptyDatagrid\"></div>\n                <ng-content *ngIf=\"emptyDatagrid\"></ng-content>\n        </div>\n    `,\n    host: {\"[class.datagrid-placeholder-container]\": \"true\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Items, },\n{type: Page, },\n];\n}\n\nfunction DatagridPlaceholder_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridPlaceholder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridPlaceholder.ctorParameters;\n/** @type {?} */\nDatagridPlaceholder.prototype.items;\n/** @type {?} */\nDatagridPlaceholder.prototype.page;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n    Directive,\n    DoCheck,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    OnChanges,\n    SimpleChanges,\n    TemplateRef,\n    TrackByFunction\n} from '@angular/core';\n\nimport {Items} from './providers/items';\nexport class DatagridItems implements OnChanges, DoCheck {\nprivate _rawItems: any[];\n/**\n * @param {?} items\n * @return {?}\n */\npublic set rawItems(items: any[]) {\n        this._rawItems = items ? items : [];\n    }\nprivate _differ: IterableDiffer<any>;\n/**\n * @param {?} template\n * @param {?} _differs\n * @param {?} _items\n */\nconstructor(public template: TemplateRef<any>,\nprivate _differs: IterableDiffers,\nprivate _items: Items) {\n        _items.smartenUp();\n    }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n        if (\"rawItems\" in changes) {\n            const /** @type {?} */ currentItems = changes.rawItems.currentValue;\n            if (!this._differ && currentItems) {\n                this._differ = this._differs.find(currentItems).create(this._items.trackBy);\n            }\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset trackBy(value: TrackByFunction<any>) {\n        this._items.trackBy = value;\n    }\n/**\n * @return {?}\n */\nngDoCheck() {\n        if (this._differ) {\n            const /** @type {?} */ changes = this._differ.diff(this._rawItems);\n            if (changes) {\n                // TODO: not very efficient right now,\n                // but premature optimization is the root of all evil.\n                this._items.all = this._rawItems;\n            }\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: \"[clrDgItems][clrDgItemsOf]\",\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: IterableDiffers, },\n{type: Items, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'rawItems': [{ type: Input, args: [\"clrDgItemsOf\", ] },],\n'trackBy': [{ type: Input, args: [\"clrDgItemsTrackBy\", ] },],\n};\n}\n\nfunction DatagridItems_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridItems.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridItems.ctorParameters;\n/** @type {?} */\nDatagridItems.propDecorators;\n/** @type {?} */\nDatagridItems.prototype._rawItems;\n/** @type {?} */\nDatagridItems.prototype._differ;\n/** @type {?} */\nDatagridItems.prototype.template;\n/** @type {?} */\nDatagridItems.prototype._differs;\n/** @type {?} */\nDatagridItems.prototype._items;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable, TrackByFunction} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {FiltersProvider} from './filters';\nimport {Page} from './page';\nimport {Sort} from './sort';\nexport class Items {\n/**\n * @param {?} _filters\n * @param {?} _sort\n * @param {?} _page\n */\nconstructor(private _filters: FiltersProvider,\nprivate _sort: Sort,\nprivate _page: Page) {}\n/**\n * Indicates if the data is currently loading\n */\npublic loading = false;\n/**\n * Tracking function to identify objects. Default is reference equality.\n */\npublic trackBy: TrackByFunction<any> = (index: number, item: any) => item;\n/**\n * Subscriptions to the other providers changes.\n */\nprivate _filtersSub: Subscription;\nprivate _sortSub: Subscription;\nprivate _pageSub: Subscription;\n/**\n * Cleans up our subscriptions to other providers\n * @return {?}\n */\npublic destroy() {\n        if (this._filtersSub) {\n            this._filtersSub.unsubscribe();\n        }\n        if (this._sortSub) {\n            this._sortSub.unsubscribe();\n        }\n        if (this._pageSub) {\n            this._pageSub.unsubscribe();\n        }\n    }\n/**\n * Whether we should use smart items for this datagrid or let the user handle\n * everything.\n */\nprivate _smart = false;\n/**\n * @return {?}\n */\npublic get smart(): boolean {\n        return this._smart;\n    }\n/**\n * @return {?}\n */\npublic smartenUp() {\n        this._smart = true;\n        /*\n         * These observers trigger a chain of function: filter -> sort -> paginate\n         * An observer up the chain re-triggers all the operations that follow it.\n         */\n        this._filtersSub = this._filters.change.subscribe(() => this._filterItems());\n        this._sortSub = this._sort.change.subscribe(() => {\n            // Special case, if the datagrid went from sorted to unsorted, we have to re-filter\n            // to get the original order back\n            if (!this._sort.comparator) {\n                this._filterItems();\n            } else {\n                this._sortItems();\n            }\n        });\n        this._pageSub = this._page.change.subscribe(() => this._changePage());\n    }\n/**\n * List of all items in the datagrid\n */\nprivate _all: any[];\n/**\n * @param {?} items\n * @return {?}\n */\npublic set all(items: any[]) {\n        if (this.smart) {\n            this._all = items;\n            this.emitAllChanges();\n            this._filterItems();\n        } else {\n            this._displayed = items;\n            this.emitChange();\n        }\n    }\n/**\n * Manually recompute the list of displayed items\n * @return {?}\n */\npublic refresh() {\n        if (this.smart) {\n            this._filterItems();\n        }\n    }\n/**\n * Internal temporary step, which we preserve to avoid re-filtering or re-sorting if not necessary\n */\nprivate _filtered: any[];\n/**\n * List of items currently displayed\n */\nprivate _displayed: any[] = [];\n/**\n * @return {?}\n */\npublic get displayed(): any[] {\n        // Ideally we could return an immutable array, but we don't have it in Clarity yet.\n        return this._displayed;\n    }\n/**\n * The Observable that lets other classes subscribe to items changes\n */\nprivate _change = new Subject<any[]>();\n/**\n * @return {?}\n */\nprivate emitChange() {\n        this._change.next(this.displayed);\n    }\n/**\n * @return {?}\n */\npublic get change(): Observable<any[]> {\n        return this._change.asObservable();\n    }\nprivate _allChanges = new Subject<any[]>();\n/**\n * @return {?}\n */\nprivate emitAllChanges(): void {\n        if (this.smart) {\n            this._allChanges.next(this._all);\n        }\n    }\n/**\n * @return {?}\n */\npublic get allChanges(): Observable<any[]> {\n        return this._allChanges.asObservable();\n    }\n/**\n * Checks if we don't have data to process yet, to abort early operations\n * @return {?}\n */\nprivate get uninitialized() {\n        return !this._all;\n    }\n/**\n * FiltersProvider items from the raw list\n * @return {?}\n */\nprivate _filterItems() {\n        if (this.uninitialized) {\n            return;\n        }\n        if (this._filters.hasActiveFilters()) {\n            this._filtered = this._all.filter((item) => this._filters.accepts(item));\n        } else {\n            // Work on a shallow copy of the array, to not modify the user's model\n            this._filtered = this._all.slice();\n        }\n        this._page.totalItems = this._filtered.length;\n        this._sortItems();\n    }\n/**\n * Sorts items in the filtered list\n * @return {?}\n */\nprivate _sortItems() {\n        if (this.uninitialized) {\n            return;\n        }\n        if (this._sort.comparator) {\n            this._filtered.sort((a, b) => this._sort.compare(a, b));\n        }\n        this._changePage();\n    }\n/**\n * Extracts the current page from the sorted list\n * @return {?}\n */\nprivate _changePage() {\n        if (this.uninitialized) {\n            return;\n        }\n        if (this._page.size > 0) {\n            this._displayed = this._filtered.slice(this._page.firstItem, this._page.lastItem + 1);\n        } else {\n            this._displayed = this._filtered;\n        }\n        this.emitChange();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FiltersProvider, },\n{type: Sort, },\n{type: Page, },\n];\n}\n\nfunction Items_tsickle_Closure_declarations() {\n/** @type {?} */\nItems.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nItems.ctorParameters;\n/**\n * Indicates if the data is currently loading\n * @type {?}\n */\nItems.prototype.loading;\n/**\n * Tracking function to identify objects. Default is reference equality.\n * @type {?}\n */\nItems.prototype.trackBy;\n/**\n * Subscriptions to the other providers changes.\n * @type {?}\n */\nItems.prototype._filtersSub;\n/** @type {?} */\nItems.prototype._sortSub;\n/** @type {?} */\nItems.prototype._pageSub;\n/**\n * Whether we should use smart items for this datagrid or let the user handle\n * everything.\n * @type {?}\n */\nItems.prototype._smart;\n/**\n * List of all items in the datagrid\n * @type {?}\n */\nItems.prototype._all;\n/**\n * Internal temporary step, which we preserve to avoid re-filtering or re-sorting if not necessary\n * @type {?}\n */\nItems.prototype._filtered;\n/**\n * List of items currently displayed\n * @type {?}\n */\nItems.prototype._displayed;\n/**\n * The Observable that lets other classes subscribe to items changes\n * @type {?}\n */\nItems.prototype._change;\n/** @type {?} */\nItems.prototype._allChanges;\n/** @type {?} */\nItems.prototype._filters;\n/** @type {?} */\nItems.prototype._sort;\n/** @type {?} */\nItems.prototype._page;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, ContentChild, ElementRef, EventEmitter, HostBinding, Input, Output, ViewChild} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {DatagridPropertyComparator} from './built-in/comparators/datagrid-property-comparator';\nimport {DatagridPropertyStringFilter} from './built-in/filters/datagrid-property-string-filter';\nimport {DatagridStringFilterImpl} from './built-in/filters/datagrid-string-filter-impl';\nimport {DatagridHideableColumn} from './datagrid-hideable-column';\nimport {Comparator} from './interfaces/comparator';\nimport {SortOrder} from './interfaces/sort-order';\nimport {CustomFilter} from './providers/custom-filter';\nimport {DragDispatcher} from './providers/drag-dispatcher';\nimport {FiltersProvider} from './providers/filters';\nimport {Sort} from './providers/sort';\nimport {DatagridFilterRegistrar} from './utils/datagrid-filter-registrar';\n\nlet /** @type {?} */ nbCount: number = 0;\nexport class DatagridColumn extends DatagridFilterRegistrar<DatagridStringFilterImpl> {\n/**\n * @param {?} _sort\n * @param {?} filters\n * @param {?} _dragDispatcher\n */\nconstructor(private _sort: Sort, filters: FiltersProvider,\nprivate _dragDispatcher: DragDispatcher) {\n        super(filters);\n        this._sortSubscription = _sort.change.subscribe(sort => {\n            // We're only listening to make sure we emit an event when the column goes from sorted to unsorted\n            if (this.sortOrder !== SortOrder.Unsorted && sort.comparator !== this._sortBy) {\n                this._sortOrder = SortOrder.Unsorted;\n                this.sortOrderChange.emit(this._sortOrder);\n            }\n            // deprecated: to be removed - START\n            if (this.sorted && sort.comparator !== this._sortBy) {\n                this._sorted = false;\n                this.sortedChange.emit(false);\n            }\n            // deprecated: to be removed - END\n        });\n\n        this.columnId = \"dg-col-\" + nbCount.toString();  // Approximate a GUID\n        nbCount++;\n        // put index here\n    }\n/**\n * \\@property columnId\n * \n * \\@description \n * A DatagridColumn class variable that holds the number of DatagridColumn instances for a Datagrid.\n * It is used to generate a unique id for the DatagridColumn instance.\n * \n */\npublic columnId: string;\n/**\n * \\@property hidden\n * \n * \\@description \n * A property that allows the column to be hidden / shown with css\n * Note the default allows the DatagridColumn to have an *ngIf on it. (EHCAIWC - will occur if its not initialized)\n * \n * \\@default false\n * \n * @return {?}\n */\npublic get hidden(): boolean {\n        return !!this.hideable && this.hideable.hidden;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset handleElRef(value: ElementRef) {\n        this._dragDispatcher.handleRef = value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset handleTrackerElRef(value: ElementRef) {\n        this._dragDispatcher.handleTrackerRef = value;\n    }\n/**\n * Subscription to the sort service changes\n */\nprivate _sortSubscription: Subscription;\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this._sortSubscription.unsubscribe();\n    }\nprivate _field: string;\n/**\n * @return {?}\n */\npublic get field() {\n        return this._field;\n    }\n/**\n * @param {?} field\n * @return {?}\n */\npublic set field(field: string) {\n        if (typeof field === \"string\") {\n            this._field = field;\n            if (!this.customFilter) {\n                this.setFilter(new DatagridStringFilterImpl(new DatagridPropertyStringFilter(field)));\n            }\n            if (!this._sortBy) {\n                this._sortBy = new DatagridPropertyComparator(field);\n            }\n        }\n    }\n/**\n * Comparator to use when sorting the column\n */\nprivate _sortBy: Comparator<any>;\n/**\n * @return {?}\n */\npublic get sortBy() {\n        return this._sortBy;\n    }\n/**\n * @param {?} comparator\n * @return {?}\n */\npublic set sortBy(comparator: Comparator<any>|string) {\n        if (typeof comparator === \"string\") {\n            this._sortBy = new DatagridPropertyComparator(comparator);\n        } else {\n            if (comparator) {\n                this._sortBy = comparator;\n            } else {\n                if (this._field) {\n                    this._sortBy = new DatagridPropertyComparator(this._field);\n                } else {\n                    delete this._sortBy;\n                }\n            }\n        }\n    }\n/**\n * Indicates if the column is sortable\n * @return {?}\n */\npublic get sortable(): boolean {\n        return !!this._sortBy;\n    }\n/**\n * Indicates if the column is currently sorted\n * \n * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n */\nprivate _sorted = false;\n/**\n * @return {?}\n */\npublic get sorted() {\n        return this._sorted;\n    }\n/**\n * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n * @param {?} value\n * @return {?}\n */\npublic set sorted(value: boolean) {\n        if (!value && this.sorted) {\n            this._sorted = false;\n            this._sort.clear();\n        } else if (value && !this.sorted) {\n            this.sort();\n        }\n    }\n/**\n * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n */\npublic sortedChange = new EventEmitter<boolean>();\n/**\n * Indicates how the column is currently sorted\n */\nprivate _sortOrder: SortOrder = SortOrder.Unsorted;\n/**\n * @return {?}\n */\npublic get sortOrder() {\n        return this._sortOrder;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set sortOrder(value: SortOrder) {\n        if (typeof value === \"undefined\") {\n            return;\n        }\n\n        // only if the incoming order is different from the current one\n        if (this._sortOrder === value) {\n            return;\n        }\n\n        switch (value) {\n            // the Unsorted case happens when the current state is either Asc or Desc\n            default:\n            case SortOrder.Unsorted:\n                this._sort.clear();\n                break;\n            case SortOrder.Asc:\n                this.sort(false);\n                break;\n            case SortOrder.Desc:\n                this.sort(true);\n                break;\n        }\n    }\npublic sortOrderChange = new EventEmitter<SortOrder>();\n/**\n * Sorts the datagrid based on this column\n * @param {?=} reverse\n * @return {?}\n */\npublic sort(reverse?: boolean) {\n        if (!this.sortable) {\n            return;\n        }\n\n        this._sort.toggle(this._sortBy, reverse);\n\n        // setting the private variable to not retrigger the setter logic\n        this._sortOrder = this._sort.reverse ? SortOrder.Desc : SortOrder.Asc;\n        this.sortOrderChange.emit(this._sortOrder);\n\n        // deprecated: to be removed - START\n        this._sorted = true;\n        this.sortedChange.emit(true);\n        // deprecated: to be removed - END\n    }\n/**\n * Indicates if the column is currently sorted in ascending order\n * @return {?}\n */\npublic get asc() {\n        // deprecated: if condition to be removed - START\n        if (typeof this.sortOrder === \"undefined\") {\n            return this.sorted && !this._sort.reverse;\n        } else {\n            return this.sortOrder === SortOrder.Asc;\n        }\n        // deprecated: if condition to be removed - END\n    }\n/**\n * Indicates if the column is currently sorted in descending order\n * @return {?}\n */\npublic get desc() {\n        // deprecated: if condition to be removed - START\n        if (typeof this.sortOrder === \"undefined\") {\n            return this.sorted && this._sort.reverse;\n        } else {\n            return this.sortOrder === SortOrder.Desc;\n        }\n        // deprecated: if condition to be removed - END\n    }\n/**\n * A custom filter for this column that can be provided in the projected content\n */\npublic customFilter = false;\n/**\n * @param {?} custom\n * @return {?}\n */\npublic set projectedFilter(custom: any) {\n        if (custom) {\n            this.deleteFilter();\n            this.customFilter = true;\n        }\n    }\n/**\n * @return {?}\n */\npublic get filterValue() {\n        return this.filter.value;\n    }\n/**\n * @param {?} newValue\n * @return {?}\n */\npublic set filterValue(newValue: string) {\n        if (!this.filter) {\n            return;\n        }\n        if (!newValue) {\n            newValue = \"\";\n        }\n        if (newValue !== this.filter.value) {\n            this.filter.value = newValue;\n            this.filterValueChange.emit(newValue);\n        }\n    }\n\n     filterValueChange = new EventEmitter();\n/**\n * ********\n * \n * \\@property hideable\n * \n * \\@description \n * When a column is hideable this is defined with an instance of DatagridHideableColumn.\n * When its not hideable should be undefined.\n * \n */\npublic hideable: DatagridHideableColumn;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-column\",\n    template: `\n        <div class=\"datagrid-column-flex\">\n            <!-- I'm really not happy with that select since it's not very scalable -->\n            <ng-content select=\"clr-dg-filter, clr-dg-string-filter\"></ng-content>\n\n            <clr-dg-string-filter\n                    *ngIf=\"field && !customFilter\"\n                    [clrDgStringFilter]=\"registered\"\n                    [(clrFilterValue)]=\"filterValue\"></clr-dg-string-filter>\n\n            <ng-template #columnTitle><ng-content></ng-content></ng-template>\n\n            <button class=\"datagrid-column-title\" *ngIf=\"sortable\" (click)=\"sort()\" type=\"button\">\n               <ng-container *ngTemplateOutlet=\"columnTitle\"></ng-container>\n            </button>\n\n            <span class=\"datagrid-column-title\" *ngIf=\"!sortable\">\n               <ng-container *ngTemplateOutlet=\"columnTitle\"></ng-container>\n            </span>\n\n            <div class=\"datagrid-column-separator\">\n                <button #columnHandle class=\"datagrid-column-handle\" tabindex=\"-1\" type=\"button\"></button>\n                <div #columnHandleTracker class=\"datagrid-column-handle-tracker\"></div>\n            </div>\n        </div>\n    `,\n    host: {\"[class.datagrid-column]\": \"true\", \"[class.datagrid-column--hidden]\": \"hidden\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Sort, },\n{type: FiltersProvider, },\n{type: DragDispatcher, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'handleElRef': [{ type: ViewChild, args: [\"columnHandle\", ] },],\n'handleTrackerElRef': [{ type: ViewChild, args: [\"columnHandleTracker\", ] },],\n'field': [{ type: Input, args: [\"clrDgField\", ] },],\n'sortBy': [{ type: Input, args: [\"clrDgSortBy\", ] },],\n'sorted': [{ type: Input, args: [\"clrDgSorted\", ] },],\n'sortedChange': [{ type: Output, args: [\"clrDgSortedChange\", ] },],\n'sortOrder': [{ type: Input, args: [\"clrDgSortOrder\", ] },],\n'sortOrderChange': [{ type: Output, args: [\"clrDgSortOrderChange\", ] },],\n'asc': [{ type: HostBinding, args: [\"class.asc\", ] },],\n'desc': [{ type: HostBinding, args: [\"class.desc\", ] },],\n'projectedFilter': [{ type: ContentChild, args: [CustomFilter, ] },],\n'filterValue': [{ type: Input, args: [\"clrFilterValue\", ] },],\n'filterValueChange': [{ type: Output, args: [\"clrFilterValueChange\", ] },],\n};\n}\n\nfunction DatagridColumn_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridColumn.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridColumn.ctorParameters;\n/** @type {?} */\nDatagridColumn.propDecorators;\n/**\n * \\@property columnId\n * \n * \\@description \n * A DatagridColumn class variable that holds the number of DatagridColumn instances for a Datagrid.\n * It is used to generate a unique id for the DatagridColumn instance.\n * \n * @type {?}\n */\nDatagridColumn.prototype.columnId;\n/**\n * Subscription to the sort service changes\n * @type {?}\n */\nDatagridColumn.prototype._sortSubscription;\n/** @type {?} */\nDatagridColumn.prototype._field;\n/**\n * Comparator to use when sorting the column\n * @type {?}\n */\nDatagridColumn.prototype._sortBy;\n/**\n * Indicates if the column is currently sorted\n * \n * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n * @type {?}\n */\nDatagridColumn.prototype._sorted;\n/**\n * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n * @type {?}\n */\nDatagridColumn.prototype.sortedChange;\n/**\n * Indicates how the column is currently sorted\n * @type {?}\n */\nDatagridColumn.prototype._sortOrder;\n/** @type {?} */\nDatagridColumn.prototype.sortOrderChange;\n/**\n * A custom filter for this column that can be provided in the projected content\n * @type {?}\n */\nDatagridColumn.prototype.customFilter;\n/** @type {?} */\nDatagridColumn.prototype.filterValueChange;\n/**\n * ********\n * \n * \\@property hideable\n * \n * \\@description \n * When a column is hideable this is defined with an instance of DatagridHideableColumn.\n * When its not hideable should be undefined.\n * \n * @type {?}\n */\nDatagridColumn.prototype.hideable;\n/** @type {?} */\nDatagridColumn.prototype._sort;\n/** @type {?} */\nDatagridColumn.prototype._dragDispatcher;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\nimport {Comparator} from '../interfaces/comparator';\nimport {StateDebouncer} from './state-debouncer.provider';\nexport class Sort {\n/**\n * @param {?} stateDebouncer\n */\nconstructor(private stateDebouncer: StateDebouncer) {}\n/**\n * Currently active comparator\n */\nprivate _comparator: Comparator<any>;\n/**\n * @return {?}\n */\npublic get comparator(): Comparator<any> {\n        return this._comparator;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set comparator(value: Comparator<any>) {\n        this.stateDebouncer.changeStart();\n        this._comparator = value;\n        this.emitChange();\n        this.stateDebouncer.changeDone();\n    }\n/**\n * Ascending order if false, descending if true\n */\nprivate _reverse: boolean = false;\n/**\n * @return {?}\n */\npublic get reverse(): boolean {\n        return this._reverse;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set reverse(value: boolean) {\n        this.stateDebouncer.changeStart();\n        this._reverse = value;\n        this.emitChange();\n        this.stateDebouncer.changeDone();\n    }\n/**\n * The Observable that lets other classes subscribe to sort changes\n */\nprivate _change = new Subject<Sort>();\n/**\n * @return {?}\n */\nprivate emitChange() {\n        this._change.next(this);\n    }\n/**\n * @return {?}\n */\npublic get change(): Observable<Sort> {\n        return this._change.asObservable();\n    }\n/**\n * Sets a comparator as the current one, or toggles reverse if the comparator is already used. The\n * optional forceReverse input parameter allows to override that toggling behavior by sorting in\n * reverse order if `true`.\n * \n * \n * \\@memberof Sort\n * @param {?} sortBy\n * @param {?=} forceReverse\n * @return {?}\n */\npublic toggle(sortBy: Comparator<any>, forceReverse?: boolean) {\n        this.stateDebouncer.changeStart();\n        // We modify private properties directly, to batch the change event\n        if (this.comparator === sortBy) {\n            this._reverse = typeof forceReverse !== \"undefined\" ? forceReverse || !this._reverse : !this._reverse;\n        } else {\n            this._comparator = sortBy;\n            this._reverse = typeof forceReverse !== \"undefined\" ? forceReverse : false;\n        }\n        this.emitChange();\n        this.stateDebouncer.changeDone();\n    }\n/**\n * Clears the current sorting order\n * @return {?}\n */\npublic clear() {\n        this.comparator = null;\n    }\n/**\n * Compares two objects according to the current comparator\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\npublic compare(a: any, b: any): number {\n        return (this.reverse ? -1 : 1) * this.comparator.compare(a, b);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: StateDebouncer, },\n];\n}\n\nfunction Sort_tsickle_Closure_declarations() {\n/** @type {?} */\nSort.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSort.ctorParameters;\n/**\n * Currently active comparator\n * @type {?}\n */\nSort.prototype._comparator;\n/**\n * Ascending order if false, descending if true\n * @type {?}\n */\nSort.prototype._reverse;\n/**\n * The Observable that lets other classes subscribe to sort changes\n * @type {?}\n */\nSort.prototype._change;\n/** @type {?} */\nSort.prototype.stateDebouncer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {ElementRef, Injectable, NgZone, Renderer2} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nexport class DragDispatcher {\nprivate _listeners: Function[];\n\n    // Will be listening to Drag events on the following element\n    handleRef: ElementRef;\n\n    // Extra element to be used for tracking drag movements.\n    handleTrackerRef: ElementRef;\nprivate _onDragStart: Subject<void> = new Subject<void>();\nprivate _onDragMove: Subject<void> = new Subject<void>();\nprivate _onDragEnd: Subject<void> = new Subject<void>();\n/**\n * @return {?}\n */\nget onDragStart(): Observable<any> {\n        return this._onDragStart;\n    }\n/**\n * @return {?}\n */\nget onDragMove(): Observable<any> {\n        return this._onDragMove;\n    }\n/**\n * @return {?}\n */\nget onDragEnd(): Observable<any> {\n        return this._onDragEnd;\n    }\n/**\n * @param {?} _ngZone\n * @param {?} _renderer\n */\nconstructor(private _ngZone: NgZone,\nprivate _renderer: Renderer2) {}\n/**\n * @return {?}\n */\naddDragListener() {\n        const /** @type {?} */ handleEl = this.handleRef.nativeElement;\n        this._listeners = [\n            this.customDragEvent(handleEl, \"mousedown\", \"mousemove\", \"mouseup\"),\n            this.customDragEvent(handleEl, \"touchstart\", \"touchmove\", \"touchend\")\n        ];\n    }\n/**\n * @param {?} element\n * @param {?} startOnEvent\n * @param {?} moveOnEvent\n * @param {?} endOnEvent\n * @return {?}\n */\ncustomDragEvent(element: HTMLElement, startOnEvent: string, moveOnEvent: string, endOnEvent: string): Function {\n        let /** @type {?} */ dragMoveListener: any;\n        let /** @type {?} */ dragEndListener: any;\n\n        return this._renderer.listen(element, startOnEvent, (startEvent: any) => {\n            this.notifyDragStart(startEvent);\n\n            dragMoveListener = this._ngZone.runOutsideAngular(() => {\n                return this._renderer.listen(\"document\", moveOnEvent, (moveEvent: any) => {\n                    this.notifyDragMove(moveEvent);\n                });\n            });\n\n            dragEndListener = this._renderer.listen(\"document\", endOnEvent, (endEvent: any) => {\n\n                // Unsubscribing from mouseMoveListener\n                dragMoveListener();\n                this.notifyDragEnd(endEvent);\n                // Unsubscribing from itself\n                dragEndListener();\n            });\n\n        });\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nnotifyDragStart(event: any) {\n        return this._onDragStart.next(event);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nnotifyDragMove(event: any) {\n        return this._onDragMove.next(event);\n    }\n/**\n * @param {?} event\n * @return {?}\n */\nnotifyDragEnd(event: any) {\n        return this._onDragEnd.next(event);\n    }\n/**\n * @return {?}\n */\ndestroy() {\n        this._listeners.map(event => event());\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: Renderer2, },\n];\n}\n\nfunction DragDispatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nDragDispatcher.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDragDispatcher.ctorParameters;\n/** @type {?} */\nDragDispatcher.prototype._listeners;\n/** @type {?} */\nDragDispatcher.prototype.handleRef;\n/** @type {?} */\nDragDispatcher.prototype.handleTrackerRef;\n/** @type {?} */\nDragDispatcher.prototype._onDragStart;\n/** @type {?} */\nDragDispatcher.prototype._onDragMove;\n/** @type {?} */\nDragDispatcher.prototype._onDragEnd;\n/** @type {?} */\nDragDispatcher.prototype._ngZone;\n/** @type {?} */\nDragDispatcher.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport type SortOrder = number;\nexport let SortOrder: any = {};\nSortOrder.Unsorted = 0;\nSortOrder.Asc = 1;\nSortOrder.Desc = -1;\nSortOrder[SortOrder.Unsorted] = \"Unsorted\";\nSortOrder[SortOrder.Asc] = \"Asc\";\nSortOrder[SortOrder.Desc] = \"Desc\";\n\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {StringFilter} from '../../interfaces/string-filter';\nimport {NestedProperty} from '../nested-property';\nexport class DatagridPropertyStringFilter implements StringFilter<any> {\nprivate nestedProp: NestedProperty;\n/**\n * @param {?} prop\n * @param {?=} exact\n */\nconstructor(public prop: string,\npublic exact = false) {\n        this.nestedProp = new NestedProperty(prop);\n    }\n/**\n * @param {?} item\n * @param {?} search\n * @return {?}\n */\naccepts(item: any, search: string): boolean {\n        const /** @type {?} */ propValue = this.nestedProp.getPropValue(item);\n        if (typeof propValue === \"undefined\") {\n            return false;\n        } else if (this.exact) {\n            return (\"\" + propValue).toLowerCase() === search;\n        } else {\n            return (\"\" + propValue).toLowerCase().indexOf(search) >= 0;\n        }\n    }\n}\n\nfunction DatagridPropertyStringFilter_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridPropertyStringFilter.prototype.nestedProp;\n/** @type {?} */\nDatagridPropertyStringFilter.prototype.prop;\n/** @type {?} */\nDatagridPropertyStringFilter.prototype.exact;\n}\n\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Comparator} from '../../interfaces/comparator';\nimport {NestedProperty} from '../nested-property';\nexport class DatagridPropertyComparator implements Comparator<any> {\nprivate nestedProp: NestedProperty;\n/**\n * @param {?} prop\n */\nconstructor(public prop: string) {\n        this.nestedProp = new NestedProperty(prop);\n    }\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\npublic compare(a: any, b: any): number {\n        let /** @type {?} */ propA = this.nestedProp.getPropValue(a);\n        let /** @type {?} */ propB = this.nestedProp.getPropValue(b);\n\n        if (typeof propA === \"string\") {\n            propA = propA.toLowerCase();\n        }\n\n        if (typeof propB === \"string\") {\n            propB = propB.toLowerCase();\n        }\n\n        if (typeof propA === \"undefined\" || propA === null) {\n            if (typeof propB === \"undefined\" || propB === null) {\n                return 0;\n            } else {\n                return 1;\n            }\n        } else {\n            if (typeof propB === \"undefined\" || propB === null) {\n                return -1;\n            } else if (propA < propB) {\n                return -1;\n            } else if (propA > propB) {\n                return 1;\n            } else {\n                return 0;\n            }\n        }\n    }\n}\n\nfunction DatagridPropertyComparator_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridPropertyComparator.prototype.nestedProp;\n/** @type {?} */\nDatagridPropertyComparator.prototype.prop;\n}\n","\n/**\n * Generic accessor for deep object properties\n * that can be specified as simple dot-separated strings.\n */\nexport class NestedProperty {\nprivate splitProp: string[];\n/**\n * @param {?} prop\n */\nconstructor(private prop: string) {\n        if (prop.indexOf(\".\") >= 0) {\n            this.splitProp = prop.split(\".\");\n        }\n    }\n/**\n * @param {?} item\n * @return {?}\n */\npublic getPropValue(item: any): any {\n        if (this.splitProp) {\n            let /** @type {?} */ value = item;\n            for (const /** @type {?} */ nestedProp of this.splitProp) {\n                if (value == null || typeof value === \"undefined\" || typeof value[nestedProp] === \"undefined\") {\n                    return undefined;\n                }\n                value = value[nestedProp];\n            }\n            return value;\n        } else {\n            return item[this.prop];\n        }\n    }\n}\n\nfunction NestedProperty_tsickle_Closure_declarations() {\n/** @type {?} */\nNestedProperty.prototype.splitProp;\n/** @type {?} */\nNestedProperty.prototype.prop;\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {ChangeDetectorRef, Directive, Optional} from '@angular/core';\nimport {OompaLoompa} from '../../../utils/chocolate/oompa-loompa';\nimport {ExpandableRowsCount} from '../providers/global-expandable-rows';\nimport {DatagridWillyWonka} from './datagrid-willy-wonka';\nexport class ExpandableOompaLoompa extends OompaLoompa {\nprivate expandableCount: ExpandableRowsCount;\n/**\n * @param {?} cdr\n * @param {?} willyWonka\n * @param {?} expandableCount\n */\nconstructor(cdr: ChangeDetectorRef,  willyWonka: DatagridWillyWonka,\n                expandableCount: ExpandableRowsCount) {\n        if (!willyWonka) {\n            throw new Error(\"clr-dg-row should only be used inside of a clr-datagrid\");\n        }\n        super(cdr, willyWonka);\n        this.expandableCount = expandableCount;\n    }\n/**\n * @return {?}\n */\nget flavor() {\n        return this.expandableCount.hasExpandableRow;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-datagrid, clr-dg-row\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: DatagridWillyWonka, decorators: [{ type: Optional }, ]},\n{type: ExpandableRowsCount, },\n];\n}\n\nfunction ExpandableOompaLoompa_tsickle_Closure_declarations() {\n/** @type {?} */\nExpandableOompaLoompa.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExpandableOompaLoompa.ctorParameters;\n/** @type {?} */\nExpandableOompaLoompa.prototype.expandableCount;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\nexport class ExpandableRowsCount {\nprivate expandableCount = 0;\n/**\n * @return {?}\n */\npublic register() {\n        this.expandableCount++;\n    }\n/**\n * @return {?}\n */\npublic unregister() {\n        this.expandableCount--;\n    }\n/**\n * false means no rows with action\n * @return {?}\n */\npublic get hasExpandableRow(): boolean {\n        return this.expandableCount > 0;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ExpandableRowsCount_tsickle_Closure_declarations() {\n/** @type {?} */\nExpandableRowsCount.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExpandableRowsCount.ctorParameters;\n/** @type {?} */\nExpandableRowsCount.prototype.expandableCount;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {ChangeDetectorRef, Directive, Optional} from '@angular/core';\nimport {OompaLoompa} from '../../../utils/chocolate/oompa-loompa';\nimport {RowActionService} from '../providers/row-action-service';\nimport {DatagridWillyWonka} from './datagrid-willy-wonka';\nexport class ActionableOompaLoompa extends OompaLoompa {\nprivate rowActions: RowActionService;\n/**\n * @param {?} cdr\n * @param {?} willyWonka\n * @param {?} rowActions\n */\nconstructor(cdr: ChangeDetectorRef,  willyWonka: DatagridWillyWonka, rowActions: RowActionService) {\n        if (!willyWonka) {\n            throw new Error(\"clr-dg-row should only be used inside of a clr-datagrid\");\n        }\n        super(cdr, willyWonka);\n        this.rowActions = rowActions;\n    }\n/**\n * @return {?}\n */\nget flavor() {\n        return this.rowActions.hasActionableRow;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-datagrid, clr-dg-row\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n{type: DatagridWillyWonka, decorators: [{ type: Optional }, ]},\n{type: RowActionService, },\n];\n}\n\nfunction ActionableOompaLoompa_tsickle_Closure_declarations() {\n/** @type {?} */\nActionableOompaLoompa.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nActionableOompaLoompa.ctorParameters;\n/** @type {?} */\nActionableOompaLoompa.prototype.rowActions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive} from '@angular/core';\nimport {WillyWonka} from '../../../utils/chocolate/willy-wonka';\nexport class DatagridWillyWonka extends WillyWonka {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-datagrid\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DatagridWillyWonka_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridWillyWonka.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridWillyWonka.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {AfterViewChecked} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nexport class WillyWonka implements AfterViewChecked {\nprivate _chocolate = new Subject<void>();\n/**\n * @return {?}\n */\npublic get chocolate(): Observable<void> {\n        return this._chocolate.asObservable();\n    }\n/**\n * @return {?}\n */\nngAfterViewChecked() {\n        this._chocolate.next();\n    }\n}\n\nfunction WillyWonka_tsickle_Closure_declarations() {\n/** @type {?} */\nWillyWonka.prototype._chocolate;\n}\n\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable} from '@angular/core';\nexport class RowActionService {\nprivate actionableCount = 0;\n/**\n * @return {?}\n */\npublic register() {\n        this.actionableCount++;\n    }\n/**\n * @return {?}\n */\npublic unregister() {\n        this.actionableCount--;\n    }\n/**\n * false means no rows with action\n * @return {?}\n */\npublic get hasActionableRow(): boolean {\n        return this.actionableCount > 0;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction RowActionService_tsickle_Closure_declarations() {\n/** @type {?} */\nRowActionService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRowActionService.ctorParameters;\n/** @type {?} */\nRowActionService.prototype.actionableCount;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {AfterContentChecked, ChangeDetectorRef, OnDestroy} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {WillyWonka} from './willy-wonka';\n/**\n * @abstract\n */\nexport abstract class OompaLoompa implements AfterContentChecked, OnDestroy {\n/**\n * @param {?} cdr\n * @param {?} willyWonka\n */\nconstructor(cdr: ChangeDetectorRef, willyWonka: WillyWonka) {\n        this.subscription = willyWonka.chocolate.subscribe(() => {\n            if (this.latestFlavor !== this.flavor) {\n                cdr.detectChanges();\n            }\n        });\n    }\nprivate subscription: Subscription;\nprivate latestFlavor: any;\n/**\n * @abstract\n * @return {?}\n */\nflavor() {}\n/**\n * @return {?}\n */\nngAfterContentChecked() {\n        this.latestFlavor = this.flavor;\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n\nfunction OompaLoompa_tsickle_Closure_declarations() {\n/** @type {?} */\nOompaLoompa.prototype.subscription;\n/** @type {?} */\nOompaLoompa.prototype.latestFlavor;\n}\n\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild} from '@angular/core';\n\nimport {DatagridFilter} from '../../datagrid-filter';\nimport {StringFilter} from '../../interfaces/string-filter';\nimport {CustomFilter} from '../../providers/custom-filter';\nimport {FiltersProvider, RegisteredFilter} from '../../providers/filters';\nimport {DomAdapter} from '../../render/dom-adapter';\nimport {DatagridFilterRegistrar} from '../../utils/datagrid-filter-registrar';\n\nimport {DatagridStringFilterImpl} from './datagrid-string-filter-impl';\nexport class DatagridStringFilter extends DatagridFilterRegistrar<DatagridStringFilterImpl> implements CustomFilter,\n                                                                                                       AfterViewInit {\n/**\n * @param {?} renderer\n * @param {?} filters\n * @param {?} domAdapter\n */\nconstructor(private renderer: Renderer2, filters: FiltersProvider,\nprivate domAdapter: DomAdapter) {\n        super(filters);\n    }\n/**\n * Customizable filter logic based on a search text\n * @param {?} value\n * @return {?}\n */\nset customStringFilter(value: StringFilter<any>|RegisteredFilter<DatagridStringFilterImpl>) {\n        if (value instanceof RegisteredFilter) {\n            this.setFilter(value);\n        } else {\n            this.setFilter(new DatagridStringFilterImpl( /** @type {?} */((<StringFilter<any>>value))));\n        }\n    }\n/**\n * Indicates if the filter dropdown is open\n */\npublic open: boolean = false;\n/**\n * We need the actual input element to automatically focus on it\n */\npublic input: ElementRef;\n/**\n * We grab the DatagridFilter we wrap to register this StringFilter to it.\n */\npublic filterContainer: DatagridFilter;\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this.filterContainer.openChanged.subscribe((open: boolean) => {\n            if (open) {\n                // We need the timeout because at the time this executes, the input isn't\n                // displayed yet.\n                setTimeout(() => {\n                    this.domAdapter.focus(this.input.nativeElement);\n                });\n            }\n        });\n    }\n/**\n * Common setter for the input value\n * @return {?}\n */\npublic get value() {\n        return this.filter.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set value(value: string) {\n        if (!this.filter) {\n            return;\n        }\n        if (!value) {\n            value = \"\";\n        }\n        if (value !== this.filter.value) {\n            this.filter.value = value;\n            this.filterValueChange.emit(value);\n        }\n    }\n\n     filterValueChange = new EventEmitter();\n/**\n * @return {?}\n */\npublic close() {\n        this.open = false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-string-filter\",\n    providers: [{provide: CustomFilter, useExisting: DatagridStringFilter}],\n    template: `\n        <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n            <!--\n                Even though this *ngIf looks useless because the filter container already has one,\n                it prevents NgControlStatus and other directives automatically added by Angular\n                on inputs with NgModel from freaking out because of their host binding changing\n                mid-change detection when the input is destroyed.\n            -->\n            <input #input type=\"text\" name=\"search\" [(ngModel)]=\"value\" *ngIf=\"open\"\n                (keyup.enter)=\"close()\" (keyup.escape)=\"close()\"/>\n        </clr-dg-filter>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: FiltersProvider, },\n{type: DomAdapter, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'customStringFilter': [{ type: Input, args: [\"clrDgStringFilter\", ] },],\n'input': [{ type: ViewChild, args: [\"input\", ] },],\n'filterContainer': [{ type: ViewChild, args: [DatagridFilter, ] },],\n'value': [{ type: Input, args: [\"clrFilterValue\", ] },],\n'filterValueChange': [{ type: Output, args: [\"clrFilterValueChange\", ] },],\n};\n}\n\nfunction DatagridStringFilter_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridStringFilter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridStringFilter.ctorParameters;\n/** @type {?} */\nDatagridStringFilter.propDecorators;\n/**\n * Indicates if the filter dropdown is open\n * @type {?}\n */\nDatagridStringFilter.prototype.open;\n/**\n * We need the actual input element to automatically focus on it\n * @type {?}\n */\nDatagridStringFilter.prototype.input;\n/**\n * We grab the DatagridFilter we wrap to register this StringFilter to it.\n * @type {?}\n */\nDatagridStringFilter.prototype.filterContainer;\n/** @type {?} */\nDatagridStringFilter.prototype.filterValueChange;\n/** @type {?} */\nDatagridStringFilter.prototype.renderer;\n/** @type {?} */\nDatagridStringFilter.prototype.domAdapter;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Filter} from '../../interfaces/filter';\nimport {StringFilter} from '../../interfaces/string-filter';\nexport class DatagridStringFilterImpl implements Filter<any> {\n/**\n * @param {?} filterFn\n */\nconstructor(public filterFn: StringFilter<any>) {}\n/**\n * The Observable required as part of the Filter interface\n */\nprivate _changes = new Subject<string>();\n/**\n * @return {?}\n */\npublic get changes(): Observable<string> {\n        return this._changes.asObservable();\n    }\n/**\n * Raw input value\n */\nprivate _rawValue: string = \"\";\n/**\n * @return {?}\n */\npublic get value(): string {\n        return this._rawValue;\n    }\n/**\n * Input value converted to lowercase\n */\nprivate _lowerCaseValue: string = \"\";\n/**\n * @return {?}\n */\npublic get lowerCaseValue() {\n        return this._lowerCaseValue;\n    }\n/**\n * Common setter for the input value\n * @param {?} value\n * @return {?}\n */\npublic set value(value: string) {\n        if (!value) {\n            value = \"\";\n        }\n        if (value !== this._rawValue) {\n            this._rawValue = value;\n            this._lowerCaseValue = value.toLowerCase().trim();\n            this._changes.next(value);\n        }\n    }\n/**\n * Indicates if the filter is currently active, meaning the input is not empty\n * @return {?}\n */\npublic isActive(): boolean {\n        return !!this.value;\n    }\n/**\n * Tests if an item matches a search text\n * @param {?} item\n * @return {?}\n */\npublic accepts(item: any): boolean {\n        // We always test with the lowercase value of the input, to stay case insensitive\n        return this.filterFn.accepts(item, this.lowerCaseValue);\n    }\n}\n\nfunction DatagridStringFilterImpl_tsickle_Closure_declarations() {\n/**\n * The Observable required as part of the Filter interface\n * @type {?}\n */\nDatagridStringFilterImpl.prototype._changes;\n/**\n * Raw input value\n * @type {?}\n */\nDatagridStringFilterImpl.prototype._rawValue;\n/**\n * Input value converted to lowercase\n * @type {?}\n */\nDatagridStringFilterImpl.prototype._lowerCaseValue;\n/** @type {?} */\nDatagridStringFilterImpl.prototype.filterFn;\n}\n\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, EventEmitter, Input, Output} from '@angular/core';\n\nimport {Point, PopoverOptions} from '../../popover/common/popover';\n\nimport {Filter} from './interfaces/filter';\nimport {CustomFilter} from './providers/custom-filter';\nimport {FiltersProvider, RegisteredFilter} from './providers/filters';\nimport {DatagridFilterRegistrar} from './utils/datagrid-filter-registrar';\n/**\n * Custom filter that can be added in any column to override the default object property string filter.\n * The reason this is not just an input on DatagridColumn is because we need the filter's template to be projected,\n * since it can be anything (not just a text input).\n */\nexport class DatagridFilter extends DatagridFilterRegistrar<Filter<any>> implements CustomFilter {\n/**\n * @param {?} _filters\n */\nconstructor(_filters: FiltersProvider) {\n        super(_filters);\n    }\npublic anchorPoint: Point = Point.RIGHT_BOTTOM;\npublic popoverPoint: Point = Point.RIGHT_TOP;\npublic popoverOptions: PopoverOptions = {allowMultipleOpen: true};\n/**\n * Tracks whether the filter dropdown is open or not\n */\nprivate _open = false;\n/**\n * @return {?}\n */\npublic get open() {\n        return this._open;\n    }\n/**\n * @param {?} open\n * @return {?}\n */\npublic set open(open: boolean) {\n        const /** @type {?} */ boolOpen = !!open;\n        if (boolOpen !== this._open) {\n            this._open = boolOpen;\n            this.openChanged.emit(boolOpen);\n        }\n    }\npublic openChanged = new EventEmitter<boolean>(false);\n/**\n * @param {?} filter\n * @return {?}\n */\npublic set customFilter(filter: Filter<any>|RegisteredFilter<Filter<any>>) {\n        this.setFilter(filter);\n    }\n/**\n * Indicates if the filter is currently active\n * @return {?}\n */\npublic get active() {\n        return !!this.filter && this.filter.isActive();\n    }\n/**\n * Shows/hides the filter dropdown\n * @return {?}\n */\npublic toggle() {\n        this.open = !this.open;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-dg-filter\",\n    // We register this component as a CustomFilter, for the parent column to detect it.\n    providers: [{provide: CustomFilter, useExisting: DatagridFilter}],\n    template: `\n        <button #anchor class=\"datagrid-filter-toggle\" (click)=\"toggle()\"\n            [class.datagrid-filter-open]=\"open\" [class.datagrid-filtered]=\"active\"\n            type=\"button\"></button>\n\n        <ng-template [(clrPopoverOld)]=\"open\" [clrPopoverOldAnchor]=\"anchor\" [clrPopoverOldAnchorPoint]=\"anchorPoint\"\n             [clrPopoverOldPopoverPoint]=\"popoverPoint\" [clrPopoverOldOptions]=\"popoverOptions\">\n            <div class=\"datagrid-filter\">\n                <!-- FIXME: this whole filter part needs a final design before we can try to have a cleaner DOM -->\n                <div class=\"datagrid-filter-close-wrapper\">\n                    <button type=\"button\" class=\"close\" \n                        aria-label=\"Close\" (click)=\"open = false\"\n                        type=\"button\">\n                        <clr-icon aria-hidden=\"true\" shape=\"close\"></clr-icon>\n                    </button>\n                </div>\n    \n                <ng-content></ng-content>\n            </div>\n        </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FiltersProvider, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'open': [{ type: Input, args: [\"clrDgFilterOpen\", ] },],\n'openChanged': [{ type: Output, args: [\"clrDgFilterOpenChange\", ] },],\n'customFilter': [{ type: Input, args: [\"clrDgFilter\", ] },],\n};\n}\n\nfunction DatagridFilter_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridFilter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridFilter.ctorParameters;\n/** @type {?} */\nDatagridFilter.propDecorators;\n/** @type {?} */\nDatagridFilter.prototype.anchorPoint;\n/** @type {?} */\nDatagridFilter.prototype.popoverPoint;\n/** @type {?} */\nDatagridFilter.prototype.popoverOptions;\n/**\n * Tracks whether the filter dropdown is open or not\n * @type {?}\n */\nDatagridFilter.prototype._open;\n/** @type {?} */\nDatagridFilter.prototype.openChanged;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {OnDestroy} from '@angular/core';\nimport {Filter} from '../interfaces/filter';\nimport {FiltersProvider, RegisteredFilter} from '../providers/filters';\n/**\n * @abstract\n */\nexport abstract class DatagridFilterRegistrar<F extends Filter<any>> implements OnDestroy {\n/**\n * @param {?} filters\n */\nconstructor(private filters: FiltersProvider) {}\npublic registered: RegisteredFilter<F>;\n/**\n * @return {?}\n */\npublic get filter(): F {\n        return this.registered && this.registered.filter;\n    }\n/**\n * @param {?} filter\n * @return {?}\n */\npublic setFilter(filter: F|RegisteredFilter<F>) {\n        // If we previously had another filter, we unregister it\n        this.deleteFilter();\n        if (filter instanceof RegisteredFilter) {\n            this.registered = /** @type {?} */(( <RegisteredFilter<F>>filter));\n        } else if (filter) {\n            this.registered = this.filters.add( /** @type {?} */((<F>filter)));\n        }\n    }\n/**\n * @return {?}\n */\npublic deleteFilter() {\n        if (this.registered) {\n            this.registered.unregister();\n            delete this.registered;\n        }\n    }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n        this.deleteFilter();\n    }\n}\n\nfunction DatagridFilterRegistrar_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridFilterRegistrar.prototype.registered;\n/** @type {?} */\nDatagridFilterRegistrar.prototype.filters;\n}\n\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\nimport {Filter} from '../interfaces/filter';\nimport {Page} from './page';\nimport {StateDebouncer} from './state-debouncer.provider';\nexport class FiltersProvider {\n/**\n * @param {?} _page\n * @param {?} stateDebouncer\n */\nconstructor(private _page: Page,\nprivate stateDebouncer: StateDebouncer) {}\n/**\n * This subject is the list of filters that changed last, not the whole list.\n * We emit a list rather than just one filter to allow batch changes to several at once.\n */\nprivate _change = new Subject<Filter<any>[]>();\n/**\n * @return {?}\n */\npublic get change(): Observable<Filter<any>[]> {\n        return this._change.asObservable();\n    }\n/**\n * List of all filters, whether they're active or not\n */\nprivate _all: RegisteredFilter<any>[] = [];\n/**\n * Tests if at least one filter is currently active\n * @return {?}\n */\npublic hasActiveFilters(): boolean {\n        // We do not use getActiveFilters() because this function will be called much more often\n        // and stopping the loop early might be relevant.\n        for (const {filter} of this._all) {\n            if (filter && filter.isActive()) {\n                return true;\n            }\n        }\n        return false;\n    }\n/**\n * Returns a list of all currently active filters\n * @return {?}\n */\npublic getActiveFilters(): Filter<any>[] {\n        const /** @type {?} */ ret: Filter<any>[] = [];\n        for (const {filter} of this._all) {\n            if (filter && filter.isActive()) {\n                ret.push(filter);\n            }\n        }\n        return ret;\n    }\n/**\n * Registers a filter, and returns a deregistration function\n * @template F\n * @param {?} filter\n * @return {?}\n */\npublic add<F extends Filter<any>>(filter: F): RegisteredFilter<F> {\n        const /** @type {?} */ index = this._all.length;\n        const /** @type {?} */ subscription = filter.changes.subscribe(() => this.resetPageAndEmitFilterChange([filter]));\n        let /** @type {?} */ hasUnregistered = false;\n        const /** @type {?} */ registered = new RegisteredFilter(filter, () => {\n            if (hasUnregistered) {\n                return;\n            }\n            subscription.unsubscribe();\n            this._all.splice(index, 1);\n            if (filter.isActive()) {\n                this.resetPageAndEmitFilterChange([]);\n            }\n            hasUnregistered = true;\n        });\n        this._all.push(registered);\n        if (filter.isActive()) {\n            this.resetPageAndEmitFilterChange([filter]);\n        }\n        return registered;\n    }\n/**\n * Accepts an item if it is accepted by all currently active filters\n * @param {?} item\n * @return {?}\n */\npublic accepts(item: any): boolean {\n        for (const {filter} of this._all) {\n            if (filter && filter.isActive() && !filter.accepts(item)) {\n                return false;\n            }\n        }\n        return true;\n    }\n/**\n * @param {?} filters\n * @return {?}\n */\nprivate resetPageAndEmitFilterChange(filters: Filter<any>[]) {\n        this.stateDebouncer.changeStart();\n        // filtering may change the page number such that current page number doesn't exist in the filtered dataset.\n        // So here we always set the current page to 1 so that it'll fetch first page's data with the given filter.\n        this._page.current = 1;\n        this._change.next(filters);\n        this.stateDebouncer.changeDone();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Page, },\n{type: StateDebouncer, },\n];\n}\n\nfunction FiltersProvider_tsickle_Closure_declarations() {\n/** @type {?} */\nFiltersProvider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFiltersProvider.ctorParameters;\n/**\n * This subject is the list of filters that changed last, not the whole list.\n * We emit a list rather than just one filter to allow batch changes to several at once.\n * @type {?}\n */\nFiltersProvider.prototype._change;\n/**\n * List of all filters, whether they're active or not\n * @type {?}\n */\nFiltersProvider.prototype._all;\n/** @type {?} */\nFiltersProvider.prototype._page;\n/** @type {?} */\nFiltersProvider.prototype.stateDebouncer;\n}\n\nexport class RegisteredFilter<F extends Filter<any>> {\n/**\n * @param {?} filter\n * @param {?} unregister\n */\nconstructor(public filter: F,\npublic unregister: () => void) {}\n}\n\nfunction RegisteredFilter_tsickle_Closure_declarations() {\n/** @type {?} */\nRegisteredFilter.prototype.filter;\n/** @type {?} */\nRegisteredFilter.prototype.unregister;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {StateDebouncer} from './state-debouncer.provider';\nexport class Page {\n/**\n * @param {?} stateDebouncer\n */\nconstructor(private stateDebouncer: StateDebouncer) {}\n/**\n * Page size, a value of 0 means no pagination\n */\nprivate _size = 0;\n/**\n * @return {?}\n */\npublic get size(): number {\n        return this._size;\n    }\n/**\n * @param {?} size\n * @return {?}\n */\npublic set size(size: number) {\n        const /** @type {?} */ oldSize = this._size;\n        if (size !== oldSize) {\n            this._size = size;\n            // Yeap. That's the formula to keep the first item from the old page still\n            // displayed in the new one.\n            this._current = Math.floor(oldSize / size * (this._current - 1)) + 1;\n            // We always emit an event even if the current page index didn't change, because\n            // the size changing means the items inside the page are different\n            this._change.next(this._current);\n            this._sizeChange.next(this._size);\n        }\n    }\n/**\n * Total items (needed to guess the last page)\n */\nprivate _totalItems = 0;\n/**\n * @return {?}\n */\npublic get totalItems(): number {\n        return this._totalItems;\n    }\n/**\n * @param {?} total\n * @return {?}\n */\npublic set totalItems(total: number) {\n        this._totalItems = total;\n        // If we have less items than before, we might need to change the current page\n        if (this.current > this.last) {\n            this.current = this.last;\n        }\n    }\n/**\n * Last page\n */\nprivate _last: number;\n/**\n * @return {?}\n */\npublic get last(): number {\n        if (this._last) {\n            return this._last;\n        }\n        // If the last page isn't known, we compute it from the last item's index\n        if (this.size > 0 && this.totalItems) {\n            return Math.ceil(this.totalItems / this.size);\n        }\n        return 1;\n    }\n/**\n * @param {?} page\n * @return {?}\n */\npublic set last(page: number) {\n        this._last = page;\n    }\n/**\n * The Observable that lets other classes subscribe to page changes\n */\nprivate _change = new Subject<number>();\n/**\n * @return {?}\n */\npublic get change(): Observable<number> {\n        return this._change.asObservable();\n    }\nprivate _sizeChange = new Subject<number>();\n/**\n * @return {?}\n */\npublic get sizeChange(): Observable<number> {\n        return this._sizeChange.asObservable();\n    }\n/**\n * Current page\n */\nprivate _current = 1;\n/**\n * @return {?}\n */\npublic get current(): number {\n        return this._current;\n    }\n/**\n * @param {?} page\n * @return {?}\n */\npublic set current(page: number) {\n        if (page !== this._current) {\n            this.stateDebouncer.changeStart();\n            this._current = page;\n            this._change.next(page);\n            this.stateDebouncer.changeDone();\n        }\n    }\n/**\n * Moves to the previous page if it exists\n * @return {?}\n */\npublic previous() {\n        if (this.current > 1) {\n            this.current--;\n        }\n    }\n/**\n * Moves to the next page if it exists\n * @return {?}\n */\npublic next() {\n        if (this.current < this.last) {\n            this.current++;\n        }\n    }\n/**\n * Index of the first item displayed on the current page, starting at 0\n * @return {?}\n */\npublic get firstItem(): number {\n        if (this.size === 0) {\n            return 0;\n        }\n        return (this.current - 1) * this.size;\n    }\n/**\n * Index of the last item displayed on the current page, starting at 0\n * @return {?}\n */\npublic get lastItem(): number {\n        if (this.size === 0) {\n            return this.totalItems - 1;\n        }\n        let /** @type {?} */ lastInPage = (this.current) * this.size - 1;\n        if (this.totalItems) {\n            lastInPage = Math.min(lastInPage, this.totalItems - 1);\n        }\n        return lastInPage;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: StateDebouncer, },\n];\n}\n\nfunction Page_tsickle_Closure_declarations() {\n/** @type {?} */\nPage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPage.ctorParameters;\n/**\n * Page size, a value of 0 means no pagination\n * @type {?}\n */\nPage.prototype._size;\n/**\n * Total items (needed to guess the last page)\n * @type {?}\n */\nPage.prototype._totalItems;\n/**\n * Last page\n * @type {?}\n */\nPage.prototype._last;\n/**\n * The Observable that lets other classes subscribe to page changes\n * @type {?}\n */\nPage.prototype._change;\n/** @type {?} */\nPage.prototype._sizeChange;\n/**\n * Current page\n * @type {?}\n */\nPage.prototype._current;\n/** @type {?} */\nPage.prototype.stateDebouncer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nexport class StateDebouncer {\n/**\n * The Observable that lets other classes subscribe to global state changes\n */\nprivate _change = new Subject<void>();\n/**\n * @return {?}\n */\npublic get change(): Observable<void> {\n        return this._change.asObservable();\n    }\nprivate nbChanges = 0;\n/**\n * @return {?}\n */\npublic changeStart() {\n        this.nbChanges++;\n    }\n/**\n * @return {?}\n */\npublic changeDone() {\n        if (--this.nbChanges === 0) {\n            this._change.next();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StateDebouncer_tsickle_Closure_declarations() {\n/** @type {?} */\nStateDebouncer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStateDebouncer.ctorParameters;\n/**\n * The Observable that lets other classes subscribe to global state changes\n * @type {?}\n */\nStateDebouncer.prototype._change;\n/** @type {?} */\nStateDebouncer.prototype.nbChanges;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @abstract\n */\nexport abstract class CustomFilter {}","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * This is a hack that we have to write for now because of bugs and limitations in Angular,\n * please do not use this as an example.\n */\n\n\nimport {Directive, ElementRef, Renderer2} from '@angular/core';\n\nimport {Expand} from '../../../utils/expand/providers/expand';\nimport {DomAdapter} from '../render/dom-adapter';\nimport {DatagridRenderOrganizer} from '../render/render-organizer';\nexport class DatagridRowExpandAnimation {\n/**\n * @param {?} el\n * @param {?} domAdapter\n * @param {?} renderer\n * @param {?} expand\n * @param {?} renderOrganizer\n */\nconstructor(private el: ElementRef,\nprivate domAdapter: DomAdapter,\nprivate renderer: Renderer2,\nprivate expand: Expand,\nprivate renderOrganizer: DatagridRenderOrganizer) {\n        expand.animate.subscribe(() => {\n            // We already had an animation waiting, so we just have to run in, not prepare again\n            if (this.oldHeight) {\n                setTimeout(() => this.run());\n            } else {\n                this.animate();\n            }\n        });\n    }\nprivate running: any;\nprivate oldHeight: number;\n/**\n * @return {?}\n */\nprivate animate() {\n        // Check if we do have web-animations available. If not, just skip the animation.\n        if (!this.el.nativeElement.animate) {\n            return;\n        }\n\n        // We had an animation running, we skip to the end\n        if (this.running) {\n            this.running.finish();\n        }\n\n        this.oldHeight = this.domAdapter.computedHeight(this.el.nativeElement);\n        // We set the height of the element immediately to avoid a flicker before the animation starts.\n        this.renderer.setStyle(this.el.nativeElement, \"height\", this.oldHeight + \"px\");\n        this.renderer.setStyle(this.el.nativeElement, \"overflow-y\", \"hidden\");\n        setTimeout(() => {\n            if (this.expand.loading) {\n                return;\n            }\n            this.run();\n        });\n    }\n/**\n * @return {?}\n */\nprivate run() {\n        this.renderer.setStyle(this.el.nativeElement, \"height\", null);\n        // I don't like realigning the columns before the animation, since the scrollbar could appear or disappear\n        // halfway, but that's a compromise we have to make for now. We can look into a smarter fix later.\n        this.renderOrganizer.scrollbar.next();\n        const /** @type {?} */ newHeight = this.domAdapter.computedHeight(this.el.nativeElement);\n        this.running = this.el.nativeElement.animate(\n            {height: [this.oldHeight + \"px\", newHeight + \"px\"], overflowY: [\"hidden\", \"hidden\"], easing: \"ease-in-out\"},\n            {duration: 200});\n        this.running.onfinish = () => {\n            this.renderer.setStyle(this.el.nativeElement, \"overflow-y\", null);\n            delete this.running;\n        };\n        delete this.oldHeight;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-dg-row\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: DomAdapter, },\n{type: Renderer2, },\n{type: Expand, },\n{type: DatagridRenderOrganizer, },\n];\n}\n\nfunction DatagridRowExpandAnimation_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridRowExpandAnimation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridRowExpandAnimation.ctorParameters;\n/** @type {?} */\nDatagridRowExpandAnimation.prototype.running;\n/** @type {?} */\nDatagridRowExpandAnimation.prototype.oldHeight;\n/** @type {?} */\nDatagridRowExpandAnimation.prototype.el;\n/** @type {?} */\nDatagridRowExpandAnimation.prototype.domAdapter;\n/** @type {?} */\nDatagridRowExpandAnimation.prototype.renderer;\n/** @type {?} */\nDatagridRowExpandAnimation.prototype.expand;\n/** @type {?} */\nDatagridRowExpandAnimation.prototype.renderOrganizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nexport class DatagridRenderOrganizer {\nprivate alreadySized = false;\npublic widths: {px: number, strict: boolean}[] = [];\n\n    protected _noLayout = new Subject<boolean>();\n/**\n * @return {?}\n */\npublic get noLayout(): Observable<boolean> {\n        return this._noLayout.asObservable();\n    }\n\n    protected _clearWidths = new Subject<any>();\n/**\n * @return {?}\n */\npublic get clearWidths(): Observable<any> {\n        return this._clearWidths.asObservable();\n    }\n\n    protected _detectStrictWidths = new Subject<any>();\n/**\n * @return {?}\n */\npublic get detectStrictWidths(): Observable<any> {\n        return this._detectStrictWidths.asObservable();\n    }\n\n    protected _tableMode = new Subject<boolean>();\n/**\n * @return {?}\n */\npublic get tableMode(): Observable<boolean> {\n        return this._tableMode.asObservable();\n    }\n\n    protected _computeWidths = new Subject<any>();\n/**\n * @return {?}\n */\npublic get computeWidths(): Observable<any> {\n        return this._computeWidths.asObservable();\n    }\n\n    protected _alignColumns = new Subject<any>();\n/**\n * @return {?}\n */\npublic get alignColumns(): Observable<any> {\n        return this._alignColumns.asObservable();\n    }\npublic scrollbar = new Subject<any>();\npublic scrollbarWidth = new Subject<number>();\n\n    protected _done = new Subject<any>();\n/**\n * @return {?}\n */\npublic get done(): Observable<any> {\n        return this._done.asObservable();\n    }\n/**\n * @return {?}\n */\npublic resize() {\n        this.widths.length = 0;\n        this._noLayout.next(true);\n        if (this.alreadySized) {\n            this._clearWidths.next();\n        }\n        this._detectStrictWidths.next();\n        this._tableMode.next(true);\n        this._computeWidths.next();\n        this._tableMode.next(false);\n        this._alignColumns.next();\n        this._noLayout.next(false);\n        this.scrollbar.next();\n        this.alreadySized = true;\n        this._done.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DatagridRenderOrganizer_tsickle_Closure_declarations() {\n/** @type {?} */\nDatagridRenderOrganizer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatagridRenderOrganizer.ctorParameters;\n/** @type {?} */\nDatagridRenderOrganizer.prototype.alreadySized;\n/** @type {?} */\nDatagridRenderOrganizer.prototype.widths;\n/** @type {?} */\nDatagridRenderOrganizer.prototype._noLayout;\n/** @type {?} */\nDatagridRenderOrganizer.prototype._clearWidths;\n/** @type {?} */\nDatagridRenderOrganizer.prototype._detectStrictWidths;\n/** @type {?} */\nDatagridRenderOrganizer.prototype._tableMode;\n/** @type {?} */\nDatagridRenderOrganizer.prototype._computeWidths;\n/** @type {?} */\nDatagridRenderOrganizer.prototype._alignColumns;\n/** @type {?} */\nDatagridRenderOrganizer.prototype.scrollbar;\n/** @type {?} */\nDatagridRenderOrganizer.prototype.scrollbarWidth;\n/** @type {?} */\nDatagridRenderOrganizer.prototype._done;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * If we someday want to be able to render the datagrid in a webworker,\n * this is where we would test if we're in headless mode. Right now it's not testing anything, but any access\n * to native DOM elements' methods and properties in the Datagrid happens here.\n */\n\n\nimport {Injectable} from '@angular/core';\nexport class DomAdapter {\n/**\n * @param {?} element\n * @return {?}\n */\nuserDefinedWidth(element: any): number {\n        element.classList.add(\"datagrid-cell-width-zero\");\n        const /** @type {?} */ userDefinedWidth = parseInt(getComputedStyle(element).getPropertyValue(\"width\"), 10);\n        element.classList.remove(\"datagrid-cell-width-zero\");\n        return userDefinedWidth;\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nscrollBarWidth(element: any) {\n        return element.offsetWidth - element.clientWidth;\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nscrollWidth(element: any) {\n        return element.scrollWidth || 0;\n    }\n/**\n * @param {?} element\n * @return {?}\n */\ncomputedHeight(element: any): number {\n        return parseInt(getComputedStyle(element).getPropertyValue(\"height\"), 10);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nclientRectRight(element: any): number {\n        return parseInt(element.getBoundingClientRect().right, 10);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nclientRectWidth(element: any): number {\n        return parseInt(element.getBoundingClientRect().width, 10);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nminWidth(element: any): number {\n        return parseInt(getComputedStyle(element).getPropertyValue(\"min-width\"), 10);\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nfocus(element: any): void {\n        element.focus();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DomAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nDomAdapter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomAdapter.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {OUSTIDE_CLICK_DIRECTIVES} from './index';\nexport class ClrOutsideClickModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: [CommonModule], declarations: [OUSTIDE_CLICK_DIRECTIVES], exports: [OUSTIDE_CLICK_DIRECTIVES]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrOutsideClickModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrOutsideClickModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrOutsideClickModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {OutsideClick} from './outside-click';\n\nexport {OutsideClick} from './outside-click';\n\nexport const /** @type {?} */ OUSTIDE_CLICK_DIRECTIVES: Type<any>[] = [OutsideClick];\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, ElementRef, EventEmitter, HostListener, Input, Output} from '@angular/core';\nexport class OutsideClick {\n/**\n * @param {?} el\n */\nconstructor(private el: ElementRef) {}\n\n     strict = false;\n\n     outsideClick = new EventEmitter<any>(false);\n/**\n * @param {?} event\n * @return {?}\n */\ndocumentClick(event: MouseEvent) {\n        const /** @type {?} */ target = event.target;         // Get the element in the DOM on which the mouse was clicked\n        const /** @type {?} */ host = this.el.nativeElement;  // Get the current actionMenu native HTML element\n\n        if (target === host) {\n            return;\n        }\n        if (!this.strict && host.contains(target)) {\n            return;\n        }\n        this.outsideClick.emit(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrOutsideClick]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'strict': [{ type: Input, args: [\"clrStrict\", ] },],\n'outsideClick': [{ type: Output, args: [\"clrOutsideClick\", ] },],\n'documentClick': [{ type: HostListener, args: [\"document:click\", [\"$event\"], ] },],\n};\n}\n\nfunction OutsideClick_tsickle_Closure_declarations() {\n/** @type {?} */\nOutsideClick.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOutsideClick.ctorParameters;\n/** @type {?} */\nOutsideClick.propDecorators;\n/** @type {?} */\nOutsideClick.prototype.strict;\n/** @type {?} */\nOutsideClick.prototype.outsideClick;\n/** @type {?} */\nOutsideClick.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {EXPAND_DIRECTIVES} from './index';\nexport class ClrIfExpandModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: [CommonModule], declarations: [EXPAND_DIRECTIVES], exports: [EXPAND_DIRECTIVES]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrIfExpandModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrIfExpandModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrIfExpandModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {IfExpanded} from './if-expanded';\n\nexport {IfExpanded} from './if-expanded';\n\nexport const /** @type {?} */ EXPAND_DIRECTIVES: Type<any>[] = [IfExpanded];\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {Expand} from './providers/expand';\n/**\n * TODO: make this a reusable directive outside of Datagrid, like [clrLoading].\n */\nexport class IfExpanded implements OnInit, OnDestroy {\nprivate _expanded: boolean = false;\n/**\n * @return {?}\n */\nget expanded(): boolean {\n        return this._expanded;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset expanded(value: boolean) {\n        if (typeof value === \"boolean\") {\n            this.expand.expanded = value;\n            this._expanded = value;\n        }\n    }\n\n     expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n/**\n * @param {?} template\n * @param {?} container\n * @param {?} expand\n */\nconstructor(private template: TemplateRef<any>,\nprivate container: ViewContainerRef,\nprivate expand: Expand) {\n        expand.expandable++;\n        this._subscriptions.push(expand.expandChange.subscribe(() => {\n            this.updateView();\n            this.expandedChange.emit(this.expand.expanded);\n        }));\n    }\n/**\n * Subscriptions to all the services and queries changes\n */\nprivate _subscriptions: Subscription[] = [];\n/**\n * @return {?}\n */\nprivate updateView() {\n        if (this.expand.expanded && this.container.length !== 0) {\n            return;\n        }\n        if (this.expand.expanded) {\n            // Should we pass a context? I don't see anything useful to pass right now,\n            // but we can come back to it in the future as a solution for additional features.\n            this.container.createEmbeddedView(this.template);\n        } else {\n            // TODO: Move when we move the animation logic to Datagrid Row Expand\n            // We clear before the animation is over. Not ideal, but doing better would involve a much heavier\n            // process for very little gain. Once Angular animations are dynamic enough, we should be able to\n            // get the optimal behavior.\n            this.container.clear();\n        }\n    }\n/**\n * @return {?}\n */\nngOnInit() {\n        this.updateView();\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.expand.expandable--;\n        this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrIfExpanded]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: Expand, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'expanded': [{ type: Input, args: [\"clrIfExpanded\", ] },],\n'expandedChange': [{ type: Output, args: [\"clrIfExpandedChange\", ] },],\n};\n}\n\nfunction IfExpanded_tsickle_Closure_declarations() {\n/** @type {?} */\nIfExpanded.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIfExpanded.ctorParameters;\n/** @type {?} */\nIfExpanded.propDecorators;\n/** @type {?} */\nIfExpanded.prototype._expanded;\n/** @type {?} */\nIfExpanded.prototype.expandedChange;\n/**\n * Subscriptions to all the services and queries changes\n * @type {?}\n */\nIfExpanded.prototype._subscriptions;\n/** @type {?} */\nIfExpanded.prototype.template;\n/** @type {?} */\nIfExpanded.prototype.container;\n/** @type {?} */\nIfExpanded.prototype.expand;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {LoadingListener} from '../../../utils/loading/loading-listener';\nexport class Expand implements LoadingListener {\npublic expandable: number = 0;\npublic replace: boolean = false;\nprivate _loading: boolean = false;\n/**\n * @return {?}\n */\nget loading(): boolean {\n        return this._loading;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset loading(value: boolean) {\n        value = !!value;\n        if (value !== this._loading) {\n            this._loading = value;\n        }\n    }\nprivate _expanded: boolean = false;\n/**\n * @return {?}\n */\nget expanded(): boolean {\n        return this._expanded;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset expanded(value: boolean) {\n        value = !!value;\n        if (value !== this._expanded) {\n            this._expanded = value;\n            this._animate.next();\n            this._expandChange.next(value);\n        }\n    }\nprivate _animate: Subject<any> = new Subject<any>();\n/**\n * @return {?}\n */\npublic get animate(): Observable<boolean> {\n        return this._animate.asObservable();\n    }\nprivate _expandChange: Subject<boolean> = new Subject<boolean>();\n/**\n * @return {?}\n */\npublic get expandChange(): Observable<boolean> {\n        return this._expandChange.asObservable();\n    }\n/**\n * @return {?}\n */\nstartLoading(): void {\n        this.loading = true;\n    }\n/**\n * @return {?}\n */\ndoneLoading(): void {\n        this.loading = false;\n        this._animate.next();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Expand_tsickle_Closure_declarations() {\n/** @type {?} */\nExpand.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExpand.ctorParameters;\n/** @type {?} */\nExpand.prototype.expandable;\n/** @type {?} */\nExpand.prototype.replace;\n/** @type {?} */\nExpand.prototype._loading;\n/** @type {?} */\nExpand.prototype._expanded;\n/** @type {?} */\nExpand.prototype._animate;\n/** @type {?} */\nExpand.prototype._expandChange;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {CHECKBOX_DIRECTIVES} from './checkbox/index';\nexport class ClrFormsModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: [CommonModule], declarations: [CHECKBOX_DIRECTIVES], exports: [CHECKBOX_DIRECTIVES]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrFormsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrFormsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrFormsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\n\nimport {Checkbox} from './checkbox';\n\nexport {Checkbox} from './checkbox';\n\nexport const /** @type {?} */ CHECKBOX_DIRECTIVES: Type<any>[] = [Checkbox];","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Component, EventEmitter, forwardRef, Input, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n/**\n * Private counter to generate unique IDs for the checkboxes, to bind the labels to them.\n */\nlet latestId = 0;\nexport class Checkbox implements ControlValueAccessor {\n    // If our host has an ID attribute, we use this instead of our index.\n    \n    _id: string = (latestId++).toString();\n/**\n * @return {?}\n */\npublic get id() {\n        return `clr-checkbox-${this._id}`;\n    }\npublic name: string = null;\npublic disabled: boolean = false;\npublic inline = false;\nprivate _checked = false;\n/**\n * @return {?}\n */\npublic get checked() {\n        return this._checked;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set checked(value: boolean) {\n        if (value !== this._checked) {\n            if (this._indeterminate) {\n                this.setIndeterminate(false);\n            }\n            this.setChecked(value);\n        }\n    }\nprivate _indeterminate: boolean = false;\n/**\n * @return {?}\n */\npublic get indeterminate() {\n        return this._indeterminate;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set indeterminate(value: boolean) {\n        if (this._indeterminate !== value) {\n            if (this._checked) {\n                this.setChecked(false);\n            }\n            this.setIndeterminate(value);\n        }\n    }\npublic indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n/**\n * @param {?} value\n * @return {?}\n */\nprivate setIndeterminate(value: boolean) {\n        this._indeterminate = value;\n        this.indeterminateChange.emit(this._indeterminate);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate setChecked(value: boolean) {\n        this._checked = value;\n        this.change.emit(this._checked);\n    }\npublic change = new EventEmitter<boolean>(false);\n/**\n * @return {?}\n */\npublic toggle() {\n        this.checked = !this.checked;\n        this.onChangeCallback(this.checked);\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n        if (value === null) {\n            value = false;\n        }\n        if (value !== this.checked) {\n            this.checked = value;\n        }\n    }\nprivate onChangeCallback = (_: any) => {};\n/**\n * @param {?} onChange\n * @return {?}\n */\nregisterOnChange(onChange: any): void {\n        this.onChangeCallback = onChange;\n    }\nprivate onTouchedCallback = () => {};\n/**\n * @param {?} onTouched\n * @return {?}\n */\nregisterOnTouched(onTouched: any): void {\n        this.onTouchedCallback = onTouched;\n    }\n/**\n * @return {?}\n */\npublic touch() {\n        this.onTouchedCallback();\n    }\n/**\n * @return {?}\n */\ncheckIndeterminateState(): void {\n        if (!this.disabled) {\n            this.toggle();\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-checkbox\",\n    template: `\n        <!--\n            FIXME: We are not subscribed to the change event but the click event here.\n            The reason for that is because checkboxes behave differently on IE & Edge.\n            https://stackoverflow.com/a/19447939\n            \n            To fix that, we listen to every click event and then toggle the checkbox manually\n            to make it behave the same way across the browsers we support.\n            \n            This works for cases when users toggle the checkbox using the keyboard too:\n            https://stackoverflow.com/questions/27878940/spacebar-triggering-click-event-on-checkbox\n        -->\n        <input type=\"checkbox\" [id]=\"id\" [name]=\"name\" [checked]=\"checked\"\n               [indeterminate]=\"indeterminate\" [disabled]=\"disabled\"\n               (blur)=\"touch()\" (click)=\"checkIndeterminateState()\">\n        <label [attr.for]=\"id\">\n            <ng-content></ng-content>\n        </label>\n    `,\n    host: {\"[class.checkbox]\": \"!inline\", \"[class.checkbox-inline]\": \"inline\", \"[class.disabled]\": \"disabled\"},\n    /*\n     * This provider lets us declare our checkbox as a ControlValueAccessor,\n     * which allows us to use [(ngModel)] directly on our component,\n     * with all the automatic features wiring that come with it.\n     */\n    providers: [{provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => Checkbox), multi: true}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_id': [{ type: Input, args: [\"id\", ] },],\n'name': [{ type: Input, args: [\"name\", ] },],\n'disabled': [{ type: Input, args: [\"clrDisabled\", ] },],\n'inline': [{ type: Input, args: [\"clrInline\", ] },],\n'checked': [{ type: Input, args: [\"clrChecked\", ] },],\n'indeterminate': [{ type: Input, args: [\"clrIndeterminate\", ] },],\n'indeterminateChange': [{ type: Output, args: [\"clrIndeterminateChange\", ] },],\n'change': [{ type: Output, args: [\"clrCheckedChange\", ] },],\n};\n}\n\nfunction Checkbox_tsickle_Closure_declarations() {\n/** @type {?} */\nCheckbox.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCheckbox.ctorParameters;\n/** @type {?} */\nCheckbox.propDecorators;\n/** @type {?} */\nCheckbox.prototype._id;\n/** @type {?} */\nCheckbox.prototype.name;\n/** @type {?} */\nCheckbox.prototype.disabled;\n/** @type {?} */\nCheckbox.prototype.inline;\n/** @type {?} */\nCheckbox.prototype._checked;\n/** @type {?} */\nCheckbox.prototype._indeterminate;\n/** @type {?} */\nCheckbox.prototype.indeterminateChange;\n/** @type {?} */\nCheckbox.prototype.change;\n/** @type {?} */\nCheckbox.prototype.onChangeCallback;\n/** @type {?} */\nCheckbox.prototype.onTouchedCallback;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\n\nimport {NgModule} from '@angular/core';\nimport {ClrSyntaxHighlightModule} from './syntax-highlight/syntax-highlight.module';\nexport class ClrCodeModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{exports: [ClrSyntaxHighlightModule]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrCodeModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrCodeModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrCodeModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {CODE_HIGHLIGHT_DIRECTIVES} from '../index';\nexport class ClrSyntaxHighlightModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: [CommonModule], declarations: [CODE_HIGHLIGHT_DIRECTIVES], exports: [CODE_HIGHLIGHT_DIRECTIVES]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrSyntaxHighlightModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrSyntaxHighlightModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrSyntaxHighlightModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {CodeHighlight} from './syntax-highlight/syntax-highlight';\n\nexport {CodeHighlight} from './syntax-highlight/syntax-highlight';\nexport const /** @type {?} */ CODE_HIGHLIGHT_DIRECTIVES: Type<any>[] = [CodeHighlight];\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, ElementRef, Input, Renderer2} from '@angular/core';\n\ndeclare var Prism: any;\nexport class CodeHighlight {\nprivate _highlight: string = \"\";\n/**\n * @param {?} _el\n * @param {?} renderer\n */\nconstructor(private _el: ElementRef,\nprivate renderer: Renderer2) {}\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n        this.redraw();\n    }\n/**\n * @return {?}\n */\npublic redraw() {\n        if (this._el && this._el.nativeElement) {\n            Prism.highlightElement(this._el.nativeElement);\n        }\n    }\n/**\n * @param {?} val\n * @return {?}\n */\nset highlight(val: string) {\n        if (val && val.trim() !== \"\") {\n            this._highlight = val;\n            this.renderer.addClass(this._el.nativeElement, this._highlight);\n        }\n    }\n/**\n * @return {?}\n */\nget highlight(): string {\n        return this._highlight;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"code[clr-code-highlight]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'highlight': [{ type: Input, args: [\"clr-code-highlight\", ] },],\n};\n}\n\nfunction CodeHighlight_tsickle_Closure_declarations() {\n/** @type {?} */\nCodeHighlight.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCodeHighlight.ctorParameters;\n/** @type {?} */\nCodeHighlight.propDecorators;\n/** @type {?} */\nCodeHighlight.prototype._highlight;\n/** @type {?} */\nCodeHighlight.prototype._el;\n/** @type {?} */\nCodeHighlight.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {NgModule} from '@angular/core';\n\nimport {ClrButtonGroupModule} from './button-group/button-group.module';\nimport {ClrLoadingButtonModule} from './button-loading/loading-button.module';\nexport class ClrButtonModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    exports: [\n        ClrLoadingButtonModule,\n        ClrButtonGroupModule,\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ClrLoadingModule} from '../../utils/loading/loading.module';\n\nimport {LOADING_BUTTON_DIRECTIVES} from './index';\nexport class ClrLoadingButtonModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrLoadingModule],\n    declarations: [LOADING_BUTTON_DIRECTIVES],\n    exports: [LOADING_BUTTON_DIRECTIVES, ClrLoadingModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrLoadingButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrLoadingButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrLoadingButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {LoadingButton} from './loading-button';\n\nexport const /** @type {?} */ LOADING_BUTTON_DIRECTIVES: Type<any>[] = [LoadingButton];","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\n\nimport {Component} from '@angular/core';\nimport {LoadingListener} from '../../utils/loading/loading-listener';\nexport class LoadingButton implements LoadingListener {\npublic loading: Boolean;\n/**\n * @return {?}\n */\nstartLoading(): void {\n        this.loading = true;\n    }\n/**\n * @return {?}\n */\ndoneLoading(): void {\n        this.loading = false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"button[clrLoading]\",\n    template: `\n        <span class=\"spinner spinner-inline\" *ngIf=\"loading\"></span>\n        <ng-content></ng-content>\n    `,\n    providers: [{provide: LoadingListener, useExisting: LoadingButton}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LoadingButton_tsickle_Closure_declarations() {\n/** @type {?} */\nLoadingButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLoadingButton.ctorParameters;\n/** @type {?} */\nLoadingButton.prototype.loading;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {LOADING_DIRECTIVES} from './index';\nexport class ClrLoadingModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: [CommonModule], declarations: [LOADING_DIRECTIVES], exports: [LOADING_DIRECTIVES]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrLoadingModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrLoadingModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrLoadingModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {Loading} from './loading';\n\nexport {Loading} from './loading';\nexport {LoadingListener} from './loading-listener';\n\nexport const /** @type {?} */ LOADING_DIRECTIVES: Type<any>[] = [Loading];\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, Input, OnDestroy, Optional} from '@angular/core';\n\nimport {LoadingListener} from './loading-listener';\nexport class Loading implements OnDestroy {\n/**\n * @param {?} listener\n */\nconstructor(\nprivate listener: LoadingListener) {}\nprivate _loading = false;\n/**\n * @return {?}\n */\npublic get loading() {\n        return this._loading;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set loading(value: boolean) {\n        value = !!value;\n        if (value === this._loading) {\n            return;\n        }\n        this._loading = value;\n        if (this.listener) {\n            if (value) {\n                this.listener.startLoading();\n            } else {\n                this.listener.doneLoading();\n            }\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.loading = false;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrLoading]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LoadingListener, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'loading': [{ type: Input, args: [\"clrLoading\", ] },],\n};\n}\n\nfunction Loading_tsickle_Closure_declarations() {\n/** @type {?} */\nLoading.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLoading.ctorParameters;\n/** @type {?} */\nLoading.propDecorators;\n/** @type {?} */\nLoading.prototype._loading;\n/** @type {?} */\nLoading.prototype.listener;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * This is an abstract class because we need it to still be a valid token for dependency injection after transpiling.\n * This does not mean you should extend it, simply implementing it is fine.\n * @abstract\n */\nexport abstract class LoadingListener {\n/**\n * @abstract\n * @return {?}\n */\nstartLoading() {}\n/**\n * @abstract\n * @return {?}\n */\ndoneLoading() {}\n}","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ClrIconModule} from '../../icon/icon.module';\nimport {ClrCommonPopoverModule} from '../../popover/common/popover.module';\n\nimport {BUTTON_GROUP_DIRECTIVES} from './index';\nexport class ClrButtonGroupModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [CommonModule, ClrIconModule, ClrCommonPopoverModule],\n    declarations: [BUTTON_GROUP_DIRECTIVES],\n    exports: [BUTTON_GROUP_DIRECTIVES]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrButtonGroupModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrButtonGroupModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrButtonGroupModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Type} from '@angular/core';\nimport {Button} from './button';\nimport {ButtonGroup} from './button-group';\n\nexport const /** @type {?} */ BUTTON_GROUP_DIRECTIVES: Type<any>[] = [Button, ButtonGroup];\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Component, ContentChildren, ElementRef, HostListener, Input, QueryList} from '@angular/core';\n\nimport {Point} from '../../popover/common/popover';\nimport {menuPositions} from '../../popover/dropdown/menu-positions';\nimport {ButtonInGroupService} from '../providers/buttonInGroup.service';\n\nimport {Button} from './button';\nexport class ButtonGroup {\n     buttons: QueryList<Button>;\n/**\n * @param {?} buttonGroupNewService\n * @param {?} elementRef\n */\nconstructor(public buttonGroupNewService: ButtonInGroupService,\nprivate elementRef: ElementRef) {}\n\n    inlineButtons: Button[] = [];\n    menuButtons: Button[] = [];\n/**\n * 1. Initializes the initial Button Group View\n * 2. Subscribes to changes on the ContentChildren\n *    in case the user content projection changes\n * @return {?}\n */\nngAfterContentInit() {\n        this.initializeButtons();\n        this.buttonGroupNewService.changes.subscribe(button => this.rearrangeButton(button));\n        this.buttons.changes.subscribe(() => {\n            this.initializeButtons();\n        });\n    }\n/**\n * Moves the button into the other ViewContainer\n * when an update is received.\n * \n * @param {?} button\n * @return {?}\n */\nrearrangeButton(button: Button): void {\n        let /** @type {?} */ fromView: Button[];\n        let /** @type {?} */ toView: Button[];\n        if (button.inMenu) {\n            fromView = this.inlineButtons;\n            toView = this.menuButtons;\n        } else {\n            fromView = this.menuButtons;\n            toView = this.inlineButtons;\n        }\n        const /** @type {?} */ index: number = fromView.indexOf(button);\n        if (index > -1) {\n            fromView.splice(index, 1);\n            const /** @type {?} */ moveIndex = this.getMoveIndex(button);\n            if (moveIndex <= toView.length) {\n                toView.splice(moveIndex, 0, button);\n            }\n        }\n    }\n/**\n * Author: Eudes\n * \n * Finds the order of a button w.r.t other buttons\n * \n * @param {?} buttonToMove\n * @return {?}\n */\ngetMoveIndex(buttonToMove: Button): number {\n        const /** @type {?} */ tempArr: Button[] = this.buttons.filter(button => (button.inMenu === buttonToMove.inMenu));\n        return tempArr.indexOf(buttonToMove);\n    }\n/**\n * Finds where each button belongs based on\n * the ContentChildren\n * @return {?}\n */\ninitializeButtons(): void {\n        const /** @type {?} */ tempInlineButtons: Button[] = [];\n        const /** @type {?} */ tempInMenuButtons: Button[] = [];\n        this.buttons.forEach((button) => {\n            if (button.inMenu) {\n                tempInMenuButtons.push(button);\n            } else {\n                tempInlineButtons.push(button);\n            }\n        });\n        this.inlineButtons = tempInlineButtons;\n        this.menuButtons = tempInMenuButtons;\n    }\nprivate _menuPosition: string;\n/**\n * @return {?}\n */\nget menuPosition(): string {\n        return this._menuPosition;\n    }\n/**\n * @param {?} pos\n * @return {?}\n */\nset menuPosition(pos: string) {\n        if (pos && (menuPositions.indexOf(pos) > -1)) {\n            this._menuPosition = pos;\n        } else {\n            this._menuPosition = \"bottom-left\";\n        }\n        // set the popover values based on menu position\n        switch (this._menuPosition) {\n            case (\"top-right\"):\n                this.anchorPoint = Point.TOP_RIGHT;\n                this.popoverPoint = Point.RIGHT_BOTTOM;\n                break;\n            case (\"top-left\"):\n                this.anchorPoint = Point.TOP_LEFT;\n                this.popoverPoint = Point.LEFT_BOTTOM;\n                break;\n            case (\"bottom-right\"):\n                this.anchorPoint = Point.BOTTOM_RIGHT;\n                this.popoverPoint = Point.RIGHT_TOP;\n                break;\n            case (\"bottom-left\"):\n                this.anchorPoint = Point.BOTTOM_LEFT;\n                this.popoverPoint = Point.LEFT_TOP;\n                break;\n            case (\"right-top\"):\n                this.anchorPoint = Point.RIGHT_TOP;\n                this.popoverPoint = Point.LEFT_TOP;\n                break;\n            case (\"right-bottom\"):\n                this.anchorPoint = Point.RIGHT_BOTTOM;\n                this.popoverPoint = Point.LEFT_BOTTOM;\n                break;\n            case (\"left-top\"):\n                this.anchorPoint = Point.LEFT_TOP;\n                this.popoverPoint = Point.RIGHT_TOP;\n                break;\n            case (\"left-bottom\"):\n                this.anchorPoint = Point.LEFT_BOTTOM;\n                this.popoverPoint = Point.RIGHT_BOTTOM;\n                break;\n            default:\n                this.anchorPoint = Point.BOTTOM_LEFT;\n                this.popoverPoint = Point.LEFT_TOP;\n                break;\n        }\n    }\nprivate _openMenu: boolean = false;\n/**\n * @return {?}\n */\nget openMenu(): boolean {\n        return this._openMenu;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset openMenu(value: boolean) {\n        this._openMenu = value;\n    }\npublic anchorPoint: Point = Point.BOTTOM_LEFT;\npublic popoverPoint: Point = Point.LEFT_TOP;\n/**\n * Toggle the Dropdown Menu when the Dropdown Toggle is\n * clicked. Also set a flag that indicates that the toggle\n * was clicked so that we don't traverse the DOM to find the\n * location of the click.\n * @return {?}\n */\ntoggleMenu(): void {\n        this.openMenu = !this.openMenu;\n        this._overflowMenuToggleClicked = true;\n    }\n/**\n * Flag with indicates if the overflow menu toggle was clicked.\n * If true, this can save us traversing the DOM to find\n * whether the click was withing the button group toggle\n * or menu in the onMouseClick method\n */\nprivate _overflowMenuToggleClicked: boolean = false;\n/**\n * Called on mouse clicks anywhere in the DOM.\n * Checks to see if the mouseclick happened on the host or outside\n * @param {?} target\n * @return {?}\n */\nonMouseClick(target: any): void {\n        if (this.openMenu && !this._overflowMenuToggleClicked) {\n            // Reset the overflow menu toggle clicked flag\n            this._overflowMenuToggleClicked = false;\n            let /** @type {?} */ current: any = target;  // Get the element in the DOM on which the mouse was clicked\n            const /** @type {?} */ host: any = this.elementRef.nativeElement;  // Current Button Group\n\n            if (current.classList.contains(\"dropdown-menu\")) {\n                current = current.parentNode;\n                while (current) {\n                    if (current === document) {\n                        this.openMenu = false;\n                        return;\n                    }\n\n                    // If clicked on dropdown menu and menu is in host\n                    // do nothing\n                    if (current === host) {\n                        return;\n                    }\n                    current = current.parentNode;\n                }\n            }\n            this.openMenu = false;\n        }\n        this._overflowMenuToggleClicked = false;  // Reset the overflow menu toggle clicked flag\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-button-group\",\n    template: `\n      <ng-container *ngFor=\"let inlineButton of inlineButtons\">\n          <ng-template [ngTemplateOutlet]=\"inlineButton.templateRef\"></ng-template>\n      </ng-container>\n      <ng-container *ngIf=\"menuButtons.length > 0\">\n          <div\n              class=\"btn-group-overflow open\"\n              [ngClass]=\"menuPosition\"\n              #anchor>\n              <button\n                  class=\"btn dropdown-toggle\"\n                  (click)=\"toggleMenu()\">\n                  <clr-icon shape=\"ellipsis-horizontal\"></clr-icon>\n              </button>\n              <div\n                  class=\"dropdown-menu\"\n                  *clrPopoverOld=\"openMenu; anchor: anchor; anchorPoint: anchorPoint; popoverPoint: popoverPoint;\">\n                  <ng-template [ngTemplateOutlet]=\"ref\"></ng-template>\n              </div>\n          </div>\n      </ng-container>\n      <ng-template #ref>\n          <ng-container *ngFor=\"let menuButton of menuButtons\">\n              <ng-template [ngTemplateOutlet]=\"menuButton.templateRef\"></ng-template>\n          </ng-container>\n      </ng-template>\n    `,\n    providers: [ButtonInGroupService],\n    host: {\"[class.btn-group]\": \"true\"}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ButtonInGroupService, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'buttons': [{ type: ContentChildren, args: [Button, ] },],\n'menuPosition': [{ type: Input, args: [\"clrMenuPosition\", ] },],\n'onMouseClick': [{ type: HostListener, args: [\"document:click\", [\"$event.target\"], ] },],\n};\n}\n\nfunction ButtonGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nButtonGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nButtonGroup.ctorParameters;\n/** @type {?} */\nButtonGroup.propDecorators;\n/** @type {?} */\nButtonGroup.prototype.buttons;\n/** @type {?} */\nButtonGroup.prototype.inlineButtons;\n/** @type {?} */\nButtonGroup.prototype.menuButtons;\n/** @type {?} */\nButtonGroup.prototype._menuPosition;\n/** @type {?} */\nButtonGroup.prototype._openMenu;\n/** @type {?} */\nButtonGroup.prototype.anchorPoint;\n/** @type {?} */\nButtonGroup.prototype.popoverPoint;\n/**\n * Flag with indicates if the overflow menu toggle was clicked.\n * If true, this can save us traversing the DOM to find\n * whether the click was withing the button group toggle\n * or menu in the onMouseClick method\n * @type {?}\n */\nButtonGroup.prototype._overflowMenuToggleClicked;\n/** @type {?} */\nButtonGroup.prototype.buttonGroupNewService;\n/** @type {?} */\nButtonGroup.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport const /** @type {?} */ menuPositions: string[] =\n    [\"bottom-left\", \"bottom-right\", \"top-left\", \"top-right\", \"left-bottom\", \"left-top\", \"right-bottom\", \"right-top\"];\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\n\nimport {Component, EventEmitter, Input, Optional, Output, SkipSelf, TemplateRef, ViewChild} from '@angular/core';\n\nimport {ButtonInGroupService} from '../providers/buttonInGroup.service';\nexport class Button {\nprivate _enableService: boolean = false;\n\n     templateRef: TemplateRef<Button>;\n/**\n * @param {?} buttonInGroupService\n */\nconstructor(\npublic buttonInGroupService: ButtonInGroupService) {}\nprivate _inMenu: boolean = false;\n/**\n * @return {?}\n */\nget inMenu(): boolean {\n        return this._inMenu;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset inMenu(value: boolean) {\n        value = !!value;\n        if (this._inMenu !== value) {\n            this._inMenu = value;\n            // We check if the service flag is enabled\n            // and if the service exists because the service is optional\n            if (this._enableService && this.buttonInGroupService) {\n                this.buttonInGroupService.updateButtonGroup(this);\n            }\n        }\n    }\nprivate _classNames: string = \"btn\";\n/**\n * @return {?}\n */\nget classNames(): string {\n        return this._classNames;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset classNames(value: string) {\n        if (typeof value === \"string\") {\n            const /** @type {?} */ classNames: string[] = value.split(\" \");\n            if (classNames.indexOf(\"btn\") === -1) {\n                classNames.push(\"btn\");\n            }\n            this._classNames = classNames.join(\" \");\n        }\n    }\nprivate _name: string = null;\n/**\n * @return {?}\n */\nget name(): string {\n        return this._name;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset name(value: string) {\n        if (typeof value === \"string\") {\n            this._name = value;\n        }\n    }\nprivate _type: string = null;\n/**\n * @return {?}\n */\nget type(): string {\n        return this._type;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset type(value: string) {\n        if (typeof value === \"string\") {\n            this._type = value;\n        }\n    }\nprivate _disabled: any = null;\n/**\n * @return {?}\n */\nget disabled(): any {\n        return this._disabled;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) {\n        if (value !== null && value !== false) {\n            this._disabled = \"\";\n        } else {\n            this._disabled = null;\n        }\n    }\n\n     _click: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n/**\n * @return {?}\n */\nemitClick(): void {\n        this._click.emit(true);\n    }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n        this._enableService = true;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: \"clr-button\",\n    template: `\n        <ng-template #buttonProjectedRef>\n            <button \n                [class]=\"classNames\" \n                (click)=\"emitClick()\"\n                [attr.type]=\"type\"\n                [attr.name]=\"name\"\n                [attr.disabled]=\"disabled\">\n                <ng-content></ng-content>\n            </button>\n        </ng-template>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ButtonInGroupService, decorators: [{ type: SkipSelf }, { type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'templateRef': [{ type: ViewChild, args: [\"buttonProjectedRef\", ] },],\n'inMenu': [{ type: Input, args: [\"clrInMenu\", ] },],\n'classNames': [{ type: Input, args: [\"class\", ] },],\n'name': [{ type: Input, args: [\"name\", ] },],\n'type': [{ type: Input, args: [\"type\", ] },],\n'disabled': [{ type: Input, args: [\"disabled\", ] },],\n'_click': [{ type: Output, args: [\"click\", ] },],\n};\n}\n\nfunction Button_tsickle_Closure_declarations() {\n/** @type {?} */\nButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nButton.ctorParameters;\n/** @type {?} */\nButton.propDecorators;\n/** @type {?} */\nButton.prototype._enableService;\n/** @type {?} */\nButton.prototype.templateRef;\n/** @type {?} */\nButton.prototype._inMenu;\n/** @type {?} */\nButton.prototype._classNames;\n/** @type {?} */\nButton.prototype._name;\n/** @type {?} */\nButton.prototype._type;\n/** @type {?} */\nButton.prototype._disabled;\n/** @type {?} */\nButton.prototype._click;\n/** @type {?} */\nButton.prototype.buttonInGroupService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\nimport {Button} from '../button-group/button';\nexport class ButtonInGroupService {\nprivate _changes: Subject<Button> = new Subject<Button>();\n/**\n * @return {?}\n */\nget changes(): Observable<Button> {\n        return this._changes.asObservable();\n    }\n/**\n * @param {?} button\n * @return {?}\n */\nupdateButtonGroup(button: Button): void {\n        this._changes.next(button);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ButtonInGroupService_tsickle_Closure_declarations() {\n/** @type {?} */\nButtonInGroupService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nButtonInGroupService.ctorParameters;\n/** @type {?} */\nButtonInGroupService.prototype._changes;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {POPOVER_DIRECTIVES} from './index';\nexport class ClrCommonPopoverModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: [CommonModule], declarations: [POPOVER_DIRECTIVES], exports: [POPOVER_DIRECTIVES]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrCommonPopoverModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrCommonPopoverModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrCommonPopoverModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {PopoverDirectiveOld} from './popover-old.directive';\n\nexport {PopoverDirectiveOld} from './popover-old.directive';\n\nexport const /** @type {?} */ POPOVER_DIRECTIVES: Type<any>[] = [PopoverDirectiveOld];\n","/*\n * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive, EmbeddedViewRef, EventEmitter, Input, Output, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {Point, Popover, PopoverOptions} from './popover';\n\nlet /** @type {?} */ openCount: number = 0;\nconst /** @type {?} */ waiting: Array<() => void> = [];\nexport class PopoverDirectiveOld {\nprivate _popoverInstance: Popover;\nprivate _subscription: Subscription;\n\n     anchorElem: any;\n     anchorPoint: Point;\n     popoverPoint: Point;\n     popoverOptions: PopoverOptions = {};\n     clrPopoverOldChange = new EventEmitter<boolean>(false);\n/**\n * @param {?} templateRef\n * @param {?} viewContainer\n */\nconstructor(private templateRef: TemplateRef<any>,\nprivate viewContainer: ViewContainerRef) {}\n/**\n * @param {?} open\n * @return {?}\n */\nset clrPopoverOld(open: boolean) {\n        if (open) {\n            if (this.popoverOptions.allowMultipleOpen) {\n                this.createPopover();\n            } else {\n                if (openCount === 0) {\n                    this.createPopover();\n                } else {\n                    waiting.push(() => {\n                        this.createPopover();\n                    });\n                }\n            }\n        } else {\n            this.viewContainer.clear();\n            this.destroyPopover();\n\n            if (!this.popoverOptions.allowMultipleOpen) {\n                if (waiting.length > 0) {\n                    const /** @type {?} */ createPopoverFn = waiting.shift();\n                    createPopoverFn();\n                }\n            }\n        }\n    }\n/**\n * @return {?}\n */\ncreatePopover() {\n        const /** @type {?} */ embeddedViewRef: EmbeddedViewRef<any> = /** @type {?} */((\n            <EmbeddedViewRef<any>>this.viewContainer.createEmbeddedView(this.templateRef)));\n\n        // TODO: Not sure of the risks associated with using this. Find an alternative.\n        // Needed for find the correct height and width of dynamically created views\n        // inside of the popover. For Eg: Button Groups\n        embeddedViewRef.detectChanges();\n\n        // filter out other nodes in the view ref so we are only left with element nodes\n        const /** @type {?} */ elementNodes: HTMLElement[] = embeddedViewRef.rootNodes.filter((node: any) => {\n            return node.nodeType === 1;\n        });\n\n        // we take the first element node in the embedded view; usually there should only be one anyways\n        this._popoverInstance = new Popover(elementNodes[0]);\n        this._subscription =\n            this._popoverInstance.anchor(this.anchorElem, this.anchorPoint, this.popoverPoint, this.popoverOptions)\n                .subscribe(() => {\n                    this.clrPopoverOldChange.emit(false);\n                });\n        openCount++;\n    }\n/**\n * @return {?}\n */\ndestroyPopover() {\n        if (this._popoverInstance) {\n            this._subscription.unsubscribe();\n            this._popoverInstance.release();\n            delete this._popoverInstance;\n            openCount--;\n        }\n    }\n/**\n * @return {?}\n */\nngOnDestroy() {\n        this.destroyPopover();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"[clrPopoverOld]\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'anchorElem': [{ type: Input, args: [\"clrPopoverOldAnchor\", ] },],\n'anchorPoint': [{ type: Input, args: [\"clrPopoverOldAnchorPoint\", ] },],\n'popoverPoint': [{ type: Input, args: [\"clrPopoverOldPopoverPoint\", ] },],\n'popoverOptions': [{ type: Input, args: [\"clrPopoverOldOptions\", ] },],\n'clrPopoverOldChange': [{ type: Output, args: [\"clrPopoverOldChange\", ] },],\n'clrPopoverOld': [{ type: Input },],\n};\n}\n\nfunction PopoverDirectiveOld_tsickle_Closure_declarations() {\n/** @type {?} */\nPopoverDirectiveOld.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPopoverDirectiveOld.ctorParameters;\n/** @type {?} */\nPopoverDirectiveOld.propDecorators;\n/** @type {?} */\nPopoverDirectiveOld.prototype._popoverInstance;\n/** @type {?} */\nPopoverDirectiveOld.prototype._subscription;\n/** @type {?} */\nPopoverDirectiveOld.prototype.anchorElem;\n/** @type {?} */\nPopoverDirectiveOld.prototype.anchorPoint;\n/** @type {?} */\nPopoverDirectiveOld.prototype.popoverPoint;\n/** @type {?} */\nPopoverDirectiveOld.prototype.popoverOptions;\n/** @type {?} */\nPopoverDirectiveOld.prototype.clrPopoverOldChange;\n/** @type {?} */\nPopoverDirectiveOld.prototype.templateRef;\n/** @type {?} */\nPopoverDirectiveOld.prototype.viewContainer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Do NOT Angular this up. It assumes we're in the DOM, plays with native elements, ...\n * It could potentially be used as part of clarity-ui as a vanilla Javascript helper.\n */\n\n\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nexport type Point = number;\nexport let Point: any = {};\nPoint.RIGHT_CENTER = 0;\nPoint.RIGHT_TOP = 1;\nPoint.RIGHT_BOTTOM = 2;\nPoint.TOP_CENTER = 3;\nPoint.TOP_RIGHT = 4;\nPoint.TOP_LEFT = 5;\nPoint.BOTTOM_CENTER = 6;\nPoint.BOTTOM_RIGHT = 7;\nPoint.BOTTOM_LEFT = 8;\nPoint.LEFT_CENTER = 9;\nPoint.LEFT_TOP = 10;\nPoint.LEFT_BOTTOM = 11;\nPoint[Point.RIGHT_CENTER] = \"RIGHT_CENTER\";\nPoint[Point.RIGHT_TOP] = \"RIGHT_TOP\";\nPoint[Point.RIGHT_BOTTOM] = \"RIGHT_BOTTOM\";\nPoint[Point.TOP_CENTER] = \"TOP_CENTER\";\nPoint[Point.TOP_RIGHT] = \"TOP_RIGHT\";\nPoint[Point.TOP_LEFT] = \"TOP_LEFT\";\nPoint[Point.BOTTOM_CENTER] = \"BOTTOM_CENTER\";\nPoint[Point.BOTTOM_RIGHT] = \"BOTTOM_RIGHT\";\nPoint[Point.BOTTOM_LEFT] = \"BOTTOM_LEFT\";\nPoint[Point.LEFT_CENTER] = \"LEFT_CENTER\";\nPoint[Point.LEFT_TOP] = \"LEFT_TOP\";\nPoint[Point.LEFT_BOTTOM] = \"LEFT_BOTTOM\";\n\n\nexport interface PopoverOptions {\n    offsetX?: number;\n    offsetY?: number;\n    useAnchorParent?: boolean;\n    allowMultipleOpen?: boolean;\n}\n\nconst /** @type {?} */ POSITION_RELATIVE = \"relative\";\nconst /** @type {?} */ POSITION_ABSOLUTE = \"absolute\";\nconst /** @type {?} */ POSITION_FIXED = \"fixed\";\n\nconst /** @type {?} */ OVERFLOW_SCROLL = \"scroll\";\nconst /** @type {?} */ OVERFLOW_AUTO = \"auto\";\nexport class Popover {\nprivate _scroll: Subject<void>;\n/**\n * @param {?} element\n */\nconstructor(private element: any) {\n        // Browsers don't agree with what to do if some of these are not specified, so we set them all to be safe.\n        element.style.position = POSITION_ABSOLUTE;\n        element.style.top = 0;\n        element.style.bottom = \"auto\";\n        element.style.left = 0;\n        element.style.right = \"auto\";\n    }\n/**\n * @param {?} anchor\n * @param {?} anchorAlign\n * @param {?} popoverAlign\n * @param {?=} __3\n * @return {?}\n */\npublic anchor(anchor: any, anchorAlign: Point, popoverAlign: Point,\n                  {offsetX = 0, offsetY = 0, useAnchorParent = false}: PopoverOptions = {}): Observable<any> {\n        // TODO: we are assuming here that the popover is inside or next to the anchor.\n        // We'd need to go up the popover tree too otherwise\n\n        this.addScrollEventListeners(anchor);\n        if (useAnchorParent) {\n            anchor = anchor.parentNode;\n        }\n        // explicitly override anchor's style to static\n        anchor.style.position = \"static\";\n\n        const /** @type {?} */ anchorRect = anchor.getBoundingClientRect();\n        const /** @type {?} */ popoverRect = this.element.getBoundingClientRect();\n\n        // position of left top corner of anchor + the offset\n        let /** @type {?} */ leftDiff: number = anchorRect.left - popoverRect.left + offsetX;\n        let /** @type {?} */ topDiff: number = anchorRect.top - popoverRect.top + offsetY;\n\n        // first, adjust positioning based on anchor's align point\n        switch (anchorAlign) {\n            case Point.LEFT_TOP:\n            case Point.TOP_LEFT:\n                break;\n            case Point.TOP_CENTER:\n                leftDiff += anchorRect.width / 2;\n                break;\n            case Point.TOP_RIGHT:\n                leftDiff += anchorRect.width;\n                break;\n            case Point.RIGHT_TOP:\n                leftDiff += anchorRect.width;\n                break;\n            case Point.LEFT_BOTTOM:\n                topDiff += anchorRect.height;\n                break;\n            case Point.BOTTOM_LEFT:\n                topDiff += anchorRect.height;\n                break;\n            case Point.BOTTOM_CENTER:\n                topDiff += anchorRect.height;\n                leftDiff += anchorRect.width / 2;\n                break;\n            case Point.BOTTOM_RIGHT:\n                topDiff += anchorRect.height;\n                leftDiff += anchorRect.width;\n                break;\n            case Point.RIGHT_BOTTOM:\n                topDiff += anchorRect.height;\n                leftDiff += anchorRect.width;\n                break;\n            case Point.LEFT_CENTER:\n                topDiff += anchorRect.height / 2;\n                break;\n            case Point.RIGHT_CENTER:\n                topDiff += anchorRect.height / 2;\n                leftDiff += anchorRect.width;\n                break;\n            default:\n        }\n\n        // second, adjust positioning based on popover's align point\n        switch (popoverAlign) {\n            case Point.LEFT_TOP:\n            case Point.TOP_LEFT:\n                break;\n            case Point.TOP_CENTER:\n                leftDiff -= popoverRect.width / 2;\n                break;\n            case Point.TOP_RIGHT:\n                leftDiff -= popoverRect.width;\n                break;\n            case Point.RIGHT_TOP:\n                leftDiff -= popoverRect.width;\n                break;\n            case Point.LEFT_BOTTOM:\n                topDiff -= popoverRect.height;\n                break;\n            case Point.BOTTOM_LEFT:\n                topDiff -= popoverRect.height;\n                break;\n            case Point.BOTTOM_CENTER:\n                topDiff -= popoverRect.height;\n                leftDiff -= popoverRect.width / 2;\n                break;\n            case Point.BOTTOM_RIGHT:\n                topDiff -= popoverRect.height;\n                leftDiff -= popoverRect.width;\n                break;\n            case Point.RIGHT_BOTTOM:\n                topDiff -= popoverRect.height;\n                leftDiff -= popoverRect.width;\n                break;\n            case Point.LEFT_CENTER:\n                topDiff -= popoverRect.height / 2;\n                break;\n            case Point.RIGHT_CENTER:\n                topDiff -= popoverRect.height / 2;\n                leftDiff -= popoverRect.width;\n                break;\n            default:\n        }\n\n        // Third, adjust with popover's margins based on the two align points.\n        // Here, we make an assumption that popover is primarily positioned outside the\n        // anchor with minor offset. Without this assumption, it's impossible to apply\n        // the popover's margins in a predictable way. For example, assume that a popover\n        // and its anchor are exactly the same size. if a popover is positioned inside the\n        // anchor (which is technically possible), then it becomes impossible to know what to do\n        // if the popover has a non-zero margin value all around (because applying the margin in\n        // all four directions will result in no margin visually, which isn't what we want).\n        // Therefore, our logic makes assumptions about margins of interest given the points,\n        // and only covers the cases where popover is outside the anchor.\n\n        const /** @type {?} */ popoverComputedStyle = getComputedStyle(this.element);\n        const /** @type {?} */ marginLeft = parseInt(popoverComputedStyle.marginLeft, 10);\n        const /** @type {?} */ marginRight = parseInt(popoverComputedStyle.marginRight, 10);\n        const /** @type {?} */ marginTop = parseInt(popoverComputedStyle.marginTop, 10);\n        const /** @type {?} */ marginBottom = parseInt(popoverComputedStyle.marginBottom, 10);\n\n        switch (anchorAlign) {\n            case Point.LEFT_TOP:\n            case Point.TOP_LEFT:\n            case Point.TOP_RIGHT:\n            case Point.RIGHT_TOP:\n                if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n                    topDiff -= marginBottom;\n                    leftDiff -= marginRight;\n                }\n                if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n                    topDiff -= marginTop;\n                    leftDiff += marginLeft;\n                }\n                if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n                    topDiff += marginTop;\n                    leftDiff += marginLeft;\n                }\n                if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n                    topDiff += marginTop;\n                    leftDiff -= marginRight;\n                }\n                break;\n            case Point.LEFT_BOTTOM:\n            case Point.BOTTOM_LEFT:\n            case Point.BOTTOM_RIGHT:\n            case Point.RIGHT_BOTTOM:\n                if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n                    topDiff -= marginBottom;\n                    leftDiff += marginLeft;\n                }\n                if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n                    topDiff -= marginBottom;\n                    leftDiff -= marginRight;\n                }\n                if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n                    topDiff += marginTop;\n                    leftDiff += marginLeft;\n                }\n                if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n                    topDiff += marginTop;\n                    leftDiff -= marginRight;\n                }\n                break;\n            case Point.TOP_CENTER:\n                topDiff -= marginBottom;\n                leftDiff += marginLeft;\n                leftDiff -= marginRight;\n                break;\n            case Point.BOTTOM_CENTER:\n                topDiff += marginTop;\n                leftDiff += marginLeft;\n                leftDiff -= marginRight;\n                break;\n            case Point.LEFT_CENTER:\n                topDiff += marginTop;\n                topDiff -= marginBottom;\n                leftDiff -= marginRight;\n                break;\n            case Point.RIGHT_CENTER:\n                topDiff += marginTop;\n                topDiff -= marginBottom;\n                leftDiff += marginLeft;\n                break;\n            default:\n        }\n\n        this.element.style.transform = `translateX(${leftDiff}px) translateY(${topDiff}px)`;\n        return this._scroll.asObservable();\n    }\n/**\n * @return {?}\n */\npublic release() {\n        this.element.style.transform = \"\";\n        this.removeScrollEventListeners();\n    }\n/**\n * @param {?} container\n * @return {?}\n */\nprivate isPositioned(container: any) {\n        const /** @type {?} */ position = getComputedStyle(container).position;\n        return position === POSITION_RELATIVE || position === POSITION_ABSOLUTE || position === POSITION_FIXED;\n    }\nprivate scrollableElements: HTMLElement[] = [];\n/**\n * @return {?}\n */\nprivate emitScrollEvent() {\n        this._scroll.next();\n    }\nprivate boundOnScrollListener: any = this.emitScrollEvent.bind(this);\n/**\n * @param {?} e\n * @return {?}\n */\nprivate addScrollEventListeners(e: any) {\n        this._scroll = new Subject<void>();\n        const /** @type {?} */ anchor: any = e;\n        let /** @type {?} */ current: any = e;\n        while (current && current !== document) {\n            if (this.scrolls(current)) {\n                current.addEventListener(\"scroll\", this.boundOnScrollListener);\n                this.scrollableElements.push(current);\n            }\n            if (current !== anchor && this.isPositioned(current)) {\n                break;\n            }\n            current = current.parentNode;\n        }\n    }\n/**\n * @return {?}\n */\nprivate removeScrollEventListeners() {\n        for (const /** @type {?} */ elem of this.scrollableElements) {\n            elem.removeEventListener(\"scroll\", this.boundOnScrollListener);\n        }\n        this.scrollableElements.length = 0;\n        if (this._scroll) {\n            this._scroll.complete();\n            delete this._scroll;\n        }\n    }\n/**\n * @param {?} container\n * @return {?}\n */\nprivate scrolls(container: any): boolean {\n        const /** @type {?} */ computedStyles = getComputedStyle(container);\n        return computedStyles.overflowX === OVERFLOW_SCROLL || computedStyles.overflowX === OVERFLOW_AUTO ||\n            computedStyles.overflowY === OVERFLOW_SCROLL || computedStyles.overflowY === OVERFLOW_AUTO;\n    }\n}\n\nfunction Popover_tsickle_Closure_declarations() {\n/** @type {?} */\nPopover.prototype._scroll;\n/** @type {?} */\nPopover.prototype.scrollableElements;\n/** @type {?} */\nPopover.prototype.boundOnScrollListener;\n/** @type {?} */\nPopover.prototype.element;\n}\n\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {ICON_DIRECTIVES} from './index';\nexport class ClrIconModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{imports: [CommonModule], declarations: [ICON_DIRECTIVES], exports: [ICON_DIRECTIVES]}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrIconModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClrIconModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrIconModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Type} from '@angular/core';\nimport {IconCustomTag} from './icon';\n\nexport const /** @type {?} */ ICON_DIRECTIVES: Type<any>[] = [IconCustomTag];\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Directive} from '@angular/core';\nexport class IconCustomTag {\n    // No behavior\n    // The only purpose is to \"declare\" the tag in Angular\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: \"clr-icon\"}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction IconCustomTag_tsickle_Closure_declarations() {\n/** @type {?} */\nIconCustomTag.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIconCustomTag.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Subject","POSITIONS","DOCUMENT","tokenFactory","state","BehaviorSubject","trigger"],"mappings":"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"}
